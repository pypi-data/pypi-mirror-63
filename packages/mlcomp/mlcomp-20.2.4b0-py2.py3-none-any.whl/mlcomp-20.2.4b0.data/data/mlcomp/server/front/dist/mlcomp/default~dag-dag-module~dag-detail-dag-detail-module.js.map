{"version":3,"sources":["webpack:///./src/app/dag/dag-detail/code/code.component.css","webpack:///./src/app/dag/dag-detail/code/code.component.html","webpack:///./src/app/dag/dag-detail/code/code.component.ts","webpack:///./src/app/dag/dag-detail/config/config.component.css","webpack:///./src/app/dag/dag-detail/config/config.component.html","webpack:///./src/app/dag/dag-detail/config/config.component.ts","webpack:///./src/app/dag/dag-detail/dag-detail-routing.module.ts","webpack:///./src/app/dag/dag-detail/dag-detail.module.ts","webpack:///./src/app/dag/dag-detail/dag-detail/dag-detail.component.html","webpack:///./src/app/dag/dag-detail/dag-detail/dag-detail.component.ts","webpack:///./src/app/dag/dag-detail/dag-detail/dag-detail.service.ts","webpack:///./src/app/dag/dag-detail/graph/graph.component.css","webpack:///./src/app/dag/dag-detail/graph/graph.component.html","webpack:///./src/app/dag/dag-detail/graph/graph.component.ts"],"names":[],"mappings":"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","file":"default~dag-dag-module~dag-detail-dag-detail-module.js","sourcesContent":["module.exports = \".mat-tree-node { min-height: 20px }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFnL2RhZy1kZXRhaWwvY29kZS9jb2RlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsaUJBQWlCLGlCQUFpQiIsImZpbGUiOiJzcmMvYXBwL2RhZy9kYWctZGV0YWlsL2NvZGUvY29kZS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLm1hdC10cmVlLW5vZGUgeyBtaW4taGVpZ2h0OiAyMHB4IH0iXX0= */\"","module.exports = \"<link\\n        href=\\\"https://fonts.googleapis.com/icon?family=Material+Icons\\\"\\n        rel=\\\"stylesheet\\\">\\n\\n<table style=\\\"width: 100%;\\\"  (click)=\\\"code_td_click($event)\\\">\\n  <td class=\\\"mat-app-background basic-container\\\" style=\\\"width: 20%\\\">\\n\\n    <button mat-raised-button\\n            style=\\\"margin-top: 15px;margin-bottom: 10px\\\"\\n            (click)=\\\"download()\\\">\\n        Download\\n    </button>\\n\\n    <mat-tree [dataSource]=\\\"dataSource\\\" [treeControl]=\\\"treeControl\\\">\\n      <!-- This is the tree node template for leaf nodes -->\\n      <mat-tree-node *matTreeNodeDef=\\\"let node\\\" matTreeNodePadding>\\n        <!-- use a disabled button to provide padding for tree leaf -->\\n\\n        <button mat-icon-button\\n                mat-button\\n                class=\\\"mat-icon-button\\\"\\n                (click)=\\\"node_click(node)\\\">\\n\\n        </button>\\n\\n        {{node.name}}\\n\\n      </mat-tree-node>\\n\\n      <mat-tree-node\\n              *matTreeNodeDef=\\\"let node;when: hasChild\\\"\\n              matTreeNodePadding>\\n        <button mat-icon-button matTreeNodeToggle\\n                [attr.aria-label]=\\\"'toggle ' + node.name\\\"\\n                class=\\\"mat-icon-button\\\">\\n\\n          <mat-icon class=\\\"mat-icon-rtl-mirror\\\">\\n            {{treeControl.isExpanded(node) ? 'expand_more' : 'chevron_right'}}\\n          </mat-icon>\\n\\n        </button>\\n\\n        {{node.name}}\\n\\n       </mat-tree-node>\\n\\n      </mat-tree>\\n\\n  </td>\\n\\n  <td style=\\\"width: 50%; height:100%\\\">\\n\\n    <div id=\\\"codeholder\\\" (dblclick)=\\\"code_double_click()\\\">\\n\\n    </div>\\n\\n  </td>\\n\\n  <td style=\\\"width: 30%; height:100%\\\">\\n\\n  </td>\\n</table>\\n\"","import {AfterViewInit, Component} from '@angular/core';\nimport {FlatTreeControl} from '@angular/cdk/tree';\nimport {MatTreeFlatDataSource, MatTreeFlattener} from '@angular/material/tree';\nimport {FlatNode, CodeNode} from '../../../models'\nimport {DagDetailService} from \"../dag-detail/dag-detail.service\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {MessageService} from \"../../../message.service\";\nimport {DynamicresourceService} from \"../../../dynamicresource.service\";\nimport {DomSanitizer} from \"@angular/platform-browser\";\n\n@Component({\n    selector: 'app-code',\n    templateUrl: './code.component.html',\n    styleUrls: ['./code.component.css']\n})\n\nexport class CodeComponent implements AfterViewInit {\n\n    public dag: number;\n    private current_node: FlatNode;\n\n    private transformer = (node: CodeNode, level: number) => {\n        return {\n            expandable: !!node.children && node.children.length > 0,\n            name: node.name,\n            level: level,\n            content: node.content,\n            id: node.id,\n            dag: node.dag,\n            storage: node.storage\n        };\n    };\n\n    treeControl = new FlatTreeControl<FlatNode>(\n        node => node.level, node => node.expandable);\n\n    treeFlattener = new MatTreeFlattener(\n        this.transformer,\n        node => node.level,\n        node => node.expandable,\n        node => node.children);\n\n    dataSource = new MatTreeFlatDataSource(this.treeControl,\n        this.treeFlattener);\n\n    constructor(private service: DagDetailService,\n                private route: ActivatedRoute,\n                private message_service: MessageService,\n                private resource_service: DynamicresourceService,\n                private sanitizer: DomSanitizer\n    ) {\n\n    }\n\n    ngAfterViewInit() {\n        let self = this;\n        this.service.get_code(this.dag).subscribe(res => {\n            self.dataSource.data = res.items;\n        });\n        this.resource_service.load('prettify',\n            'prettify-yaml',\n            'prettify-css')\n    }\n\n    prettify_lang(ext: string) {\n        switch (ext) {\n            case 'py':\n                return 'lang-py';\n            case 'yaml':\n            case 'yml':\n                return 'lang-yaml';\n            case 'json':\n                return 'lang-json';\n            default:\n                return ''\n        }\n    }\n\n    node_click(node: FlatNode) {\n        let pre = document.createElement('pre');\n        pre.textContent = node.content;\n        let ext = node.name.indexOf('.') != -1 ?\n            node.name.split('.')[1].toLowerCase() : '';\n        pre.className = \"prettyprint linenums \" + this.prettify_lang(ext);\n        let code_holder = document.getElementById('codeholder');\n        code_holder.innerHTML = '';\n        code_holder.appendChild(pre);\n\n        window['PR'].prettyPrint();\n        this.current_node = node;\n    }\n\n    hasChild = (_: number, node: FlatNode) => node.expandable;\n\n\n    download() {\n        this.service.code_download(this.dag).subscribe(x => {\n            let url = window.URL.createObjectURL(x);\n            let link = document.createElement('a');\n            link.setAttribute('download', String(this.dag));\n            link.setAttribute('href', url);\n            document.body.append(link);\n\n            link.click();\n\n            document.body.removeChild(link);\n        });\n    }\n\n    code_double_click() {\n        if (!this.current_node) {\n            return;\n        }\n\n        let node = this.current_node;\n        let code_holder = document.getElementById('codeholder');\n        let pre = document.createElement('textarea');\n        let height = code_holder.clientHeight;\n\n        pre.setAttribute('style',\n            `width:100%; height:${height}px;display:block`);\n\n        pre.textContent = node.content;\n        code_holder.innerHTML = '';\n        code_holder.appendChild(pre);\n    }\n\n    code_td_click(event) {\n        if (!this.current_node) {\n            return;\n        }\n        if (event.target.type == 'textarea') {\n            return;\n        }\n        let code_holder = document.getElementById('codeholder');\n        if (code_holder && code_holder.children.length > 0) {\n            if (code_holder.children[0].tagName == 'TEXTAREA') {\n                // @ts-ignore\n                this.current_node.content = code_holder.children[0].value;\n                this.service.update_code(\n                    this.current_node.id,\n                    this.current_node.content,\n                    this.current_node.dag,\n                    this.current_node.storage\n                ).subscribe(x=>{\n                    this.current_node.id = x.file\n                });\n                this.node_click(this.current_node);\n                return;\n            }\n        }\n    }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2RhZy9kYWctZGV0YWlsL2NvbmZpZy9jb25maWcuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<div id=\\\"codeholder\\\">\\n\\n</div>\\n\"","import {AfterViewInit, Component} from '@angular/core';\nimport {MessageService} from '../../../message.service'\nimport {DagDetailService} from \"../dag-detail/dag-detail.service\";\nimport {DynamicresourceService} from \"../../../dynamicresource.service\";\n\n@Component({\n    selector: 'app-config',\n    templateUrl: './config.component.html',\n    styleUrls: ['./config.component.css']\n})\nexport class ConfigComponent implements AfterViewInit {\n    public dag: number;\n    config: string;\n\n    constructor(private message_service: MessageService,\n                private service: DagDetailService,\n                private resource_service: DynamicresourceService,\n    ) {\n    }\n\n    ngAfterViewInit() {\n        let self = this;\n        this.resource_service.load(\n            'prettify',\n            'prettify-yaml',\n            'prettify-css').then(() => {\n            self.service.get_config(self.dag).subscribe(res => {\n                let node = document.createElement('pre');\n                node.textContent = res.data;\n                node.className = \"prettyprint linenums lang-yaml\";\n                let codeholder = document.getElementById(\n                    'codeholder');\n\n                codeholder.appendChild(node);\n                window['PR'].prettyPrint();\n            });\n        })\n    }\n\n}\n","import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\n\nimport {CodeComponent} from './code/code.component';\nimport {ConfigComponent} from './config/config.component';\nimport {GraphComponent} from './graph/graph.component';\nimport {DagDetailComponent} from './dag-detail/dag-detail.component';\nimport {TasksComponent} from \"../../task/tasks/tasks.component\"\n\n\nconst routes: Routes = [\n    {\n\n        path: '',\n        component: DagDetailComponent,\n        children: [\n            {path: 'code', component: CodeComponent},\n            {path: 'config', component: ConfigComponent},\n            {path: 'graph', component: GraphComponent},\n            {path: 'tasks', component: TasksComponent}\n        ]\n\n\n    }\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forChild(routes)\n    ],\n    exports: [\n        RouterModule\n    ]\n})\nexport class DagDetailRoutingModule {\n}","import {NgModule} from '@angular/core';\nimport {CodeComponent} from './code/code.component';\nimport {ConfigComponent} from './config/config.component';\nimport {GraphComponent} from './graph/graph.component';\n\nimport {DagDetailRoutingModule} from './dag-detail-routing.module';\nimport { DagDetailComponent } from './dag-detail/dag-detail.component';\nimport {SharedModule} from \"../../shared.module\";\n\n@NgModule({\n    imports: [\n        DagDetailRoutingModule,\n        SharedModule\n    ],\n    declarations: [\n        CodeComponent,\n        ConfigComponent,\n        GraphComponent,\n        DagDetailComponent\n    ]\n})\nexport class DagDetailModule {\n}","module.exports = \"<div class=\\\"mat-elevation-z8\\\">\\n    <table mat-table [dataSource]=\\\"dataSource\\\" matSort>\\n\\n        <ng-container matColumnDef=\\\"project\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n                Project\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{element.name}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"id\\\">\\n            <th\\n                    mat-header-cell\\n                    *matHeaderCellDef\\n                    style=\\\"width: 18px\\\"\\n                    mat-sort-header>\\n                Id\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 18px\\\">\\n                {{element.id}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"name\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header> Name</th>\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                <a\\n                        class=\\\"col-1-4\\\"\\n                        routerLink=\\\"/dags/dag-detail/{{element.id}}/tasks\\\">\\n                    {{element.name}}\\n                </a>\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"task_count\\\">\\n            <th\\n                    mat-header-cell\\n                    *matHeaderCellDef\\n                    mat-sort-header\\n                    style=\\\"width: 18px\\\">\\n                Tasks\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"width: 18px\\\">\\n                {{element.task_count}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"created\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n                Created\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{element.created| date:\\\"MM.dd H:mm:ss\\\"}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"started\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n                Started\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{element.started| date:\\\"MM.dd H:mm:ss\\\"}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"last_activity\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n                Last activity\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{element.last_activity| date:\\\"MM.dd H:mm:ss\\\"}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"duration\\\">\\n            <th mat-header-cell *matHeaderCellDef mat-sort-header>\\n                Duration\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                {{element.duration}}\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"img_size\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n                Image size\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"min-width: 120px\\\">\\n                <mat-icon\\n                        svgIcon=\\\"remove\\\"\\n                        matTooltip=\\\"Remove\\\"\\n                        (click)=\\\"remove_imgs(element)\\\">\\n                </mat-icon>\\n\\n                {{size(element.img_size)}}\\n\\n\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"file_size\\\">\\n            <th mat-header-cell *matHeaderCellDef>\\n                File size\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\" style=\\\"min-width: 120px\\\">\\n                <mat-icon\\n                        svgIcon=\\\"remove\\\"\\n                        matTooltip=\\\"Remove\\\"\\n                        (click)=\\\"remove_files(element)\\\"\\n                        [class.transparent]=\\\"has_unfinished(element)\\\">\\n                </mat-icon>\\n\\n                {{size(element.file_size)}}\\n\\n\\n            </td>\\n        </ng-container>\\n\\n\\n        <ng-container matColumnDef=\\\"task_status\\\">\\n            <th mat-header-cell *matHeaderCellDef style=\\\"text-align: center\\\">\\n                Task status\\n            </th>\\n\\n            <td mat-cell *matCellDef=\\\"let element\\\">\\n                <svg height=\\\"40\\\" width=\\\"220px\\\" style=\\\"display: block;\\\">\\n                    <g matTooltip=\\\"{{status.name}}\\\"\\n                       [attr.transform]=\\\"'translate('+\\n                       (16+i*30).toString()+','+'20)'\\\"\\n                       *ngFor=\\\"let status of element.task_statuses;\\n                        let i = index\\\">\\n\\n                        <text\\n                                fill=\\\"black\\\"\\n                                text-anchor=\\\"middle\\\"\\n                                vertical-align=\\\"middle\\\"\\n                                font-size=\\\"10\\\" y=\\\"3\\\">{{status.count > 0 ?\\n                            status.count : ''}}</text>\\n\\n                        <circle [attr.stroke-width]=\\\"status.count>0?2:1\\\"\\n                                (click)=\\\"status_click(element, status)\\\"\\n                                [attr.stroke]=\\n                                        \\\"color_for_task_status(status.name,\\n                                        status.count)\\\"\\n                                fill-opacity=\\\"0\\\" r=\\\"12.5\\\"\\n                                style=\\\"cursor: pointer; opacity: 1;\\\">\\n                        </circle>\\n\\n                    </g>\\n\\n                </svg>\\n\\n            </td>\\n        </ng-container>\\n\\n        <ng-container matColumnDef=\\\"links\\\">\\n            <th mat-header-cell *matHeaderCellDef\\n                style=\\\"text-align: center; width: 14%;\\\"> Links\\n            </th>\\n            <td mat-cell *matCellDef=\\\"let element\\\"\\n                style=\\\"padding-left: 1%;min-width: 120px\\\">\\n                <mat-icon svgIcon=\\\"config\\\"\\n                          matTooltip=\\\"Config\\\"\\n                          routerLink=\\\"/dags/dag-detail/{{element.id}}/config\\\">\\n\\n                </mat-icon>\\n\\n                <mat-icon svgIcon=\\\"code\\\"\\n                          matTooltip=\\\"Code\\\"\\n                          routerLink=\\\"/dags/dag-detail/{{element.id}}/code\\\">\\n\\n                </mat-icon>\\n\\n                <mat-icon svgIcon=\\\"graph\\\"\\n                          matTooltip=\\\"Graph\\\"\\n                          routerLink=\\\"/dags/dag-detail/{{element.id}}/graph\\\">\\n\\n                </mat-icon>\\n\\n                <mat-icon svgIcon=\\\"start\\\"\\n                          matTooltip=\\\"Start\\\"\\n                          (click)=\\\"start(element)\\\"\\n                          [class.transparent]=\\n                                  \\\"!can_start(element)\\\">\\n                </mat-icon>\\n\\n                <mat-icon svgIcon=\\\"stop\\\" matTooltip=\\\"Stop\\\"\\n                          (click)=\\\"stop(element)\\\"\\n                          [class.transparent]=\\\"!has_unfinished(element)\\\">\\n                </mat-icon>\\n\\n                <mat-icon svgIcon=\\\"remove\\\" matTooltip=\\\"Remove\\\"\\n                          (click)=\\\"remove(element)\\\">\\n                </mat-icon>\\n\\n                <mat-icon svgIcon=\\\"report\\\"\\n                          matTooltip=\\\"Report\\\"\\n                          (click)=\\\"toogle_report(element)\\\"\\n                          *ngIf=\\\"report\\\"\\n                          [class.transparent]=\\\"!element.report_full\\\">\\n                </mat-icon>\\n\\n            </td>\\n        </ng-container>\\n\\n        <tr mat-header-row *matHeaderRowDef=\\\"displayed_columns\\\"></tr>\\n        <tr mat-row *matRowDef=\\\"let row; columns: displayed_columns;\\\"></tr>\\n    </table>\\n\\n\\n</div>\\n\\n\\n<nav>\\n    <a routerLink=\\\"./tasks\\\" routerLinkActive=\\\"active\\\">Tasks</a>\\n    <a routerLink=\\\"./config\\\" routerLinkActive=\\\"active\\\">Config</a>\\n    <a routerLink=\\\"./code\\\" routerLinkActive=\\\"active\\\">Code</a>\\n    <a routerLink=\\\"./graph\\\" routerLinkActive=\\\"active\\\">Graph</a>\\n</nav>\\n\\n<router-outlet (activate)=\\\"onActivate($event)\\\"></router-outlet>\"","import {Component} from '@angular/core';\nimport {DagsComponent} from \"../../dags/dags.component\";\n\n@Component({\n    selector: 'app-dag-detail',\n    templateUrl: './dag-detail.component.html',\n    styleUrls: ['../../dags/dags.component.css']\n})\nexport class DagDetailComponent extends DagsComponent {\n    get_filter(): any {\n        let res = super.get_filter();\n        res.id = parseInt(this.route.snapshot.paramMap.get('id'));\n        return res;\n    }\n\n    onActivate(component) {\n        component.dag = parseInt(this.route.snapshot.paramMap.get('id'));\n    }\n}\n","import {Injectable} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {catchError, tap} from 'rxjs/operators';\nimport {AppSettings} from '../../../app-settings'\nimport {\n    BaseResult,\n    CodeResult,\n    Data,\n    Graph,\n    UpdateCodeResult\n} from \"../../../models\";\nimport {BaseService} from \"../../../base.service\";\nimport {HttpHeaders, HttpParams, HttpResponse} from \"@angular/common/http\";\n\n@Injectable({providedIn: 'root'})\nexport class DagDetailService extends BaseService {\n    protected collection_part: string;\n    protected single_part: string;\n    private url = `${AppSettings.API_ENDPOINT}`;\n\n    get_config(dag_id: number): Observable<Data<string>> {\n        return this.http.post<Data<string>>(`${this.url}config`, dag_id)\n            .pipe(\n                tap(_ => this.log('fetched config')),\n                catchError(this.handleError<Data<string>>('config',\n                    new Data<string>()))\n            );\n    }\n\n    get_code(dag_id: number): Observable<CodeResult> {\n        return this.http.post<CodeResult>(`${this.url}code`, dag_id)\n            .pipe(\n                tap(_ => this.log('fetched code')),\n                catchError(this.handleError<CodeResult>('config',\n                    {'items': []}))\n            );\n    }\n\n    get_graph(dag_id: number): Observable<Graph> {\n        return this.http.post<Graph>(`${this.url}graph`, dag_id)\n            .pipe(\n                tap(_ => this.log('fetched graph')),\n                catchError(this.handleError<Graph>('graph', new Graph()))\n            );\n    }\n\n    code_download(dag_id: number): any {\n        let url = `${this.url}code_download`;\n        let params = new HttpParams().set('id', String(dag_id));\n\n        return this.http.get<any>(\n            url, {params: params, responseType: 'blob' as 'json'}\n        )\n            .pipe(\n                tap(_ => this.log('fetched archive')),\n                catchError(this.handleError<any>())\n            );\n\n    }\n\n    update_code(\n        file_id: number, content: string, dag: number, storage: number\n    ): Observable<UpdateCodeResult> {\n        return this.http.post<UpdateCodeResult>(`${this.url}update_code`, {\n            'file_id': file_id,\n            'content': content,\n            'dag': dag,\n            'storage': storage\n        })\n            .pipe(\n                tap(_ => this.log('fetched update_code')),\n                catchError(this.handleError<UpdateCodeResult>())\n            );\n    }\n}\n","module.exports = \"#mynetwork {\\n    border: 1px solid black;\\n    background: white;\\n    display: inline-block;\\n    width: 100%;\\n    height: 800px;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFnL2RhZy1kZXRhaWwvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHVCQUF1QjtJQUN2QixpQkFBaUI7SUFDakIscUJBQXFCO0lBQ3JCLFdBQVc7SUFDWCxhQUFhO0FBQ2pCIiwiZmlsZSI6InNyYy9hcHAvZGFnL2RhZy1kZXRhaWwvZ3JhcGgvZ3JhcGguY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiNteW5ldHdvcmsge1xuICAgIGJvcmRlcjogMXB4IHNvbGlkIGJsYWNrO1xuICAgIGJhY2tncm91bmQ6IHdoaXRlO1xuICAgIGRpc3BsYXk6IGlubGluZS1ibG9jaztcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDgwMHB4O1xufSJdfQ== */\"","module.exports = \"<div id=\\\"mynetwork\\\"></div>\"","import {AfterViewInit, Component, OnDestroy} from '@angular/core';\nimport {MessageService} from \"../../../message.service\";\nimport {ActivatedRoute, Router} from \"@angular/router\";\nimport {DagDetailService} from \"../dag-detail/dag-detail.service\";\nimport {DynamicresourceService} from \"../../../dynamicresource.service\";\nimport {AppSettings} from \"../../../app-settings\";\n\n@Component({\n    selector: 'app-graph',\n    templateUrl: './graph.component.html',\n    styleUrls: ['./graph.component.css']\n})\nexport class GraphComponent implements AfterViewInit, OnDestroy {\n\n    public dag: number;\n    interval: number;\n    data;\n\n    constructor(private message_service: MessageService,\n                private route: ActivatedRoute,\n                private service: DagDetailService,\n                private resource_service: DynamicresourceService,\n                private router: Router\n    ) {\n    }\n\n    ngAfterViewInit() {\n        this.load_network();\n        this.interval = setInterval(() =>\n            this.load_network(), 3000);\n    }\n\n    private load_network() {\n        let self = this;\n        this.resource_service.load('vis.min.js', 'vis.min.css').\n        then(res => {\n            this.service.get_graph(this.dag).subscribe(res => {\n                res.nodes.forEach(obj =>\n                    obj.color = AppSettings.status_colors[obj.status]);\n\n                res.edges.forEach(obj =>\n                    obj.color = AppSettings.status_colors[obj.status]);\n\n                let vis = window['vis'];\n                let nodes = new vis.DataSet(res.nodes);\n                // create an array with edges\n                let edges = new vis.DataSet(res.edges);\n\n                // create a network\n                let container = document.getElementById('mynetwork');\n                if (!this.data) {\n                    this.data = {\n                        nodes: nodes,\n                        edges: edges\n                    };\n\n                    let options = {\n                        layout: {\n                            hierarchical: {\n                                direction: 'LR',\n                                \"sortMethod\": \"directed\",\n\n                            },\n\n                        },\n\n                        edges: {\n                            arrows: 'to'\n                        }\n                    };\n\n                    let network = new vis.Network(container,\n                        this.data,\n                        options);\n\n                    network.on('doubleClick', function (properties) {\n                        var ids = properties.nodes;\n                        var clickedNodes = nodes.get(ids);\n                        self.router.navigate(\n                            ['/tasks/task-detail/' +\n                            clickedNodes[0].id +\n                            '/logs']);\n                    });\n                    return;\n                }\n\n                for (let item of res.nodes) {\n                    this.data.nodes.update(item)\n                }\n                for (let item of res.edges) {\n                    this.data.edges.update(item)\n                }\n\n\n            });\n        }).catch(err => this.message_service.add(err));\n\n\n    }\n\n    ngOnDestroy(): void {\n        clearInterval(this.interval);\n    }\n}\n"],"sourceRoot":""}