[unix_http_server]
file=%(ENV_HOME)s/ifile/run/supervisor.sock   ; the path to the socket file


[supervisord]
logfile=%(ENV_HOME)s/ifile/log/supervisord.log ; main log file; default $CWD/supervisord.log
logfile_maxbytes=50MB        ; max main logfile bytes b4 rotation; default 50MB
logfile_backups=10           ; # of main logfile backups; 0 means none, default 10
loglevel=info               ; log level; default info; others: debug,warn,trace
pidfile=%(ENV_HOME)s/ifile/run/supervisord.pid ; supervisord pidfile; default supervisord.pid
nodaemon=false               ; start in foreground if true; default false
minfds=1024                  ; min. avail startup file descriptors; default 1024
minprocs=200                 ; min. avail process descriptors;default 200


[rpcinterface:supervisor]
supervisor.rpcinterface_factory = supervisor.rpcinterface:make_main_rpcinterface


[supervisorctl]
serverurl=unix://%(ENV_HOME)s/ifile/run/supervisor.sock ; use a unix:// URL  for a unix socket


[program:web]
command=%(ENV_HOME)s/ienv/bin/ifile run web    ; the program (relative uses PATH, can take args)
# directory=%(ENV_tm_home)s/                                             ; directory to cwd to before exec (def no cwd)
priority=100                                                                    ; the relative start priority (default 999)
autostart=true                                                                  ; start at supervisord start (default: true)
startsecs=5                                                                     ; # of secs prog must stay up to be running (def. 1)
startretries=3                                                                  ; max # of serial start failures when starting (default 3)
autorestart=true                                                                ; when to restart if exited after running (def: unexpected)

[program:rpc]
command=%(ENV_HOME)s/ienv/bin/ifile run rpc    ; the program (relative uses PATH, can take args)
# directory=%(ENV_tm_home)s/                                             ; directory to cwd to before exec (def no cwd)
priority=100                                                                    ; the relative start priority (default 999)
autostart=true                                                                  ; start at supervisord start (default: true)
startsecs=5                                                                     ; # of secs prog must stay up to be running (def. 1)
startretries=3                                                                  ; max # of serial start failures when starting (default 3)
autorestart=true                                                                ; when to restart if exited after running (def: unexpected)

[program:ftp]
command=%(ENV_HOME)s/ienv/bin/ifile run ftp    ; the program (relative uses PATH, can take args)
# directory=%(ENV_tm_home)s/                                             ; directory to cwd to before exec (def no cwd)
priority=100                                                                    ; the relative start priority (default 999)
autostart=true                                                                  ; start at supervisord start (default: true)
startsecs=5                                                                     ; # of secs prog must stay up to be running (def. 1)
startretries=3                                                                  ; max # of serial start failures when starting (default 3)
autorestart=true                                                                ; when to restart if exited after running (def: unexpected)

[program:beat]
command=%(ENV_HOME)s/ienv/bin/ifile run beat    ; the program (relative uses PATH, can take args)
# directory=%(ENV_tm_home)s/                                             ; directory to cwd to before exec (def no cwd)
priority=100                                                                    ; the relative start priority (default 999)
autostart=true                                                                  ; start at supervisord start (default: true)
startsecs=5                                                                     ; # of secs prog must stay up to be running (def. 1)
startretries=3                                                                  ; max # of serial start failures when starting (default 3)
autorestart=true                                                                ; when to restart if exited after running (def: unexpected)
