# coding: utf-8

"""
    Kibernetika project, backend component

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ApplicationApplicationModelVersion(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'author': 'ModelsUser',
        'config': 'ModelsApplicationModelConfig',
        'created': 'str',
        'download_url': 'str',
        'editing': 'bool',
        'files_count': 'int',
        'message': 'str',
        'size_bytes': 'int',
        'source': 'ModelsApplicationModelSource',
        'status': 'str',
        'status_error': 'str',
        'updated': 'str',
        'uploading': 'bool',
        'user_id': 'str',
        'version': 'str'
    }

    attribute_map = {
        'author': 'Author',
        'config': 'Config',
        'created': 'Created',
        'download_url': 'DownloadURL',
        'editing': 'Editing',
        'files_count': 'FilesCount',
        'message': 'Message',
        'size_bytes': 'SizeBytes',
        'source': 'Source',
        'status': 'Status',
        'status_error': 'StatusError',
        'updated': 'Updated',
        'uploading': 'Uploading',
        'user_id': 'UserID',
        'version': 'Version'
    }

    def __init__(self, author=None, config=None, created=None, download_url=None, editing=None, files_count=None, message=None, size_bytes=None, source=None, status=None, status_error=None, updated=None, uploading=None, user_id=None, version=None):  # noqa: E501
        """ApplicationApplicationModelVersion - a model defined in Swagger"""  # noqa: E501

        self._author = None
        self._config = None
        self._created = None
        self._download_url = None
        self._editing = None
        self._files_count = None
        self._message = None
        self._size_bytes = None
        self._source = None
        self._status = None
        self._status_error = None
        self._updated = None
        self._uploading = None
        self._user_id = None
        self._version = None
        self.discriminator = None

        if author is not None:
            self.author = author
        if config is not None:
            self.config = config
        if created is not None:
            self.created = created
        if download_url is not None:
            self.download_url = download_url
        if editing is not None:
            self.editing = editing
        if files_count is not None:
            self.files_count = files_count
        if message is not None:
            self.message = message
        if size_bytes is not None:
            self.size_bytes = size_bytes
        if source is not None:
            self.source = source
        if status is not None:
            self.status = status
        if status_error is not None:
            self.status_error = status_error
        if updated is not None:
            self.updated = updated
        if uploading is not None:
            self.uploading = uploading
        if user_id is not None:
            self.user_id = user_id
        self.version = version

    @property
    def author(self):
        """Gets the author of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The author of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: ModelsUser
        """
        return self._author

    @author.setter
    def author(self, author):
        """Sets the author of this ApplicationApplicationModelVersion.


        :param author: The author of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: ModelsUser
        """

        self._author = author

    @property
    def config(self):
        """Gets the config of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The config of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: ModelsApplicationModelConfig
        """
        return self._config

    @config.setter
    def config(self, config):
        """Sets the config of this ApplicationApplicationModelVersion.


        :param config: The config of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: ModelsApplicationModelConfig
        """

        self._config = config

    @property
    def created(self):
        """Gets the created of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The created of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._created

    @created.setter
    def created(self, created):
        """Sets the created of this ApplicationApplicationModelVersion.


        :param created: The created of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """

        self._created = created

    @property
    def download_url(self):
        """Gets the download_url of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The download_url of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._download_url

    @download_url.setter
    def download_url(self, download_url):
        """Sets the download_url of this ApplicationApplicationModelVersion.


        :param download_url: The download_url of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """

        self._download_url = download_url

    @property
    def editing(self):
        """Gets the editing of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The editing of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: bool
        """
        return self._editing

    @editing.setter
    def editing(self, editing):
        """Sets the editing of this ApplicationApplicationModelVersion.


        :param editing: The editing of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: bool
        """

        self._editing = editing

    @property
    def files_count(self):
        """Gets the files_count of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The files_count of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: int
        """
        return self._files_count

    @files_count.setter
    def files_count(self, files_count):
        """Sets the files_count of this ApplicationApplicationModelVersion.


        :param files_count: The files_count of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: int
        """

        self._files_count = files_count

    @property
    def message(self):
        """Gets the message of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The message of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._message

    @message.setter
    def message(self, message):
        """Sets the message of this ApplicationApplicationModelVersion.


        :param message: The message of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """

        self._message = message

    @property
    def size_bytes(self):
        """Gets the size_bytes of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The size_bytes of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: int
        """
        return self._size_bytes

    @size_bytes.setter
    def size_bytes(self, size_bytes):
        """Sets the size_bytes of this ApplicationApplicationModelVersion.


        :param size_bytes: The size_bytes of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: int
        """

        self._size_bytes = size_bytes

    @property
    def source(self):
        """Gets the source of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The source of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: ModelsApplicationModelSource
        """
        return self._source

    @source.setter
    def source(self, source):
        """Sets the source of this ApplicationApplicationModelVersion.


        :param source: The source of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: ModelsApplicationModelSource
        """

        self._source = source

    @property
    def status(self):
        """Gets the status of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The status of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._status

    @status.setter
    def status(self, status):
        """Sets the status of this ApplicationApplicationModelVersion.


        :param status: The status of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """

        self._status = status

    @property
    def status_error(self):
        """Gets the status_error of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The status_error of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._status_error

    @status_error.setter
    def status_error(self, status_error):
        """Sets the status_error of this ApplicationApplicationModelVersion.


        :param status_error: The status_error of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """

        self._status_error = status_error

    @property
    def updated(self):
        """Gets the updated of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The updated of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._updated

    @updated.setter
    def updated(self, updated):
        """Sets the updated of this ApplicationApplicationModelVersion.


        :param updated: The updated of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """

        self._updated = updated

    @property
    def uploading(self):
        """Gets the uploading of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The uploading of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: bool
        """
        return self._uploading

    @uploading.setter
    def uploading(self, uploading):
        """Sets the uploading of this ApplicationApplicationModelVersion.


        :param uploading: The uploading of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: bool
        """

        self._uploading = uploading

    @property
    def user_id(self):
        """Gets the user_id of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The user_id of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._user_id

    @user_id.setter
    def user_id(self, user_id):
        """Sets the user_id of this ApplicationApplicationModelVersion.


        :param user_id: The user_id of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """

        self._user_id = user_id

    @property
    def version(self):
        """Gets the version of this ApplicationApplicationModelVersion.  # noqa: E501


        :return: The version of this ApplicationApplicationModelVersion.  # noqa: E501
        :rtype: str
        """
        return self._version

    @version.setter
    def version(self, version):
        """Sets the version of this ApplicationApplicationModelVersion.


        :param version: The version of this ApplicationApplicationModelVersion.  # noqa: E501
        :type: str
        """
        if version is None:
            raise ValueError("Invalid value for `version`, must not be `None`")  # noqa: E501

        self._version = version

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApplicationApplicationModelVersion, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApplicationApplicationModelVersion):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
