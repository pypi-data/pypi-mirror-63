# coding: utf-8

"""
    Kibernetika project, backend component

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: 0.2
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class MlappServingSpecOptions(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'audience_host': 'str',
        'edge_host': 'str',
        'no_cache': 'bool',
        'save_stream_previews': 'bool'
    }

    attribute_map = {
        'audience_host': 'audienceHost',
        'edge_host': 'edgeHost',
        'no_cache': 'noCache',
        'save_stream_previews': 'saveStreamPreviews'
    }

    def __init__(self, audience_host=None, edge_host=None, no_cache=None, save_stream_previews=None):  # noqa: E501
        """MlappServingSpecOptions - a model defined in Swagger"""  # noqa: E501

        self._audience_host = None
        self._edge_host = None
        self._no_cache = None
        self._save_stream_previews = None
        self.discriminator = None

        if audience_host is not None:
            self.audience_host = audience_host
        if edge_host is not None:
            self.edge_host = edge_host
        if no_cache is not None:
            self.no_cache = no_cache
        if save_stream_previews is not None:
            self.save_stream_previews = save_stream_previews

    @property
    def audience_host(self):
        """Gets the audience_host of this MlappServingSpecOptions.  # noqa: E501


        :return: The audience_host of this MlappServingSpecOptions.  # noqa: E501
        :rtype: str
        """
        return self._audience_host

    @audience_host.setter
    def audience_host(self, audience_host):
        """Sets the audience_host of this MlappServingSpecOptions.


        :param audience_host: The audience_host of this MlappServingSpecOptions.  # noqa: E501
        :type: str
        """

        self._audience_host = audience_host

    @property
    def edge_host(self):
        """Gets the edge_host of this MlappServingSpecOptions.  # noqa: E501


        :return: The edge_host of this MlappServingSpecOptions.  # noqa: E501
        :rtype: str
        """
        return self._edge_host

    @edge_host.setter
    def edge_host(self, edge_host):
        """Sets the edge_host of this MlappServingSpecOptions.


        :param edge_host: The edge_host of this MlappServingSpecOptions.  # noqa: E501
        :type: str
        """

        self._edge_host = edge_host

    @property
    def no_cache(self):
        """Gets the no_cache of this MlappServingSpecOptions.  # noqa: E501


        :return: The no_cache of this MlappServingSpecOptions.  # noqa: E501
        :rtype: bool
        """
        return self._no_cache

    @no_cache.setter
    def no_cache(self, no_cache):
        """Sets the no_cache of this MlappServingSpecOptions.


        :param no_cache: The no_cache of this MlappServingSpecOptions.  # noqa: E501
        :type: bool
        """

        self._no_cache = no_cache

    @property
    def save_stream_previews(self):
        """Gets the save_stream_previews of this MlappServingSpecOptions.  # noqa: E501


        :return: The save_stream_previews of this MlappServingSpecOptions.  # noqa: E501
        :rtype: bool
        """
        return self._save_stream_previews

    @save_stream_previews.setter
    def save_stream_previews(self, save_stream_previews):
        """Sets the save_stream_previews of this MlappServingSpecOptions.


        :param save_stream_previews: The save_stream_previews of this MlappServingSpecOptions.  # noqa: E501
        :type: bool
        """

        self._save_stream_previews = save_stream_previews

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(MlappServingSpecOptions, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, MlappServingSpecOptions):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
