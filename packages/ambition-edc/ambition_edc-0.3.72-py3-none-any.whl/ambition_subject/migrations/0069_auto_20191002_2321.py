# Generated by Django 2.2.5 on 2019-10-02 21:21

import django.core.validators
from django.db import migrations, models
import django_crypto_fields.fields.firstname_field
import django_crypto_fields.fields.lastname_field


class Migration(migrations.Migration):

    dependencies = [("ambition_subject", "0068_auto_20190821_1652")]

    operations = [
        migrations.AlterField(
            model_name="historicalmedicalexpenses",
            name="travel_time",
            field=models.CharField(
                blank=True,
                help_text="Specify as hours:minutes (format HH:MM)",
                max_length=8,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^([0-9]{1,3}h([0-5]?[0-9]m)?)$",
                        message="Invalid format. Expected something like 1h20m, 11h5m, etc",
                    )
                ],
                verbose_name="How long did it take you to reach there?",
            ),
        ),
        migrations.AlterField(
            model_name="historicalmedicalexpensestwodetail",
            name="transport_duration",
            field=models.CharField(
                blank=True,
                help_text="Specify as hours:minutes (format HH:MM)",
                max_length=8,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^([0-9]{1,3}h([0-5]?[0-9]m)?)$",
                        message="Invalid format. Expected something like 1h20m, 11h5m, etc",
                    )
                ],
                verbose_name="How long did it take you to reach there?",
            ),
        ),
        migrations.AlterField(
            model_name="historicalsubjectconsent",
            name="first_name",
            field=django_crypto_fields.fields.firstname_field.FirstnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="historicalsubjectconsent",
            name="last_name",
            field=django_crypto_fields.fields.lastname_field.LastnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
                verbose_name="Surname",
            ),
        ),
        migrations.AlterField(
            model_name="historicalsubjectconsent",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="historicalsubjectreconsent",
            name="subject_identifier",
            field=models.CharField(db_index=True, max_length=50),
        ),
        migrations.AlterField(
            model_name="historicalsubjectrequisition",
            name="item_type",
            field=models.CharField(
                choices=[
                    ("N/A", "Not applicable"),
                    ("tube", "Tube"),
                    ("finger_prick", "Finger prick"),
                    ("swab", "Swab"),
                    ("dbs", "DBS Card"),
                    ("OTHER", "Other"),
                ],
                default="N/A",
                max_length=25,
                verbose_name="Item collection type",
            ),
        ),
        migrations.AlterField(
            model_name="historicalsubjectrequisition",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="historicalsubjectvisit",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="medicalexpenses",
            name="travel_time",
            field=models.CharField(
                blank=True,
                help_text="Specify as hours:minutes (format HH:MM)",
                max_length=8,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^([0-9]{1,3}h([0-5]?[0-9]m)?)$",
                        message="Invalid format. Expected something like 1h20m, 11h5m, etc",
                    )
                ],
                verbose_name="How long did it take you to reach there?",
            ),
        ),
        migrations.AlterField(
            model_name="medicalexpensestwodetail",
            name="transport_duration",
            field=models.CharField(
                blank=True,
                help_text="Specify as hours:minutes (format HH:MM)",
                max_length=8,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        "^([0-9]{1,3}h([0-5]?[0-9]m)?)$",
                        message="Invalid format. Expected something like 1h20m, 11h5m, etc",
                    )
                ],
                verbose_name="How long did it take you to reach there?",
            ),
        ),
        migrations.AlterField(
            model_name="subjectconsent",
            name="first_name",
            field=django_crypto_fields.fields.firstname_field.FirstnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
            ),
        ),
        migrations.AlterField(
            model_name="subjectconsent",
            name="last_name",
            field=django_crypto_fields.fields.lastname_field.LastnameField(
                blank=True,
                help_text=" (Encryption: RSA local)",
                max_length=71,
                null=True,
                validators=[
                    django.core.validators.RegexValidator(
                        message="Ensure name consist of letters only in upper case",
                        regex="^([A-Z]+$|[A-Z]+\\ [A-Z]+)$",
                    )
                ],
                verbose_name="Surname",
            ),
        ),
        migrations.AlterField(
            model_name="subjectconsent",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="subjectreconsent",
            name="subject_identifier",
            field=models.CharField(max_length=50, unique=True),
        ),
        migrations.AlterField(
            model_name="subjectrequisition",
            name="item_type",
            field=models.CharField(
                choices=[
                    ("N/A", "Not applicable"),
                    ("tube", "Tube"),
                    ("finger_prick", "Finger prick"),
                    ("swab", "Swab"),
                    ("dbs", "DBS Card"),
                    ("OTHER", "Other"),
                ],
                default="N/A",
                max_length=25,
                verbose_name="Item collection type",
            ),
        ),
        migrations.AlterField(
            model_name="subjectrequisition",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
        migrations.AlterField(
            model_name="subjectvisit",
            name="subject_identifier",
            field=models.CharField(max_length=50),
        ),
    ]
