# Generated by Django 2.0.4 on 2018-04-09 16:06

import django.core.validators
from django.db import migrations, models
import edc_model.validators.date


class Migration(migrations.Migration):

    dependencies = [("ambition_subject", "0008_auto_20180409_1213")]

    operations = [
        migrations.AlterModelOptions(
            name="historicalamphotericinmisseddoses",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical amphotericin missed doses",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalbloodresult",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Blood Result",
            },
        ),
        migrations.AlterModelOptions(
            name="historicaleducation",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Health Economics: Education",
            },
        ),
        migrations.AlterModelOptions(
            name="historicaleducationhoh",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Health Economics: Education (Person who earns the highest income)",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalfluconazolemisseddoses",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical fluconazole missed doses",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalflucytosinemisseddoses",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical flucytosine missed doses",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalfollowup",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Follow-up",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalfollowupdiagnoses",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Follow-up diagnosis",
            },
        ),
        migrations.AlterModelOptions(
            name="historicallumbarpuncturecsf",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Lumbar Puncture/Cerebrospinal Fluid",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalmedicalexpenses",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Health Economics: Medical Expenses",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalmedicalexpensestwo",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Health Economics: Medical Expenses Part 2",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalmedicalexpensestwodetail",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Medical Expenses Part 2: Detail",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalmicrobiology",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Microbiology",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalpatienthistory",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Patient's History",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalpkpdcrf",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical PK/PD",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalpkpdextrasamples",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical PK/PD Extra Samples",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalpreviousopportunisticinfection",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical previous opportunistic infection",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalradiology",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Radiology",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalsignificantdiagnoses",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Significant Diagnosis",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalsubjectconsent",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical subject consent",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalsubjectreconsent",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Subject re-consent",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalsubjectrequisition",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical subject requisition",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalsubjectvisit",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical subject visit",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalweek16",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical week16",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalweek2",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Week 2",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalweek4",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Week 4",
            },
        ),
        migrations.AlterModelOptions(
            name="historicalweek4diagnoses",
            options={
                "get_latest_by": "history_date",
                "ordering": ("-history_date", "-history_id"),
                "verbose_name": "historical Week 4 Diagnoses",
            },
        ),
        migrations.AddField(
            model_name="historicalweek2",
            name="research_discharge_date",
            field=models.DateField(
                blank=True,
                null=True,
                validators=[edc_model.validators.date.date_not_future],
                verbose_name="On which date did the research team feel the patient was well enough to go home?",
            ),
        ),
        migrations.AddField(
            model_name="week2",
            name="research_discharge_date",
            field=models.DateField(
                blank=True,
                null=True,
                validators=[edc_model.validators.date.date_not_future],
                verbose_name="On which date did the research team feel the patient was well enough to go home?",
            ),
        ),
        migrations.AlterField(
            model_name="historicallumbarpuncturecsf",
            name="closing_pressure",
            field=models.IntegerField(
                blank=True,
                help_text="Units cm of H<sub>2</sub>O",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(99),
                ],
            ),
        ),
        migrations.AlterField(
            model_name="lumbarpuncturecsf",
            name="closing_pressure",
            field=models.IntegerField(
                blank=True,
                help_text="Units cm of H<sub>2</sub>O",
                null=True,
                validators=[
                    django.core.validators.MinValueValidator(0),
                    django.core.validators.MaxValueValidator(99),
                ],
            ),
        ),
    ]
