# Generated by Django 2.1 on 2018-08-11 21:29

from django.db import migrations
from django.core.exceptions import ObjectDoesNotExist
from django.core.management.color import color_style

style = color_style()


def update_screening_datetime(apps, schema_editor):
    SubjectScreening = apps.get_model("ambition_screening", "subjectscreening")
    SubjectConsent = apps.get_model("ambition_subject", "subjectconsent")
    RegisteredSubject = apps.get_model("edc_registration", "registeredsubject")
    for subject_consent in SubjectConsent._default_manager.filter(
        screening_datetime__isnull=True
    ):
        try:
            subject_screening = SubjectScreening._default_manager.get(
                screening_identifier=subject_consent.screening_identifier
            )
        except ObjectDoesNotExist:
            pass
        else:
            subject_consent.screening_datetime = (
                subject_screening.report_datetime or subject_screening.created
            )
            subject_consent.save_base(raw=True)
        try:
            registered_subject = RegisteredSubject._default_manager.get(
                screening_identifier=subject_consent.screening_identifier
            )
        except ObjectDoesNotExist:
            pass
        else:
            registered_subject.screening_datetime = (
                subject_screening.report_datetime or subject_screening.created
            )
            registered_subject.save_base(raw=True)


class Migration(migrations.Migration):

    dependencies = [
        ("ambition_subject", "0016_auto_20180811_2328"),
        ("ambition_screening", "0002_auto_20180706_1519"),
        ("edc_registration", "0012_auto_20180116_1528"),
    ]

    operations = [migrations.RunPython(update_screening_datetime)]
