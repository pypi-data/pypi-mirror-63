# coding: utf-8

"""
    Allegro REST API

    https://developer.allegro.pl/about  # noqa: E501

    The version of the OpenAPI document: 2020.03.10
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import allegro_api
from allegro_api.models.seller_create_rebate_request_dto import SellerCreateRebateRequestDto  # noqa: E501
from allegro_api.rest import ApiException

class TestSellerCreateRebateRequestDto(unittest.TestCase):
    """SellerCreateRebateRequestDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test SellerCreateRebateRequestDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = allegro_api.models.seller_create_rebate_request_dto.SellerCreateRebateRequestDto()  # noqa: E501
        if include_optional :
            return SellerCreateRebateRequestDto(
                benefits = [
                    allegro_api.models.benefit.Benefit(
                        specification = allegro_api.models.benefit_specification.BenefitSpecification(
                            type = '0', ), )
                    ], 
                offer_criteria = [
                    allegro_api.models.seller_rebate_offer_criterion.SellerRebateOfferCriterion(
                        offers = [
                            allegro_api.models.seller_rebate_offer_criterion_offers.SellerRebateOfferCriterion_offers(
                                id = '1233432', 
                                quantity = 5, 
                                promotion_entry_point = False, )
                            ], 
                        type = 'CONTAINS_OFFERS', )
                    ]
            )
        else :
            return SellerCreateRebateRequestDto(
                benefits = [
                    allegro_api.models.benefit.Benefit(
                        specification = allegro_api.models.benefit_specification.BenefitSpecification(
                            type = '0', ), )
                    ],
                offer_criteria = [
                    allegro_api.models.seller_rebate_offer_criterion.SellerRebateOfferCriterion(
                        offers = [
                            allegro_api.models.seller_rebate_offer_criterion_offers.SellerRebateOfferCriterion_offers(
                                id = '1233432', 
                                quantity = 5, 
                                promotion_entry_point = False, )
                            ], 
                        type = 'CONTAINS_OFFERS', )
                    ],
        )

    def testSellerCreateRebateRequestDto(self):
        """Test SellerCreateRebateRequestDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
