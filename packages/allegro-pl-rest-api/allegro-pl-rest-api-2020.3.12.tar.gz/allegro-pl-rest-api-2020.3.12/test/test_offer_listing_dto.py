# coding: utf-8

"""
    Allegro REST API

    https://developer.allegro.pl/about  # noqa: E501

    The version of the OpenAPI document: 2020.03.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import allegro_api
from allegro_api.models.offer_listing_dto import OfferListingDto  # noqa: E501
from allegro_api.rest import ApiException

class TestOfferListingDto(unittest.TestCase):
    """OfferListingDto unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test OfferListingDto
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = allegro_api.models.offer_listing_dto.OfferListingDto()  # noqa: E501
        if include_optional :
            return OfferListingDto(
                id = '2865624934', 
                name = 'Buty damskie adidas', 
                category = allegro_api.models.offer_category.OfferCategory(
                    id = '257929', ), 
                primary_image = allegro_api.models.offer_listing_dto_image.OfferListingDtoImage(
                    url = 'https://a.allegroimg.com/original/05a2af/929c6dae4fb8721a8539582eb421', ), 
                selling_mode = allegro_api.models.selling_mode.SellingMode(
                    format = 'BUY_NOW', 
                    price = null, 
                    minimal_price = null, 
                    starting_price = null, ), 
                sale_info = allegro_api.models.offer_listing_dto_v1_sale_info.OfferListingDtoV1SaleInfo(
                    current_price = null, 
                    bidders_count = 4, ), 
                stock = allegro_api.models.offer_listing_dto_v1_stock.OfferListingDtoV1Stock(
                    available = 23, 
                    sold = 3, ), 
                stats = allegro_api.models.offer_listing_dto_v1_stats.OfferListingDtoV1Stats(
                    watchers_count = 99, 
                    visits_count = 56, ), 
                publication = allegro_api.models.offer_listing_dto_v1_publication.OfferListingDtoV1Publication(
                    status = 'INACTIVE', 
                    starting_at = '2019-05-29T12:00:00Z', 
                    started_at = '2019-05-29T12:00:00Z', 
                    ending_at = '2019-06-30T12:00:00Z', 
                    ended_at = '2019-06-30T12:10:00Z', ), 
                after_sales_services = allegro_api.models.after_sales_services.AfterSalesServices(
                    implied_warranty = allegro_api.models.implied_warranty.ImpliedWarranty(
                        id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59', ), 
                    return_policy = allegro_api.models.return_policy.ReturnPolicy(
                        id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59', ), 
                    warranty = allegro_api.models.warranty.Warranty(
                        id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59', ), ), 
                additional_services = allegro_api.models.offer_additional_services.OfferAdditionalServices(
                    id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59', ), 
                external = allegro_api.models.external_id.ExternalId(
                    id = 'AH-129834', ), 
                delivery = allegro_api.models.offer_listing_dto_v1_delivery.OfferListingDtoV1Delivery(
                    shipping_rates = allegro_api.models.shipping_rates.ShippingRates(
                        id = '0', ), )
            )
        else :
            return OfferListingDto(
        )

    def testOfferListingDto(self):
        """Test OfferListingDto"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
