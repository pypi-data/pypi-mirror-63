# coding: utf-8

"""
    Allegro REST API

    https://developer.allegro.pl/about  # noqa: E501

    The version of the OpenAPI document: 2020.03.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import allegro_api
from allegro_api.models.wrapper_type_for_preview_conditions import WrapperTypeForPreviewConditions  # noqa: E501
from allegro_api.rest import ApiException

class TestWrapperTypeForPreviewConditions(unittest.TestCase):
    """WrapperTypeForPreviewConditions unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test WrapperTypeForPreviewConditions
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = allegro_api.models.wrapper_type_for_preview_conditions.WrapperTypeForPreviewConditions()  # noqa: E501
        if include_optional :
            return WrapperTypeForPreviewConditions(
                include_quoting_bundles = False, 
                offer = allegro_api.models.parameters_for_preview_price.ParametersForPreviewPrice(
                    category = allegro_api.models.category.Category(
                        id = '0', ), 
                    condition = 'NEW', 
                    duration = 'PT72H', 
                    has_any_quantity = True, 
                    number_of_big_photos = 56, 
                    number_of_photos = 56, 
                    quantity = 56, 
                    shop = False, 
                    sold_quantity = 56, 
                    type = 'shop', 
                    unit_price = 1.337, 
                    bold = True, 
                    highlight = True, 
                    department_page = True, 
                    emphasized = True, 
                    emphasized_highlight_bold_package = True, 
                    multi_variant = True, )
            )
        else :
            return WrapperTypeForPreviewConditions(
        )

    def testWrapperTypeForPreviewConditions(self):
        """Test WrapperTypeForPreviewConditions"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
