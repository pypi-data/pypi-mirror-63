# coding: utf-8

"""
    Allegro REST API

    https://developer.allegro.pl/about  # noqa: E501

    The version of the OpenAPI document: 2020.03.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import allegro_api
from allegro_api.models.refund_details import RefundDetails  # noqa: E501
from allegro_api.rest import ApiException

class TestRefundDetails(unittest.TestCase):
    """RefundDetails unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test RefundDetails
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = allegro_api.models.refund_details.RefundDetails()  # noqa: E501
        if include_optional :
            return RefundDetails(
                id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59', 
                payment = allegro_api.models.refund_payment.RefundPayment(
                    id = 'a6bee8b2-8b4e-11e9-8918-07b31163120a', ), 
                reason = 'REFUND', 
                status = 'SUCCESS', 
                created_at = '2017-05-17T08:36:57.292+02:00', 
                total_value = null, 
                line_items = [
                    allegro_api.models.refund_line_item.RefundLineItem(
                        id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59', 
                        type = 'QUANTITY', 
                        quantity = 5, 
                        value = allegro_api.models.refund_line_item_value.RefundLineItem_value(
                            amount = '0', 
                            currency = '0', ), )
                    ], 
                delivery = allegro_api.models.initialize_refund_delivery.InitializeRefund_delivery(
                    value = null, ), 
                overpaid = allegro_api.models.initialize_refund_overpaid.InitializeRefund_overpaid(
                    value = null, ), 
                surcharges = [
                    allegro_api.models.payments_surcharge.PaymentsSurcharge(
                        id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59', 
                        value = null, )
                    ], 
                additional_services = allegro_api.models.initialize_refund_additional_services.InitializeRefund_additionalServices(
                    value = null, )
            )
        else :
            return RefundDetails(
                id = '09f0b4cc-7880-11e9-8f9e-2a86e4085a59',
                reason = 'REFUND',
                status = 'SUCCESS',
                created_at = '2017-05-17T08:36:57.292+02:00',
                total_value = null,
        )

    def testRefundDetails(self):
        """Test RefundDetails"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
