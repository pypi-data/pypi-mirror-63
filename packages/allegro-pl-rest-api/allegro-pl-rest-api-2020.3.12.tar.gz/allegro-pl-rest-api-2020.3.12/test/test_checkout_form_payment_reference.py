# coding: utf-8

"""
    Allegro REST API

    https://developer.allegro.pl/about  # noqa: E501

    The version of the OpenAPI document: 2020.03.12
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import allegro_api
from allegro_api.models.checkout_form_payment_reference import CheckoutFormPaymentReference  # noqa: E501
from allegro_api.rest import ApiException

class TestCheckoutFormPaymentReference(unittest.TestCase):
    """CheckoutFormPaymentReference unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test CheckoutFormPaymentReference
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = allegro_api.models.checkout_form_payment_reference.CheckoutFormPaymentReference()  # noqa: E501
        if include_optional :
            return CheckoutFormPaymentReference(
                id = '0f8f1d13-7e9e-11e8-9b00-c5b0dfb78ea6', 
                type = 'CASH_ON_DELIVERY', 
                provider = 'P24', 
                finished_at = '2018-10-12T10:12:32.321Z', 
                paid_amount = allegro_api.models.price.Price(
                    amount = '123.45', 
                    currency = 'PLN', )
            )
        else :
            return CheckoutFormPaymentReference(
                id = '0f8f1d13-7e9e-11e8-9b00-c5b0dfb78ea6',
                type = 'CASH_ON_DELIVERY',
        )

    def testCheckoutFormPaymentReference(self):
        """Test CheckoutFormPaymentReference"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
