# AnimationData

# AnimationFrameData

# CapabilityData
consCtrlOut <= Output_consCtrlSend_capability(consCode:2); # consCtrlOut => Output_consCtrlSend_capability( consCode : 2 ); # consCtrlOut
myCapability <= myFunc(myArg1:1,myArg2:4); # myCapability  => myFunc( myArg1 : 1, myArg2 : 4 ); # myCapability
myCapability2 <= myFunc2(); # myCapability2 => myFunc2(); # myCapability2
myCapability3 <= myFunc3(myArg1:2); # myCapability3 => myFunc3( myArg1 : 2 ); # myCapability3
noneOut <= Output_noneSend_capability(); # noneOut     => Output_noneSend_capability(); # noneOut
sysCtrlOut <= Output_sysCtrlSend_capability(sysCode:1); # sysCtrlOut  => Output_sysCtrlSend_capability( sysCode : 1 ); # sysCtrlOut
usbKeyOut <= Output_usbCodeSend_capability(usbCode:1); # usbKeyOut => Output_usbCodeSend_capability( usbCode : 1 ); # usbKeyOut

# DefineData
mydefine <= myCdef; # mydefine => myCdef; # mydefine
mydefine2 <= myCdef2; # mydefine2 => myCdef2; # mydefine2
mydefine3 <= myCdef3; # mydefine3 => myCdef3; # mydefine3
mynumber <= myCnumber; # mynumber => myCnumber; # mynumber

# MappingData
S0x002 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S002[0]
S0x003 + S0x010, S0x020 : U0x028; # S[ 0x3 - 0x4 ] + S[ 0x10 ], S[ 0x20 ] : U"Enter"; # :0 S003 + 0 S016, 0 S032[0]
S0x003 : myCapability2(); # S0x3 : myCapability2(); # :0 S003[0]
S0x003 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S003[0]
S0x004 + S0x010, S0x020 : U0x028; # S[ 0x3 - 0x4 ] + S[ 0x10 ], S[ 0x20 ] : U"Enter"; # :0 S004 + 0 S016, 0 S032[0]
S0x004 : myCapability(8,37); # S[0x4] : myCapability( 0x8, 0x25 ); # :0 S004[0]
S0x004 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S004[0]
S0x005 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S005[0]
S0x006 : U0x004, U0x005, U0x006, U0x007, U0x000, U0x0e1 + U0x007, U0x009, U0x000, U0x0e1 + U0x009, U0x000; # S0x6 : 'abcdDfF'; # :0 S006[0]
S0x006 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S006[0]
S0x007 : U0x023; # S[ 0x7 - 0x9 ] : U"6"; # :0 S007[0]
S0x007 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S007[0]
S0x007, S0x002 : U0x023; # S[ 0x7 - 0x9 ], S[0x2,0x3] : U"6"; # :0 S007, 0 S002[0]
S0x008 : U0x023; # S[ 0x7 - 0x9 ] : U"6"; # :0 S008[0]
S0x008 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S008[0]
S0x008, S0x003 : U0x023; # S[ 0x7 - 0x9 ], S[0x2,0x3] : U"6"; # :0 S008, 0 S003[0]
S0x009 : U0x023; # S[ 0x7 - 0x9 ] : U"6"; # :0 S009[0]
S0x009 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S009[0]
S0x009, S0x002 : U0x023; # S[ 0x7 - 0x9 ], S[0x2,0x3] : U"6"; # :0 S009, 0 S002[0]
S0x00b : U0x029; # S0x0B : U["Esc"]; # :0 S011[0]
S0x00b :+ U0x014; # S0x0B :+ U["Q"]; # :+0 S011[0]
S0x00b :- U0x029; # S0x0B :- U["Esc"]; # :-0 S011[0]
S0x010 :+ U0x015; # S[ 0x2 - 0x9, 0x10 ] :+ U"r"; # :+0 S016[0]
S0x012 : U0x07a + U0x07b; # S0x12 : U[122] + U[123]; # :0 S018[0]
S0x028(20) : U0x004; # S0x28(20) : U"A"; # :0 S040(20)[0]
S0x029(P:10.0ms) : U0x004; # S0x29(P:10ms) : U"A"; # :0 S041(P:10.0ms)[0]
S0x030(P) : U0x004; # S0x30(P) : U"A"; # :0 S048(P)[0]
S0x031(H:20.0ms,R:1.0s) : U0x005; # S0x31(H:20ms, R:1s) : U"B"; # :0 S049(H:20.0ms,R:1.0s)[0]
S0x032(P,H,R) : U0x005; # S0x32(P,H,R) : U"B"; # :0 S050(P,H,R)[0]
S0x040 : U0x001; # S0x40 : U[0x1]; # :0 S064[0]
S0x041 : CONS0x030; # S0x41 : CONS[0x30]; # :0 S065[0]
S0x042 : CONS0x0b0; # S0x42 : CONS["Play"]; # :0 S066[0]
S0x043 : CONS0x031; # S0x43 : CONS0x31; # :0 S067[0]
S0x045 : SYS0x0a0; # S0x45 : SYS[0xA0]; # :0 S069[0]
S0x046 : SYS0x0a1; # S0x46 : SYS["UnDock"]; # :0 S070[0]
S0x047 : SYS0x0a2; # S0x47 : SYS0xA2; # :0 S071[0]
S0x048 : None; # S[0x48] : None; # :0 S072[0]
S0x07f + S0x080 : U0x027; # S127 + S128 : U"0"; # :0 S127 + 0 S128[0]

# PixelChannelData

# PixelPositionData

# ScanCodePositionData

# VariableData
Author = HaaTa (Jacob Alexander) 2014; # Author = "HaaTa (Jacob Alexander) 2014"; # Author
Name = colemak; # Name = colemak; # Name
mydefine = stuffs here; # mydefine = "stuffs here"; # mydefine
mydefine2 = "stuffs here"; # mydefine2 = '"stuffs here"'; # mydefine2
mynumber = 414; # mynumber = 414; # mynumber

