# AnimationData
A[BLEEdsing2] <= framedelay:1,loop,pfunc:interp,replace:basic,start; # A[BLEEdsing2] <= start, framedelay:1, loop, replace:basic,pfunc:interp; # A[BLEEdsing2]
A[BLEEdsing] <= ffunc:interp,loops:3,pos:2; # A[BLEEdsing] <= loops:3,pos:2,ffunc:interp; # A[BLEEdsing]
A[RainbowFillInterp] <= pfunc:interp,start; # A[RainbowFillInterp] <= start, pfunc:interp; # A[RainbowFillInterp]
A[tatejima] <= loops:1; # A[tatejima] <= loops:1; # A[tatejima]

# AnimationFrameData
A[BLEEdsing, 0] <= P[004](+32); # A[BLEEdsing, 0] <= P[4](+32); # AF[BLEEdsing, 0]
A[BLEEdsing, 10] <= P[004](+32); # A[BLEEdsing, 10, 12] <= P[4](+32); # AF[BLEEdsing, 10]
A[BLEEdsing, 11] <= P[004](+32), P[005](+32), P[006](+32), P[007](+32), P[008](+32), P[009](+32), P[010](+32); # A[BLEEdsing, 11, 13-15] <= P[4-10](+32); # AF[BLEEdsing, 11]
A[BLEEdsing, 12] <= P[004](+32); # A[BLEEdsing, 10, 12] <= P[4](+32); # AF[BLEEdsing, 12]
A[BLEEdsing, 13] <= P[004](+32), P[005](+32), P[006](+32), P[007](+32), P[008](+32), P[009](+32), P[010](+32); # A[BLEEdsing, 11, 13-15] <= P[4-10](+32); # AF[BLEEdsing, 13]
A[BLEEdsing, 14] <= P[004](+32), P[005](+32), P[006](+32), P[007](+32), P[008](+32), P[009](+32), P[010](+32); # A[BLEEdsing, 11, 13-15] <= P[4-10](+32); # AF[BLEEdsing, 14]
A[BLEEdsing, 15] <= P[004](+32), P[005](+32), P[006](+32), P[007](+32), P[008](+32), P[009](+32), P[010](+32); # A[BLEEdsing, 11, 13-15] <= P[4-10](+32); # AF[BLEEdsing, 15]
A[BLEEdsing, 1] <= P[004](42); # A[BLEEdsing, 1] <= P[4](42); # AF[BLEEdsing, 1]
A[BLEEdsing, 2] <= P[004](-12); # A[BLEEdsing, 2] <= P[4](-12); # AF[BLEEdsing, 2]
A[BLEEdsing, 3] <= P[004](-:32); # A[BLEEdsing, 3] <= P[4](-:32); # AF[BLEEdsing, 3]
A[BLEEdsing, 4] <= P[004](+:400); # A[BLEEdsing, 4] <= P[4](+:400); # AF[BLEEdsing, 4]
A[BLEEdsing, 5] <= P[004](<<2); # A[BLEEdsing, 5] <= P[4](<<2); # AF[BLEEdsing, 5]
A[BLEEdsing, 6] <= P[004](>>1); # A[BLEEdsing, 6] <= P[4](>>1); # AF[BLEEdsing, 6]
A[BLEEdsing, 7] <= P[004](+32); # A[BLEEdsing, 7-9] <= P[4](+32); # AF[BLEEdsing, 7]
A[BLEEdsing, 8] <= P[004](+32); # A[BLEEdsing, 7-9] <= P[4](+32); # AF[BLEEdsing, 8]
A[BLEEdsing, 9] <= P[004](+32); # A[BLEEdsing, 7-9] <= P[4](+32); # AF[BLEEdsing, 9]
A[BLEEdsing2, 0] <= PL0(127,30,40), P[005](20,30,40); # A[BLEEdsing2, 0] <= PL[0](127, 30, 40), P[5](20, 30, 40); # AF[BLEEdsing2, 0]
A[BLEEdsing2, 10] <= S0x010(40,50,96); # A[BLEEdsing2, 10] <= S[0x10](40,50,0x60); # AF[BLEEdsing2, 10]
A[BLEEdsing2, 11] <= P[r:i+000](40,50,96); # A[BLEEdsing2, 11] <= P[r:i](40,50,0x60); # AF[BLEEdsing2, 11]
A[BLEEdsing2, 12] <= P[c:i+000](40,50,96); # A[BLEEdsing2, 12] <= P[c:i](40,50,0x60); # AF[BLEEdsing2, 12]
A[BLEEdsing2, 13] <= P[r:i+000,c:i+000](40,50,96); # A[BLEEdsing2, 13] <= P[r:i,c:i](40,50,0x60); # AF[BLEEdsing2, 13]
A[BLEEdsing2, 1] <= P[001](40,50,96), P[002](40,50,96), P[003](40,50,96), P[004](40,50,96), P[005](40,50,96), P[006](40,50,96), P[007](40,50,96), P[008](40,50,96), P[009](40,50,96), P[010](40,50,96), P[011](40,50,96), P[012](40,50,96), P[013](40,50,96), P[014](40,50,96), P[015](40,50,96), P[016](40,50,96), P[017](40,50,96), P[018](40,50,96), P[019](40,50,96), P[020](40,50,96), P[040](40,50,96); # A[BLEEdsing2, 1] <= P[1-20,40](40,50,0x60); # AF[BLEEdsing2, 1]
A[BLEEdsing2, 2] <= P[c:000](40,50,96); # A[BLEEdsing2, 2] <= P[c:0](40,50,0x60); # AF[BLEEdsing2, 2]
A[BLEEdsing2, 3] <= P[c:10.0%](40,50,96); # A[BLEEdsing2, 3] <= P[c:10%](40,50,0x60); # AF[BLEEdsing2, 3]
A[BLEEdsing2, 4] <= P[r:10.0%,c:020](40,50,96); # A[BLEEdsing2, 4] <= P[r:10%,c:20](40,50,0x60); # AF[BLEEdsing2, 4]
A[BLEEdsing2, 5] <= P[r:i+10.0%,c:i-20](40,50,96); # A[BLEEdsing2, 5] <= P[r:i+10%,c:i-20](40,50,0x60); # AF[BLEEdsing2, 5]
A[BLEEdsing2, 6] <= P[r:i+10.0%](40,50,96); # A[BLEEdsing2, 6] <= P[r:i+10%](40,50,0x60); # AF[BLEEdsing2, 6]
A[BLEEdsing2, 7] <= U0x004(40,50,96); # A[BLEEdsing2, 7] <= U["A"](40,50,0x60); # AF[BLEEdsing2, 7]
A[BLEEdsing2, 8] <= U0x005(40,50,96); # A[BLEEdsing2, 8] <= U"B"(40,50,0x60); # AF[BLEEdsing2, 8]
A[BLEEdsing2, 9] <= S0x078(40,50,96); # A[BLEEdsing2, 9] <= S120(40,50,0x60); # AF[BLEEdsing2, 9]
A[RainbowFillInterp, 1] <= P[c:20.0%](255,255,0), P[c:40.0%](255,0,0), P[c:60.0%](127,0,255), P[c:80.0%](0,0,255); # A[RainbowFillInterp, 1] <= P[c:20%](255,255,0), P[c:40%](255,0,0), P[c:60%](127,0,255), P[c:80%](0,0,255); # AF[RainbowFillInterp, 1]
A[RainbowFillInterp, 2] <= P[c:0.0%](0,255,0), P[c:20.0%](255,255,0), P[c:40.0%](255,0,0), P[c:60.0%](127,0,255), P[c:80.0%](0,0,255); # A[RainbowFillInterp, 2] <= P[c:0%](0,255,0), P[c:20%](255,255,0), P[c:40%](255,0,0), P[c:60%](127,0,255), P[c:80%](0,0,255); # AF[RainbowFillInterp, 2]
A[tatejima, 1] <= P[021](255), P[022](255), P[030](255), P[031](255), P[007](0), P[014](0), P[020](0), P[029](0), P[038](0); # A[tatejima, 1] <= P[21,22,30,31](255),P[7,14,20,29,38](0); # AF[tatejima, 1]

# CapabilityData
myCapability <= myFunc(myArg1:1,myArg2:4); # myCapability  => myFunc( myArg1 : 1, myArg2 : 4 ); # myCapability

# DefineData

# MappingData
A[BLEEdsing2] : myCapability(8,37); # A[BLEEdsing2] : myCapability( 0x8, 0x25 ); # :0 A[BLEEdsing2][0]
S0x037 : A[BLEEdsing]; # S[0x37, 0x38] : A"BLEEdsing"; # :0 S055[0]
S0x038 : A[BLEEdsing]; # S[0x37, 0x38] : A"BLEEdsing"; # :0 S056[0]
S0x039 : A[BLEEdsing], A[BLEEdsing2]; # S0x39 : A"BLEEdsing", A"BLEEdsing2"; # :0 S057[0]
S0x040 : A[BLEEdsing]; # S0x40 : A[BLEEdsing]; # :0 S064[0]
S0x041 : A[BLEEdsing](loops:3); # S0x41 : A[BLEEdsing](loops:3); # :0 S065[0]
S0x042 : A[BLEEdsing](framedelay:3,framestretch,loops:2); # S0x42 : A[BLEEdsing](loops:2,framedelay:3,framestretch); # :0 S066[0]
S0x043 : PL0(255,255,244) + P[001](20,40,60); # S0x43 : PL[0](0xFF,0xFF,244) + P[1-3](20,40,60); # :0 S067[0]
S0x044 : PL1(255,255,244); # S0x44 : PL1(0xFF,0xFF,244); # :0 S068[0]
S0x045 : PL2(31,47,63); # S0x45 : PL[2](0x1F,0x2F,0x3F); # :0 S069[0]
S0x046 : P[000](11,23,45); # S0x46 : P[0](11,23,45); # :0 S070[0]
S0x047 : P0x001(11,23,45); # S0x47 : P1(11,23,45); # :0 S071[0]

# PixelChannelData
P0x00c(12:8,13:8,14:8) : S040; # P12(12:8, 13:8, 14:8) : S[40]; # P12(12:8,13:8,14:8)
P[004](3:8) : S049; # P[4](3:8) : S0x31; # P[['004']](3:8)
P[005](4:8,5:8,12:8) : None; # P[5](4:8, 5:8, 12:8) : None; # P[['005']](4:8,5:8,12:8)
P[012](40:8,50:8,120:8) : S059; # P[12](40:8, 50:8, 120:8) : S59; # P[['012']](40:8,50:8,120:8)

# PixelPositionData
P0x013 <= x:21,rx:16; # P19 <= x:21, rx:16; # P19
P[020] <= x:20,rx:15; # P[20] <= x:20, rx:15; # P[['020']]
P[021] <= x:20,y:10,z:2,rx:15,ry:12,rz:39; # P[21] <= x:20, y:10, z:2, rx:15, ry:12, rz:39; # P[['021']]
P[022] <= x:20,z:13,rx:15; # P[22-25] <= x:20, rx:15; # P[['022']]
P[023] <= x:20,rx:15; # P[22-25] <= x:20, rx:15; # P[['023']]
P[024] <= x:20,rx:15; # P[22-25] <= x:20, rx:15; # P[['024']]
P[025] <= x:20,rx:15; # P[22-25] <= x:20, rx:15; # P[['025']]

# ScanCodePositionData
S0x078 <= x:20,rx:15; # S120 <= x:20, rx:15; # S120
S0x079 <= x:20,y:10,z:2,rx:15,ry:12,rz:39; # S121 <= x:20, y:10, z:2, rx:15, ry:12, rz:39; # S121
S0x07a <= x:20,z:14,rx:15; # S[122-125] <= x:20, rx:15; # S122
S0x07b <= x:20,rx:15; # S[122-125] <= x:20, rx:15; # S123
S0x07c <= x:20,rx:15; # S[122-125] <= x:20, rx:15; # S124
S0x07d <= x:20,rx:15; # S[122-125] <= x:20, rx:15; # S125

# VariableData
Author = HaaTa (Jacob Alexander) 2016-2018; # Author = "HaaTa (Jacob Alexander) 2016-2018"; # Author
Name = leds; # Name = leds; # Name
myarray[] = "elem0" "elem1" "elem 2" "" "test"; # myarray[] = elem0 elem1 "elem 2"; # myarray
mydefine = stuffs here; # mydefine = "stuffs here"; # mydefine
mydefine2 = "stuffs here"; # mydefine2 = '"stuffs here"'; # mydefine2
mynumber = 414; # mynumber = 414; # mynumber

