# AnimationData

# AnimationFrameData

# CapabilityData
myCapability <= myFunc(myArg1:1,myArg2:4); # myCapability  => myFunc( myArg1 : 1, myArg2 : 4 ); # myCapability
myCapability2 <= myFunc2(); # myCapability2 => myFunc2(); # myCapability2
myCapability3 <= myFunc3(myArg1:2); # myCapability3 => myFunc3( myArg1 : 2 ); # myCapability3
usbKeyOut <= Output_usbCodeSend_capability(usbCode:1); # usbKeyOut   => Output_usbCodeSend_capability( usbCode : 1 ); # usbKeyOut

# DefineData

# MappingData
S0x001 + S0x002 : U0x01f; # S0x1+S0x2 : U"2"; # :0 S001 + 0 S002[0]
S0x001 + S0x002, S0x003, S0x004 : U0x020; # S0x1+S0x2,S0x3,S0x4 : U"3"; # :0 S001 + 0 S002, 0 S003, 0 S004[0]
S0x002 + S0x005, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S002 + 0 S005, 0 S010 + 0 S011[0]
S0x002 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S002[0]
S0x003 + S0x006, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S003 + 0 S006, 0 S010 + 0 S011[0]
S0x003 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S003[0]
S0x003, S0x004 : U0x01e; # S0x3,S0x4 : U"1"; # :0 S003, 0 S004[0]
S0x004 + S0x009, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S004 + 0 S009, 0 S010 + 0 S011[0]
S0x004 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S004[0]
S0x005 + S0x005, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S005 + 0 S005, 0 S010 + 0 S011[0]
S0x005 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S005[0]
S0x006 + S0x006, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S006 + 0 S006, 0 S010 + 0 S011[0]
S0x006 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S006[0]
S0x007 + S0x009, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S007 + 0 S009, 0 S010 + 0 S011[0]
S0x007 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S007[0]
S0x008 + S0x005, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S008 + 0 S005, 0 S010 + 0 S011[0]
S0x008 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S008[0]
S0x009 + S0x006, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S009 + 0 S006, 0 S010 + 0 S011[0]
S0x009 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S009[0]
S0x00b : U0x029; # S0x0B : U["Esc"]; # :0 S011[0]
S0x010 + S0x009, S0x00a + S0x00b : U0x015; # S[ 0x2 - 0x9, 0x10 ]+S[0x5 - 0x6, 0x9],S0xA+S0xB : U"r"; # :0 S016 + 0 S009, 0 S010 + 0 S011[0]
S0x010 : U0x015; # S[ 0x2 - 0x9, 0x10 ] : U"r"; # :0 S016[0]
S0x040 : U0x02a; # S0x40 : U"Backspace"; # :0 S064[0]
S0x042 : U0x029; # S0x42 : U"Esc"; # :0 S066[0]
S0x046 : U0x001, U0x002 + U0x01f; # S0x46 : U0x01, U2+U["2"-"5"]; # :0 S070[0]

# PixelChannelData

# PixelPositionData

# ScanCodePositionData

# VariableData
Author = HaaTa (Jacob Alexander) 2014; # Author = "HaaTa (Jacob Alexander) 2014"; # Author
Name = colemak; # Name = colemak; # Name

