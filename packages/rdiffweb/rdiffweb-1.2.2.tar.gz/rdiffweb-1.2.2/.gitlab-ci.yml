image: ikus060/docker-debian-py2-py3:buster

variables:
  PIP_INDEX_URL: https://nexus.patrikdufresne.com/repository/pypi-proxy/simple/

stages:
- test
- package
- publish
- deploy

.tox:  &tox
  image: ikus060/docker-debian-py2-py3:buster
  stage: test
  variables:
    TOXENV: $CI_JOB_NAME
  cache:
    paths:
    - apt-cache/
    - pip-cache/
    - .tox/
  before_script:
  - export APT_CACHE_DIR=`pwd`/apt-cache && mkdir -pv $APT_CACHE_DIR
  - export PIP_CACHE_DIR=`pwd`/pip-cache && mkdir -pv $PIP_CACHE_DIR && mkdir ~/.pip && printf "[global]\ndownload_cache = $PIP_CACHE_DIR\n" >> ~/.pip/pip.conf
  - apt -y update && apt -y -o dir::cache::archives="$APT_CACHE_DIR" install libldap2-dev libsasl2-dev rdiff-backup node-less
  - pip3 install setuptools virtualenv nose coverage tox --upgrade
  script:
  - tox --sitepackages
  artifacts:
    paths:
    - coverage-*.xml
    - nosetests-*.xml
    expire_in: 1 day

py27-jinja26: 
  <<: *tox

py27-jinja27: 
  <<: *tox

py27-jinja28: 
  <<: *tox

py27-jinja29: 
  <<: *tox

py27-jinja210: 
  <<: *tox
  
py3-jinja26: 
  <<: *tox

py3-jinja27: 
  <<: *tox

py3-jinja28: 
  <<: *tox

py3-jinja29: 
  <<: *tox

py3-jinja210: 
  <<: *tox

py27-cherrypy17: 
  <<: *tox
  
py3-cherrypy18: 
  <<: *tox

py2-stretch-cherrypy35-jinja28: 
  <<: *tox
  image: ikus060/docker-debian-py2-py3:stretch
  variables:
    TOXENV: py2-cherrypy35-jinja28

py3-stretch-cherrypy35-jinja28: 
  <<: *tox
  image: ikus060/docker-debian-py2-py3:stretch
  variables:
    TOXENV: py2-cherrypy35-jinja28

py2-buster-cherrypy8-jinja210:
  <<: *tox
  image: ikus060/docker-debian-py2-py3:buster
  variables:
    TOXENV: py2-cherrypy8-jinja210

py3-buster-cherrypy8-jinja210: 
  <<: *tox
  image: ikus060/docker-debian-py2-py3:buster
  variables:
    TOXENV: py3-cherrypy8-jinja210
  
py2-sid-cherrypy8-jinja210:
  <<: *tox
  image: ikus060/docker-debian-py2-py3:sid
  variables:
    TOXENV: py2-cherrypy8-jinja210

py3-sid-cherrypy8-jinja210: 
  <<: *tox
  image: ikus060/docker-debian-py2-py3:sid
  variables:
    TOXENV: py3-cherrypy8-jinja210

py3-rdiff-backup2:
  <<: *tox
  image: ikus060/docker-debian-py2-py3:sid
  variables:
    TOXENV: py3-cherrypy8-jinja210
  script:
  - apt -y autoremove rdiff-backup
  - apt -y install  librsync-dev
  - pip3 install --pre rdiff-backup
  - tox --sitepackages
  
py2-centos7:
  <<: *tox
  image: centos:7
  variables:
    TOXENV: py2-cherrypy17-jinja210
  before_script:
  - yum install -y epel-release
  - yum install -y python-devel sqlite-devel openldap-devel rdiff-backup gcc git
  - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
  - python get-pip.py
  - pip install setuptools virtualenv nose coverage tox --upgrade

py3-centos7:
  <<: *tox
  image: centos:7
  allow_failure: true
  variables:
    TOXENV: py3-cherrypy18-jinja210
  before_script:
  - yum install -y epel-release
  - yum install -y python3-devel sqlite-devel openldap-devel rdiff-backup gcc git
  - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
  - python3 get-pip.py
  - pip3 install setuptools virtualenv nose coverage tox --upgrade

py3-centos8:
  <<: *tox
  image: centos:8
  allow_failure: true
  variables:
    TOXENV: py3-cherrypy18-jinja210
  before_script:
  - yum install -y epel-release
  - yum install -y python3-devel sqlite-devel openldap-devel gcc git
  - curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
  - python3 get-pip.py
  - pip3 install setuptools virtualenv nose coverage tox --upgrade
  - pip3 install --pre rdiff-backup
  
package:py2: 
  stage: package
  script:
  - python2 setup.py sdist bdist_wheel
  artifacts:
    paths: 
    - dist/*.tar.gz
    - dist/*.whl
    
package:py3: 
  stage: package
  script:
  - python3 setup.py sdist bdist_wheel
  artifacts:
    paths:
    - dist/*.whl

publish:sonar:master:
  stage: publish
  image: ikus060/sonar-runner
  only:
  - master
  script:
  - sonar-runner -X -Dsonar.python.coverage.reportPath=coverage-*.xml -Dsonar.python.xunit.reportPath=nosetests-py3-cherrypy18.xml -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=$CI_PROJECT_NAME -Dsonar.exclusions=rdiffweb/controller/tests/**,rdiffweb/core/tests/**,rdiffweb/test.py -Dsonar.sources=.

publish:sonar:dev:
  stage: publish
  image: ikus060/sonar-runner
  script:
  - sonar-runner -X -Dsonar.python.coverage.reportPath=coverage-*.xml -Dsonar.python.xunit.reportPath=nosetests-py3-cherrypy18.xml -Dsonar.host.url=$SONAR_URL -Dsonar.login=$SONAR_TOKEN -Dsonar.projectKey=$CI_PROJECT_NAME-dev -Dsonar.exclusions=rdiffweb/controller/tests/**,rdiffweb/core/tests/**,rdiffweb/test.py -Dsonar.sources=.

publish_nexus:
  stage: publish
  script:
  - pip3 install wheel twine --upgrade
  - twine upload dist/* -u $NEXUS_USR -p $NEXUS_PWD --repository-url $NEXUS_PYPI_URL

publish_pypi:
  stage: publish
  only:
  - tags
  script:
  - pip3 install wheel twine --upgrade
  - twine upload dist/* -u $PYPI_USR -p $PYPI_PWD
  
rdiffweb_deploy_demo: 
  stage: deploy
  image: ikus060/ansible
  environment:
    name: staging
    url: https://demo.patrikdufresne.com
  variables:
    ANSIBLE_HOST_KEY_CHECKING: "False"
  before_script:
  - eval $(ssh-agent -s)
  - echo "$GITLAB_SSH_IDENTITY" | tr -d '\r' | ssh-add - > /dev/null
  - mkdir -p ~/.ssh
  - chmod 700 ~/.ssh
  script:
  - python ./setup.py --version
  - export RDIFFWEB_VERSION=$(python ./setup.py --version)
  - echo RDIFFWEB_VERSION=$RDIFFWEB_VERSION
  - git clone "http://${GITLAB_USR}:${GITLAB_PWD}@git.patrikdufresne.com/pdsl/ansible-config.git"
  - cd ansible-config
  - ansible-playbook rdiffweb.yml -i pdsl --extra-vars "ansible_user=root rdiffweb_version=$RDIFFWEB_VERSION rdiffweb_default_repositories=true" --limit arbuc
