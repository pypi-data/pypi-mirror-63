# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['pyhardlinkbackup',
 'pyhardlinkbackup.backup_app',
 'pyhardlinkbackup.backup_app.management',
 'pyhardlinkbackup.backup_app.management.commands',
 'pyhardlinkbackup.backup_app.migrations',
 'pyhardlinkbackup.django_project',
 'pyhardlinkbackup.phlb',
 'pyhardlinkbackup.tests']

package_data = \
{'': ['*'], 'pyhardlinkbackup': ['helper_cmd/*', 'helper_sh/*']}

install_requires = \
['click',
 'django-tools',
 'django>=2.2.0,<2.3.0',
 'iterfilesystem',
 'pathlib_revised',
 'python-creole',
 'tqdm']

entry_points = \
{'console_scripts': ['manage = pyhardlinkbackup.django_project.manage:cli',
                     'phlb = pyhardlinkbackup.phlb.cli:cli',
                     'publish = pyhardlinkbackup.phlb.publish:publish',
                     'update_rst_readme = '
                     'pyhardlinkbackup.phlb.publish:update_readme']}

setup_kwargs = {
    'name': 'pyhardlinkbackup',
    'version': '0.12.4rc0',
    'description': 'HardLink/Deduplication Backups with Python',
    'long_description': '----------------\npyhardlinkbackup\n----------------\n\nHardlink/Deduplication Backups with Python.\n\n* Backups should be saved as normal files in the filesystem:\n\n    * accessible without any extra software or extra meta files\n\n    * non-proprietary format\n\n* Create backups with versioning\n\n    * every backup run creates a complete filesystem snapshot tree\n\n    * every snapshot tree can be deleted, without affecting the other snapshots\n\n* Deduplication with hardlinks:\n\n    * Store only changed files, all other via hardlinks\n\n    * find duplicate files everywhere (even if renamed or moved files)\n\n* useable under Windows and Linux\n\nRequirement: Python 3.6 or newer.\n\nPlease: try, fork and contribute! ;)\n\n+--------------------------------------+------------------------------------------------------------+\n| |Build Status on github|             | `github.com/jedie/pyhardlinkbackup/actions`_               |\n+--------------------------------------+------------------------------------------------------------+\n| |Build Status on travis-ci.org|      | `travis-ci.org/jedie/pyhardlinkbackup`_                    |\n+--------------------------------------+------------------------------------------------------------+\n| |Build Status on appveyor.com|       | `ci.appveyor.com/project/jedie/pyhardlinkbackup`_          |\n+--------------------------------------+------------------------------------------------------------+\n| |Coverage Status on coveralls.io|    | `coveralls.io/r/jedie/pyhardlinkbackup`_                   |\n+--------------------------------------+------------------------------------------------------------+\n| |Requirements Status on requires.io| | `requires.io/github/jedie/pyhardlinkbackup/requirements/`_ |\n+--------------------------------------+------------------------------------------------------------+\n\n.. |Build Status on github| image:: https://github.com/jedie/pyhardlinkbackup/workflows/test/badge.svg?branch=master\n.. _github.com/jedie/pyhardlinkbackup/actions: https://github.com/jedie/pyhardlinkbackup/actions\n.. |Build Status on travis-ci.org| image:: https://travis-ci.org/jedie/pyhardlinkbackup.svg\n.. _travis-ci.org/jedie/pyhardlinkbackup: https://travis-ci.org/jedie/pyhardlinkbackup/\n.. |Build Status on appveyor.com| image:: https://ci.appveyor.com/api/projects/status/py5sl38ql3xciafc?svg=true\n.. _ci.appveyor.com/project/jedie/pyhardlinkbackup: https://ci.appveyor.com/project/jedie/pyhardlinkbackup/history\n.. |Coverage Status on coveralls.io| image:: https://coveralls.io/repos/jedie/pyhardlinkbackup/badge.svg\n.. _coveralls.io/r/jedie/pyhardlinkbackup: https://coveralls.io/r/jedie/pyhardlinkbackup\n.. |Requirements Status on requires.io| image:: https://requires.io/github/jedie/pyhardlinkbackup/requirements.svg?branch=master\n.. _requires.io/github/jedie/pyhardlinkbackup/requirements/: https://requires.io/github/jedie/pyhardlinkbackup/requirements/\n\n-------\nExample\n-------\n\n::\n\n    $ phlb backup ~/my/important/documents\n    ...start backup, some time later...\n    $ phlb backup ~/my/important/documents\n    ...\n\nThis will create deduplication backups like this:\n\n::\n\n    ~/pyhardlinkbackups\n      └── documents\n          ├── 2016-01-07-085247\n          │   ├── phlb_config.ini\n          │   ├── spreadsheet.ods\n          │   ├── brief.odt\n          │   └── important_files.ext\n          └── 2016-01-07-102310\n              ├── phlb_config.ini\n              ├── spreadsheet.ods\n              ├── brief.odt\n              └── important_files.ext\n\n------------\nInstallation\n------------\n\nWindows\n=======\n\n#. install Python 3: `https://www.python.org/downloads/ <https://www.python.org/downloads/>`_\n\n#. Download the file `boot_pyhardlinkbackup.cmd <https://raw.githubusercontent.com/jedie/pyhardlinkbackup/master/boot_pyhardlinkbackup.cmd>`_\n\n#. call **boot_pyhardlinkbackup.cmd** as admin (Right-click and use **Run as administrator**)\n\nIf everything works fine, you will get a venv here: ``%ProgramFiles%\\PyHardLinkBackup``\n\nAfter the venv is created, call these scripts to finalize the setup:\n\n#. ``%ProgramFiles%\\PyHardLinkBackup\\phlb_edit_config.cmd`` - create a config .ini file\n\n#. ``%ProgramFiles%\\PyHardLinkBackup\\phlb_migrate_database.cmd`` - create database tables\n\nTo upgrade pyhardlinkbackup, call:\n\n#. ``%ProgramFiles%\\PyHardLinkBackup\\phlb_upgrade_pyhardlinkbackup.cmd``\n\nTo start the Django webserver, call:\n\n#. ``%ProgramFiles%\\PyHardLinkBackup\\phlb_run_django_webserver.cmd``\n\nLinux\n=====\n\n#. Download the file `boot_pyhardlinkbackup.sh <https://raw.githubusercontent.com/jedie/pyhardlinkbackup/master/boot_pyhardlinkbackup.sh>`_\n\n#. call **boot_pyhardlinkbackup.sh**\n\nIf everything works fine, you will get a venv here: ``~\\pyhardlinkbackup``\n\nAfter the venv is created, call these scripts to finalize the setup:\n\n* ``~/PyHardLinkBackup/phlb_edit_config.sh`` - create a config .ini file\n\n* ``~/PyHardLinkBackup/phlb_migrate_database.sh`` - create database tables\n\nTo upgrade pyhardlinkbackup, call:\n\n* ``~/PyHardLinkBackup/phlb_upgrade_pyhardlinkbackup.sh``\n\nTo start the Django webserver, call:\n\n* ``~/PyHardLinkBackup/phlb_run_django_webserver.sh``\n\n---------------------\nStarting a backup run\n---------------------\n\nTo start a backup run, use this helper script:\n\n* Windows batch: ``%ProgramFiles%\\PyHardLinkBackup\\pyhardlinkbackup_this_directory.cmd``\n\n* Linux shell script: ``~/PyHardLinkBackup/pyhardlinkbackup_this_directory.sh``\n\nCopy this file to a location that should be backed up and just call it to run a backup.\n\n----------------------------\nVerifying an existing backup\n----------------------------\n\n::\n\n    $ cd pyhardlinkbackup/\n    ~/PyHardLinkBackup $ source bin/activate\n    \n    (PyHardLinkBackup) ~/PyHardLinkBackup $ phlb verify --fast ~/PyHardLinkBackups/documents/2016-01-07-102310\n\nWith **--fast** the files\' contents will not be checked.\nIf not given: The hashes from the files\' contents will be calculated and compared. Thus, every file must be completely read from filesystem, so it will take some time.\n\nA verify run does:\n\n* Do all files in the backup exist?\n\n* Compare file sizes\n\n* Compare hashes from hash-file\n\n* Compare files\' modification timestamps\n\n* Calculate hashes from files\' contents and compare them (will be skipped if **--fast** used)\n\n-------------\nConfiguration\n-------------\n\nphlb will use a configuration file named: **PyHardLinkBackup.ini**\n\nSearch order is:\n\n#. current directory down to root\n\n#. user directory\n\nE.g. if the current working directoy is **/foo/bar/my_files/** then the search path will be:\n\n* ``/foo/bar/my_files/PyHardLinkBackup.ini``\n\n* ``/foo/bar/PyHardLinkBackup.ini``\n\n* ``/foo/PyHardLinkBackup.ini``\n\n* ``/PyHardLinkBackup.ini``\n\n* ``~/PyHardLinkBackup.ini`` *The user home directory under Windows/Linux*\n\nCreate / edit default .ini\n==========================\n\nYou can just open the editor with the user directory .ini file with:\n\n::\n\n    (PyHardLinkBackup) ~/PyHardLinkBackup $ phlb config\n\nThe defaults are stored here: `/phlb/config_defaults.ini <https://github.com/jedie/PyHardLinkBackup/blob/master/pyhardlinkbackup/phlb/config_defaults.ini>`_\n\nExcluding files/folders from backup:\n====================================\n\nThere are two ways to exclude files/folders from your backup.\nUse the follow settings in your ``PyHardLinkBackup.ini``\n\n::\n\n    # Directory names that will be recursively excluded from backups (comma separated list!)\n    SKIP_DIRS= __pycache__, temp\n    \n    # glob-style patterns to exclude files/folders from backups (used with Path.match(), Comma separated list!)\n    SKIP_PATTERNS= *.pyc, *.tmp, *.cache\n\nThe filesystem scan is divided into two steps:\n1. Just scan the filesystem tree\n2. Filter and load meta data for every directory item\n\nThe **SKIP_DIRS** is used in the first step.\nThe **SKIP_PATTERNS** is used the the second step.\n\n--------------------------\nUpgrading pyhardlinkbackup\n--------------------------\n\nTo upgrade to a new version just start this helper script:\n\n* Windows: `phlb_upgrade_pyhardlinkbackup.cmd <https://github.com/jedie/PyHardLinkBackup/blob/master/pyhardlinkbackup/helper_cmd/phlb_upgrade_pyhardlinkbackup.cmd>`_\n\n* Linux: `phlb_upgrade_pyhardlinkbackup.sh <https://github.com/jedie/PyHardLinkBackup/blob/master/pyhardlinkbackup/helper_sh/phlb_upgrade_pyhardlinkbackup.sh>`_\n\n----------\nSome notes\n----------\n\nWhat is \'phlb\' and \'manage\' ?!?\n===============================\n\n**phlb** is a CLI.\n\n**manage** is similar to a normal Django **manage.py**, but it always\nuses the pyhardlinkbackup settings.\n\nWhy in hell do you use Django?!?\n================================\n\n* Well, just because of the great database ORM and the Admin Site. ;)\n\nHow to go into the Django admin?\n================================\n\nJust start:\n\n* Windows: ``phlb_run_django_webserver.cmd``\n\n* Linux: ``phlb_run_django_webserver.sh``\n\nAnd then request \'localhost\'\n(Note: **--noreload** is needed for Windows with venv!)\n\n----------------------\nRunning the unit tests\n----------------------\n\nJust start: ``phlb_run_tests.cmd`` / ``phlb_run_tests.sh`` or do this:\n\n::\n\n    $ cd pyhardlinkbackup/\n    ~/PyHardLinkBackup $ source bin/activate\n    (PyHardLinkBackup) ~/PyHardLinkBackup $ manage test\n\n-------------\nUsing the CLI\n-------------\n\n::\n\n    $ cd pyhardlinkbackup/\n    ~/PyHardLinkBackup $ source bin/activate\n    (PyHardLinkBackup) ~/PyHardLinkBackup $ phlb --help\n    Usage: phlb [OPTIONS] COMMAND [ARGS]...\n    \n      pyhardlinkbackup\n    \n    Options:\n      --version  Show the version and exit.\n      --help     Show this message and exit.\n    \n    Commands:\n      add     Scan all existing backup and add missing ones...\n      backup  Start a Backup run\n      config  Create/edit .ini config file\n      helper  link helper files to given path\n      verify  Verify a existing backup\n\n-----------------------------------\nAdd missing backups to the database\n-----------------------------------\n\n**phlb add** can be used in different scenarios:\n\n* recreate the database\n\n* add a backup manually\n\n**phlb add** does this:\n\n* scan the complete file tree under **BACKUP_PATH** (default: ``~/PyHardLinkBackups``)\n\n* recreate all hash files\n\n* add all files to database\n\n* deduplicate with hardlinks, if possible\n\nSo it\'s possible to recreate the complete database:\n\n* delete the current ``.sqlite`` file\n\n* run **phlb add** to recreate\n\nAnother scenario is e.g.:\n\n* DSLR images are stored on a network drive.\n\n* You have already a copy of all files locally.\n\n* You would like to add the local copy to pyhardlinkbackup.\n\nDo the following steps:\n\n* move the local files to a subdirectory below **BACKUP_PATH**\n\n* e.g.: ``~/PyHardLinkBackups/pictures/2015-12-29-000015/``\n\n* Note: the date format in the subdirectory name must match the **SUB_DIR_FORMATTER** in your config\n\n* run: **phlb add**\n\nNow you can run **phlb backup** from your network drive to make a new, up-to-date backup.\n\nWindows Development\n===================\n\nSome notes about setting up a development environment on Windows: `/dev/WindowsDevelopment.creole <https://github.com/jedie/PyHardLinkBackup/blob/master/dev/WindowsDevelopment.creole>`_\n\nAlternative solutions\n=====================\n\n* Attic: `https://attic-backup.org/ <https://attic-backup.org/>`_ (Not working on Windows, own backup archive format)\n\n* BorgBackup: `https://borgbackup.readthedocs.io/ <https://borgbackup.readthedocs.io/>`_ (Fork of Attic with lots of improvements)\n\n* msbackup: `https://pypi.python.org/pypi/msbackup/ <https://pypi.python.org/pypi/msbackup/>`_ (Uses tar for backup archives)\n\n* Duplicity: `http://duplicity.nongnu.org/ <http://duplicity.nongnu.org/>`_ (No Windows support, tar archive format)\n\n* Burp: `http://burp.grke.org/ <http://burp.grke.org/>`_ (Client/Server solution)\n\n* dirvish: `http://www.dirvish.org/ <http://www.dirvish.org/>`_ (Client/Server solution)\n\n* restic: `https://github.com/restic/restic/ <https://github.com/restic/restic/>`_ (Uses own backup archive format)\n\nSee also: `https://github.com/restic/others#list-of-backup-software <https://github.com/restic/others#list-of-backup-software>`_\n\n-------\nHistory\n-------\n\n* **dev** - `compare v0.12.3...master <https://github.com/jedie/PyHardLinkBackup/compare/v0.12.3...master>`_ \n\n    * Dynamic chunk size\n\n    * TBC\n\n* 17.03.2020 - v0.12.3 - `compare v0.12.2...v0.12.3 <https://github.com/jedie/PyHardLinkBackup/compare/v0.12.2...v0.12.3>`_ \n\n    * Fix #44 - wroing file size in process bar\n\n    * use ``pytest-randomly``\n\n    * update requirements\n\n* 06.03.2020 - v0.12.2 - `compare v0.12.1...v0.12.2 <https://github.com/jedie/PyHardLinkBackup/compare/v0.12.1...v0.12.2>`_ \n\n    * Enhance log file content\n\n    * Update requirements\n\n    * `Fix too verbose output by decrease debug level <https://github.com/jedie/PyHardLinkBackup/pull/41>`_\n\n* 05.03.2020 - v0.12.1 - `compare v0.12.0...v0.12.1 <https://github.com/jedie/PyHardLinkBackup/compare/v0.12.0...v0.12.1>`_ \n\n    * revert lowercase ``PyHardLinkBackup`` for environment destination and default backup directory.\n\n* 05.03.2020 - v0.12.0 - `compare v0.11.0...v0.12.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.11.0...v0.12.0>`_ \n\n    * Refactor backup process: Use `https://github.com/jedie/IterFilesystem <https://github.com/jedie/IterFilesystem>`_ for less RAM usage and faster start on big source trees\n\n    * modernized project/sources:\n\n        * Update to Django v2.2.x TLS\n\n        * use poetry\n\n        * add Makefile\n\n        * run tests with pytest and tox\n\n        * run tests only with python 3.8, 3.7, 3.6\n\n        * run tests on github, too\n\n        * remove support for python 3.5 (``os.scandir`` fallback removed)\n\n    * **NOTE:** Windows support is not tested, yet! (Help wanted)\n\n* 03.03.2019 - v0.11.0 - `compare v0.10.1...v0.11.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.10.1...v0.11.0>`_ \n\n    * Update boot files\n\n    * Use django v1.11.x\n\n* 09.09.2016 - v0.10.1 - `compare v0.10.0...v0.10.1 <https://github.com/jedie/PyHardLinkBackup/compare/v0.10.0...v0.10.1>`_ \n\n    * Bugfix `Catch scan dir errors #24 <https://github.com/jedie/PyHardLinkBackup/issues/24>`_\n\n* 26.04.2016 - v0.10.0 - `compare v0.9.1...v0.10.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.9.1...v0.10.0>`_ \n\n    * move under Windows the install location from ``%APPDATA%\\PyHardLinkBackup`` to ``%ProgramFiles%\\PyHardLinkBackup``\n\n    * to \'migrate\': Just delete ``%APPDATA%\\PyHardLinkBackup`` and install via **boot_pyhardlinkbackup.cmd**\n\n* 26.04.2016 - v0.9.1 - `compare v0.9.0...v0.9.1 <https://github.com/jedie/PyHardLinkBackup/compare/v0.9.0...v0.9.1>`_ \n\n    * run migrate database in boot process\n\n    * Add missing migrate scripts\n\n* 10.02.2016 - v0.9.0 - `compare v0.8.0...v0.9.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.8.0...v0.9.0>`_ \n\n    * Work-a-round for Windows MAX_PATH limit: Use ``\\\\?\\`` path prefix internally.\n\n    * move **Path2()** to external lib: `https://github.com/jedie/pathlib_revised <https://github.com/jedie/pathlib_revised>`_\n\n* 04.02.2016 - v0.8.0 - `compare v0.7.0...v0.8.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.7.0...v0.8.0>`_ \n\n    * New: add all missing backups to database: ``phlb add`` (s.above)\n\n* 03.02.2016 - v0.7.0 - `compare v0.6.4...v0.7.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.6.4...v0.7.0>`_ \n\n    * New: verify a existing backup\n\n    * **IMPORTANT:** run database migration is needed!\n\n* 01.02.2016 - v0.6.4 - `compare v0.6.2...v0.6.4 <https://github.com/jedie/PyHardLinkBackup/compare/v0.6.3...v0.6.4>`_ \n\n    * Windows: Bugfix temp rename error, because of the Windows API limitation, see: `#13 <https://github.com/jedie/PyHardLinkBackup/issues/13#issuecomment-176241894>`_\n\n    * Linux: Bugfix scanner if symlink is broken\n\n    * Display local variables on low level errors\n\n* 29.01.2016 - v0.6.3 - `compare v0.6.2...v0.6.3 <https://github.com/jedie/PyHardLinkBackup/compare/v0.6.2...v0.6.3>`_ \n\n    * Less verbose and better information about SKIP_DIRS/SKIP_PATTERNS hits\n\n* 28.01.2016 - v0.6.2 - `compare v0.6.1...v0.6.2 <https://github.com/jedie/PyHardLinkBackup/compare/v0.6.1...v0.6.2>`_ \n\n    * Handle unexpected errors and continue backup with the next file\n\n    * Better handle interrupt key during execution\n\n* 28.01.2016 - v0.6.1 - `compare v0.6.0...v0.6.1 <https://github.com/jedie/PyHardLinkBackup/compare/v0.6.0...v0.6.1>`_ \n\n    * Bugfix #13 by using a better temp rename routine\n\n* 28.01.2016 - v0.6.0 - `compare v0.5.1...v0.6.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.5.1...v0.6.0>`_ \n\n    * New: faster backup by compare mtime/size only if old backup files exists\n\n* 27.01.2016 - v0.5.1 - `compare v0.5.0...v0.5.1 <https://github.com/jedie/PyHardLinkBackup/compare/v0.5.0...v0.5.1>`_ \n\n    * **IMPORTANT:** run database migration is needed!\n\n    * New ``.ini`` setting: ``LANGUAGE_CODE`` for change translation\n\n    * mark if backup was finished compled\n\n    * Display information of last backup run\n\n    * Add more information into summary file\n\n* 27.01.2016 - v0.5.0 - `compare v0.4.2...v0.5.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.4.2...v0.5.0>`_ \n\n    * refactory source tree scan. Split in two passed.\n\n    * **CHANGE** ``SKIP_FILES`` in ``.ini`` config to: ``SKIP_PATTERNS``\n\n    * Backup from newest files to oldest files.\n\n    * Fix `#10 <https://github.com/jedie/PyHardLinkBackup/issues/10>`_:\n\n        * New **--name** cli option (optional) to force a backup name.\n\n        * Display error message if backup name can be found (e.g.: backup a root folder)\n\n* 22.01.2016 - v0.4.2 - `compare v0.4.1...v0.4.2 <https://github.com/jedie/PyHardLinkBackup/compare/v0.4.1...v0.4.2>`_ \n\n    * work-a-round for junction under windows, see also: `https://www.python-forum.de/viewtopic.php?f=1&t=37725&p=290429#p290428 <https://www.python-forum.de/viewtopic.php?f=1&t=37725&p=290429#p290428>`_ (de)\n\n    * Bugfix in windows batches: go into work dir.\n\n    * print some more status information in between.\n\n* 22.01.2016 - v0.4.1 - `compare v0.4.0...v0.4.1 <https://github.com/jedie/PyHardLinkBackup/compare/v0.4.0...v0.4.1>`_ \n\n    * Skip files that can\'t be read/write. (and try to backup the remaining files)\n\n* 21.01.2016 - v0.4.0 - `compare v0.3.1...v0.4.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.3.1...v0.4.0>`_ \n\n    * Search for *PyHardLinkBackup.ini* file in every parent directory from the current working dir\n\n    * increase default chunk size to 20MB\n\n    * save summary and log file for every backup run\n\n* 15.01.2016 - v0.3.1 - `compare v0.3.0...v0.3.1 <https://github.com/jedie/PyHardLinkBackup/compare/v0.3.0...v0.3.1>`_ \n\n    * fix unittest run under windows\n\n* 15.01.2016 - v0.3.0 - `compare v0.2.0...v0.3.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.2.0...v0.3.0>`_ \n\n    * **database migration needed**\n\n    * Add \'no_link_source\' to database (e.g. Skip source, if 1024 links created under windows)\n\n* 14.01.2016 - v0.2.0 - `compare v0.1.8...v0.2.0 <https://github.com/jedie/PyHardLinkBackup/compare/v0.1.8...v0.2.0>`_ \n\n    * good unittests coverage that covers the backup process\n\n* 08.01.2016 - v0.1.8 - `compare v0.1.0alpha0...v0.1.8 <https://github.com/jedie/PyHardLinkBackup/compare/v0.1.0alpha0...v0.1.8>`_ \n\n    * install and runable under Windows\n\n* 06.01.2016 - v0.1.0alpha0 - `d42a5c5 <https://github.com/jedie/PyHardLinkBackup/commit/d42a5c59c0dcdf8d2f8bb2a3a3dc2c51862fed17>`_ \n\n    * first Release on PyPi\n\n* 29.12.2015 - `commit 2ce43 <https://github.com/jedie/PyHardLinkBackup/commit/2ce43d326fafbde5a3526194cf957f00efe0f198>`_ \n\n    * commit \'Proof of concept\'\n\n-----\nLinks\n-----\n\n* `https://pypi.python.org/pypi/pyhardlinkbackup/ <https://pypi.python.org/pypi/pyhardlinkbackup/>`_\n\n* `https://www.python-forum.de/viewtopic.php?f=6&t=37723 <https://www.python-forum.de/viewtopic.php?f=6&t=37723>`_ (de)\n\n* `https://github.com/jedie/pathlib_revised`_\n\n--------\nDonating\n--------\n\n* `paypal.me/JensDiemer <https://www.paypal.me/JensDiemer>`_\n\n* `Flattr This! <https://flattr.com/submit/auto?uid=jedie&url=https%3A%2F%2Fgithub.com%2Fjedie%2Fdjango-reversion-compare%2F>`_\n\n* Send `Bitcoins <http://www.bitcoin.org/>`_ to `1823RZ5Md1Q2X5aSXRC5LRPcYdveCiVX6F <https://blockexplorer.com/address/1823RZ5Md1Q2X5aSXRC5LRPcYdveCiVX6F>`_\n\n------------\n\n``Note: this file is generated from README.creole 2020-03-17 13:12:04 with "python-creole"``',
    'author': 'JensDiemer',
    'author_email': 'git@jensdiemer.de',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
