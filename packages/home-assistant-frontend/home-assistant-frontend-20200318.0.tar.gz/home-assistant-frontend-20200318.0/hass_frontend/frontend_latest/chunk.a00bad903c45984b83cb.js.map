{"version":3,"sources":["webpack:///./src/data/lovelace.ts","webpack:///./src/components/ha-icon.ts","webpack:///./src/dialogs/generic/show-dialog-box.ts","webpack:///./src/common/util/debounce.ts","webpack:///./src/common/string/compare.ts","webpack:///./src/layouts/hass-tabs-subpage.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/layouts/hass-tabs-subpage-data-table.ts","webpack:///./src/panels/config/lovelace/dashboards/show-dialog-lovelace-dashboard-detail.ts","webpack:///./src/panels/config/lovelace/dashboards/ha-config-lovelace-dashboards.ts"],"names":["__webpack_require__","d","__webpack_exports__","fetchResources","createResource","updateResource","deleteResource","fetchDashboards","createDashboard","updateDashboard","deleteDashboard","fetchConfig","saveConfig","deleteConfig","subscribeLovelaceUpdates","conn","sendMessagePromise","type","hass","values","callWS","Object","assign","id","updates","resource_id","dashboard_id","urlPath","force","url_path","config","onChange","subscribeEvents","ev","data","ironIconClass","customElements","get","loaded","HaIcon","[object Object]","args","super","this","listen","node","eventName","methodName","_iconsetName","e","then","bind","define","showAlertDialog","showConfirmationDialog","showPromptDialog","_common_dom_fire_event__WEBPACK_IMPORTED_MODULE_0__","loadGenericDialog","Promise","all","showDialogHelper","element","dialogParams","extra","resolve","origCancel","cancel","origConfirm","confirm","fireEvent","dialogTag","dialogImport","prompt","out","confirmation","debounce","func","wait","immediate","timeout","context","callNow","clearTimeout","setTimeout","apply","compare","caseInsensitiveCompare","a","b","toLowerCase","customElement","HassTabsSubpage","_LitElement","_initialize","property","String","attribute","Boolean","reflect","memoizeOne","tabs","activeTab","showAdvanced","_components","_language","filter","page","component","core","isComponentLoaded","advancedOnly","map","html","classMap","active","_tabTapped","path","narrow","icon","translationKey","localize","name","changedProperties","_get","_getPrototypeOf","prototype","call","has","_activeTab","find","tab","route","prefix","includes","_this$hass$userData","_getTabs","userData","components","language","hassio","_backTapped","length","bottom-bar","navigate","currentTarget","backPath","backCallback","history","back","css","LitElement","afterNextRender","nextRender","cb","requestAnimationFrame","_decorate","F","kind","decorators","key","value","Array","query","_dataTable","clearSelection","_handleSearchChange","columns","selectable","noDataText","detail","static","loadDashboardDetailDialog","HaConfigLovelaceDashboards","memoize","dashboards","title","template","sortable","filterable","direction","grows","dashboard","titleTemplate","default","mode","filename","width","some","require_admin","requireAdmin","show_in_sidebar","sidebar","_navigate","_this$hass$panels","_this$hass$panels$lov","defaultMode","panels","lovelace","isDefault","localStorage","defaultPage","undefined","_dashboards","lovelaceTabs","_columns","_getItems","_editDashboard","isWide","_addDashboard","changedProps","_getDashboards","async","stopPropagation","url","target","res","_openDialog","created","concat","sort","res1","res2","updated","removeDashboard","text","err"],"mappings":"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","file":"chunk.a00bad903c45984b83cb.js","sourcesContent":["import { HomeAssistant } from \"../types\";\nimport {\n  Connection,\n  getCollection,\n  HassEventBase,\n} from \"home-assistant-js-websocket\";\nimport { HASSDomEvent } from \"../common/dom/fire_event\";\n\nexport interface LovelacePanelConfig {\n  mode: \"yaml\" | \"storage\";\n}\n\nexport interface LovelaceConfig {\n  title?: string;\n  views: LovelaceViewConfig[];\n  background?: string;\n}\n\nexport interface LegacyLovelaceConfig extends LovelaceConfig {\n  resources?: LovelaceResource[];\n}\n\nexport interface LovelaceResource {\n  id: string;\n  type: \"css\" | \"js\" | \"module\" | \"html\";\n  url: string;\n}\n\nexport interface LovelaceResourcesMutableParams {\n  res_type: \"css\" | \"js\" | \"module\" | \"html\";\n  url: string;\n}\n\nexport type LovelaceDashboard =\n  | LovelaceYamlDashboard\n  | LovelaceStorageDashboard;\n\ninterface LovelaceGenericDashboard {\n  id: string;\n  url_path: string;\n  require_admin: boolean;\n  show_in_sidebar: boolean;\n  icon?: string;\n  title: string;\n}\n\nexport interface LovelaceYamlDashboard extends LovelaceGenericDashboard {\n  mode: \"yaml\";\n  filename: string;\n}\n\nexport interface LovelaceStorageDashboard extends LovelaceGenericDashboard {\n  mode: \"storage\";\n}\n\nexport interface LovelaceDashboardMutableParams {\n  require_admin: boolean;\n  show_in_sidebar: boolean;\n  icon?: string;\n  title: string;\n}\n\nexport interface LovelaceDashboardCreateParams\n  extends LovelaceDashboardMutableParams {\n  url_path: string;\n  mode: \"storage\";\n}\n\nexport interface LovelaceViewConfig {\n  index?: number;\n  title?: string;\n  badges?: Array<string | LovelaceBadgeConfig>;\n  cards?: LovelaceCardConfig[];\n  path?: string;\n  icon?: string;\n  theme?: string;\n  panel?: boolean;\n  background?: string;\n  visible?: boolean | ShowViewConfig[];\n}\n\nexport interface ShowViewConfig {\n  user?: string;\n}\n\nexport interface LovelaceBadgeConfig {\n  type?: string;\n  [key: string]: any;\n}\n\nexport interface LovelaceCardConfig {\n  index?: number;\n  view_index?: number;\n  type: string;\n  [key: string]: any;\n}\n\nexport interface ToggleActionConfig extends BaseActionConfig {\n  action: \"toggle\";\n}\n\nexport interface CallServiceActionConfig extends BaseActionConfig {\n  action: \"call-service\";\n  service: string;\n  service_data?: {\n    entity_id?: string | [string];\n    [key: string]: any;\n  };\n}\n\nexport interface NavigateActionConfig extends BaseActionConfig {\n  action: \"navigate\";\n  navigation_path: string;\n}\n\nexport interface UrlActionConfig extends BaseActionConfig {\n  action: \"url\";\n  url_path: string;\n}\n\nexport interface MoreInfoActionConfig extends BaseActionConfig {\n  action: \"more-info\";\n}\n\nexport interface NoActionConfig extends BaseActionConfig {\n  action: \"none\";\n}\n\nexport interface CustomActionConfig extends BaseActionConfig {\n  action: \"fire-dom-event\";\n}\n\nexport interface BaseActionConfig {\n  confirmation?: ConfirmationRestrictionConfig;\n}\n\nexport interface ConfirmationRestrictionConfig {\n  text?: string;\n  exemptions?: RestrictionConfig[];\n}\n\nexport interface RestrictionConfig {\n  user: string;\n}\n\nexport type ActionConfig =\n  | ToggleActionConfig\n  | CallServiceActionConfig\n  | NavigateActionConfig\n  | UrlActionConfig\n  | MoreInfoActionConfig\n  | NoActionConfig\n  | CustomActionConfig;\n\ntype LovelaceUpdatedEvent = HassEventBase & {\n  event_type: \"lovelace_updated\";\n  data: {\n    url_path: string | null;\n    mode: \"yaml\" | \"storage\";\n  };\n};\n\nexport const fetchResources = (conn: Connection): Promise<LovelaceResource[]> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/resources\",\n  });\n\nexport const createResource = (\n  hass: HomeAssistant,\n  values: LovelaceResourcesMutableParams\n) =>\n  hass.callWS<LovelaceResource>({\n    type: \"lovelace/resources/create\",\n    ...values,\n  });\n\nexport const updateResource = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<LovelaceResourcesMutableParams>\n) =>\n  hass.callWS<LovelaceResource>({\n    type: \"lovelace/resources/update\",\n    resource_id: id,\n    ...updates,\n  });\n\nexport const deleteResource = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"lovelace/resources/delete\",\n    resource_id: id,\n  });\n\nexport const fetchDashboards = (\n  hass: HomeAssistant\n): Promise<LovelaceDashboard[]> =>\n  hass.callWS({\n    type: \"lovelace/dashboards/list\",\n  });\n\nexport const createDashboard = (\n  hass: HomeAssistant,\n  values: LovelaceDashboardCreateParams\n) =>\n  hass.callWS<LovelaceDashboard>({\n    type: \"lovelace/dashboards/create\",\n    ...values,\n  });\n\nexport const updateDashboard = (\n  hass: HomeAssistant,\n  id: string,\n  updates: Partial<LovelaceDashboardMutableParams>\n) =>\n  hass.callWS<LovelaceDashboard>({\n    type: \"lovelace/dashboards/update\",\n    dashboard_id: id,\n    ...updates,\n  });\n\nexport const deleteDashboard = (hass: HomeAssistant, id: string) =>\n  hass.callWS({\n    type: \"lovelace/dashboards/delete\",\n    dashboard_id: id,\n  });\n\nexport const fetchConfig = (\n  conn: Connection,\n  urlPath: string | null,\n  force: boolean\n): Promise<LovelaceConfig> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/config\",\n    url_path: urlPath,\n    force,\n  });\n\nexport const saveConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null,\n  config: LovelaceConfig\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/save\",\n    url_path: urlPath,\n    config,\n  });\n\nexport const deleteConfig = (\n  hass: HomeAssistant,\n  urlPath: string | null\n): Promise<void> =>\n  hass.callWS({\n    type: \"lovelace/config/delete\",\n    url_path: urlPath,\n  });\n\nexport const subscribeLovelaceUpdates = (\n  conn: Connection,\n  urlPath: string | null,\n  onChange: () => void\n) =>\n  conn.subscribeEvents<LovelaceUpdatedEvent>((ev) => {\n    if (ev.data.url_path === urlPath) {\n      onChange();\n    }\n  }, \"lovelace_updated\");\n\nexport const getLovelaceCollection = (\n  conn: Connection,\n  urlPath: string | null = null\n) =>\n  getCollection(\n    conn,\n    `_lovelace_${urlPath ?? \"\"}`,\n    (conn2) => fetchConfig(conn2, urlPath, false),\n    (_conn, store) =>\n      subscribeLovelaceUpdates(conn, urlPath, () =>\n        fetchConfig(conn, urlPath, false).then((config) =>\n          store.setState(config, true)\n        )\n      )\n  );\n\n// Legacy functions to support cast for Home Assistion < 0.107\nconst fetchLegacyConfig = (\n  conn: Connection,\n  force: boolean\n): Promise<LovelaceConfig> =>\n  conn.sendMessagePromise({\n    type: \"lovelace/config\",\n    force,\n  });\n\nconst subscribeLegacyLovelaceUpdates = (\n  conn: Connection,\n  onChange: () => void\n) => conn.subscribeEvents(onChange, \"lovelace_updated\");\n\nexport const getLegacyLovelaceCollection = (conn: Connection) =>\n  getCollection(\n    conn,\n    \"_lovelace\",\n    (conn2) => fetchLegacyConfig(conn2, false),\n    (_conn, store) =>\n      subscribeLegacyLovelaceUpdates(conn, () =>\n        fetchLegacyConfig(conn, false).then((config) =>\n          store.setState(config, true)\n        )\n      )\n  );\n\nexport interface WindowWithLovelaceProm extends Window {\n  llConfProm?: Promise<LovelaceConfig>;\n  llResProm?: Promise<LovelaceResource[]>;\n}\n\nexport interface ActionHandlerOptions {\n  hasHold?: boolean;\n  hasDoubleClick?: boolean;\n}\n\nexport interface ActionHandlerDetail {\n  action: string;\n}\n\nexport type ActionHandlerEvent = HASSDomEvent<ActionHandlerDetail>;\n","import { Constructor } from \"../types\";\n\nimport \"@polymer/iron-icon/iron-icon\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { IronIconElement } from \"@polymer/iron-icon/iron-icon\";\n\nconst ironIconClass = customElements.get(\"iron-icon\") as Constructor<\n  IronIconElement\n>;\n\nlet loaded = false;\n\nexport class HaIcon extends ironIconClass {\n  private _iconsetName?: string;\n\n  public listen(\n    node: EventTarget | null,\n    eventName: string,\n    methodName: string\n  ): void {\n    super.listen(node, eventName, methodName);\n\n    if (!loaded && this._iconsetName === \"mdi\") {\n      loaded = true;\n      import(/* webpackChunkName: \"mdi-icons\" */ \"../resources/mdi-icons\");\n    }\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-icon\": HaIcon;\n  }\n}\n\ncustomElements.define(\"ha-icon\", HaIcon);\n","import { fireEvent } from \"../../common/dom/fire_event\";\n\ninterface BaseDialogParams {\n  confirmText?: string;\n  text?: string;\n  title?: string;\n}\n\nexport interface AlertDialogParams extends BaseDialogParams {\n  confirm?: () => void;\n}\n\nexport interface ConfirmationDialogParams extends BaseDialogParams {\n  dismissText?: string;\n  confirm?: () => void;\n  cancel?: () => void;\n}\n\nexport interface PromptDialogParams extends BaseDialogParams {\n  inputLabel?: string;\n  inputType?: string;\n  defaultValue?: string;\n  confirm?: (out?: string) => void;\n}\n\nexport interface DialogParams\n  extends ConfirmationDialogParams,\n    PromptDialogParams {\n  confirm?: (out?: string) => void;\n  confirmation?: boolean;\n  prompt?: boolean;\n}\n\nexport const loadGenericDialog = () =>\n  import(/* webpackChunkName: \"confirmation\" */ \"./dialog-box\");\n\nconst showDialogHelper = (\n  element: HTMLElement,\n  dialogParams: DialogParams,\n  extra?: {\n    confirmation?: DialogParams[\"confirmation\"];\n    prompt?: DialogParams[\"prompt\"];\n  }\n) =>\n  new Promise((resolve) => {\n    const origCancel = dialogParams.cancel;\n    const origConfirm = dialogParams.confirm;\n\n    fireEvent(element, \"show-dialog\", {\n      dialogTag: \"dialog-box\",\n      dialogImport: loadGenericDialog,\n      dialogParams: {\n        ...dialogParams,\n        ...extra,\n        cancel: () => {\n          resolve(extra?.prompt ? null : false);\n          if (origCancel) {\n            origCancel();\n          }\n        },\n        confirm: (out) => {\n          resolve(extra?.prompt ? out : true);\n          if (origConfirm) {\n            origConfirm(out);\n          }\n        },\n      },\n    });\n  });\n\nexport const showAlertDialog = (\n  element: HTMLElement,\n  dialogParams: AlertDialogParams\n) => showDialogHelper(element, dialogParams);\n\nexport const showConfirmationDialog = (\n  element: HTMLElement,\n  dialogParams: ConfirmationDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { confirmation: true }) as Promise<\n    boolean\n  >;\n\nexport const showPromptDialog = (\n  element: HTMLElement,\n  dialogParams: PromptDialogParams\n) =>\n  showDialogHelper(element, dialogParams, { prompt: true }) as Promise<\n    null | string\n  >;\n","// From: https://davidwalsh.name/javascript-debounce-function\n\n// Returns a function, that, as long as it continues to be invoked, will not\n// be triggered. The function will be called after it stops being called for\n// N milliseconds. If `immediate` is passed, trigger the function on the\n// leading edge, instead of the trailing.\n// tslint:disable-next-line: ban-types\nexport const debounce = <T extends Function>(\n  func: T,\n  wait,\n  immediate = false\n): T => {\n  let timeout;\n  // @ts-ignore\n  return function(...args) {\n    // tslint:disable:no-this-assignment\n    // @ts-ignore\n    const context = this;\n    const later = () => {\n      timeout = null;\n      if (!immediate) {\n        func.apply(context, args);\n      }\n    };\n    const callNow = immediate && !timeout;\n    clearTimeout(timeout);\n    timeout = setTimeout(later, wait);\n    if (callNow) {\n      func.apply(context, args);\n    }\n  };\n};\n","export const compare = (a: string, b: string) => {\n  if (a < b) {\n    return -1;\n  }\n  if (a > b) {\n    return 1;\n  }\n\n  return 0;\n};\n\nexport const caseInsensitiveCompare = (a: string, b: string) =>\n  compare(a.toLowerCase(), b.toLowerCase());\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  customElement,\n  css,\n  CSSResult,\n  PropertyValues,\n} from \"lit-element\";\nimport \"../components/ha-menu-button\";\nimport \"../components/ha-paper-icon-button-arrow-prev\";\nimport { classMap } from \"lit-html/directives/class-map\";\nimport { Route, HomeAssistant } from \"../types\";\nimport { navigate } from \"../common/navigate\";\nimport \"@material/mwc-ripple\";\nimport { isComponentLoaded } from \"../common/config/is_component_loaded\";\nimport memoizeOne from \"memoize-one\";\n\nexport interface PageNavigation {\n  path: string;\n  translationKey?: string;\n  component?: string;\n  name?: string;\n  core?: boolean;\n  advancedOnly?: boolean;\n  icon?: string;\n  info?: any;\n}\n\n@customElement(\"hass-tabs-subpage\")\nclass HassTabsSubpage extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n  @property() public backCallback?: () => void;\n  @property({ type: Boolean }) public hassio = false;\n  @property() public route!: Route;\n  @property() public tabs!: PageNavigation[];\n  @property({ type: Boolean, reflect: true }) public narrow = false;\n  @property() private _activeTab?: PageNavigation;\n\n  private _getTabs = memoizeOne(\n    (\n      tabs: PageNavigation[],\n      activeTab: PageNavigation | undefined,\n      showAdvanced: boolean | undefined,\n      _components,\n      _language\n    ) => {\n      const shownTabs = tabs.filter(\n        (page) =>\n          (!page.component ||\n            page.core ||\n            isComponentLoaded(this.hass, page.component)) &&\n          (!page.advancedOnly || showAdvanced)\n      );\n\n      return shownTabs.map(\n        (page) =>\n          html`\n            <div\n              class=\"tab ${classMap({\n                active: page === activeTab,\n              })}\"\n              @click=${this._tabTapped}\n              .path=${page.path}\n            >\n              ${this.narrow\n                ? html`\n                    <ha-icon .icon=${page.icon}></ha-icon>\n                  `\n                : \"\"}\n              ${!this.narrow || page === activeTab\n                ? html`\n                    <span class=\"name\"\n                      >${page.translationKey\n                        ? this.hass.localize(page.translationKey)\n                        : name}</span\n                    >\n                  `\n                : \"\"}\n              <mwc-ripple></mwc-ripple>\n            </div>\n          `\n      );\n    }\n  );\n\n  protected updated(changedProperties: PropertyValues) {\n    super.updated(changedProperties);\n    if (changedProperties.has(\"route\")) {\n      this._activeTab = this.tabs.find((tab) =>\n        this.route.prefix.includes(tab.path)\n      );\n    }\n  }\n\n  protected render(): TemplateResult {\n    const tabs = this._getTabs(\n      this.tabs,\n      this._activeTab,\n      this.hass.userData?.showAdvanced,\n      this.hass.config.components,\n      this.hass.language\n    );\n\n    return html`\n      <div class=\"toolbar\">\n        <ha-paper-icon-button-arrow-prev\n          aria-label=\"Back\"\n          .hassio=${this.hassio}\n          @click=${this._backTapped}\n        ></ha-paper-icon-button-arrow-prev>\n        ${this.narrow\n          ? html`\n              <div main-title><slot name=\"header\"></slot></div>\n            `\n          : \"\"}\n        ${tabs.length > 1 || !this.narrow\n          ? html`\n              <div id=\"tabbar\" class=${classMap({ \"bottom-bar\": this.narrow })}>\n                ${tabs}\n              </div>\n            `\n          : \"\"}\n        <div id=\"toolbar-icon\">\n          <slot name=\"toolbar-icon\"></slot>\n        </div>\n      </div>\n      <div class=\"content\">\n        <slot></slot>\n      </div>\n    `;\n  }\n\n  private _tabTapped(ev: MouseEvent): void {\n    navigate(this, (ev.currentTarget as any).path, true);\n  }\n\n  private _backTapped(): void {\n    if (this.backPath) {\n      navigate(this, this.backPath);\n      return;\n    }\n    if (this.backCallback) {\n      this.backCallback();\n      return;\n    }\n    history.back();\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 100%;\n        background-color: var(--primary-background-color);\n      }\n\n      .toolbar {\n        display: flex;\n        align-items: center;\n        font-size: 20px;\n        height: 65px;\n        background-color: var(--sidebar-background-color);\n        font-weight: 400;\n        color: var(--sidebar-text-color);\n        border-bottom: 1px solid var(--divider-color);\n        padding: 0 16px;\n        box-sizing: border-box;\n      }\n\n      #tabbar {\n        display: flex;\n        font-size: 14px;\n      }\n\n      #tabbar.bottom-bar {\n        position: absolute;\n        bottom: 0;\n        left: 0;\n        padding: 0 16px;\n        box-sizing: border-box;\n        background-color: var(--sidebar-background-color);\n        border-top: 1px solid var(--divider-color);\n        justify-content: space-between;\n        z-index: 1;\n        font-size: 12px;\n        width: 100%;\n      }\n\n      #tabbar:not(.bottom-bar) {\n        margin: auto;\n        left: 50%;\n        position: absolute;\n        transform: translate(-50%, 0);\n      }\n\n      .tab {\n        padding: 0 32px;\n        display: flex;\n        flex-direction: column;\n        text-align: center;\n        align-items: center;\n        justify-content: center;\n        height: 64px;\n        cursor: pointer;\n      }\n\n      .name {\n        white-space: nowrap;\n      }\n\n      .tab.active {\n        color: var(--primary-color);\n      }\n\n      #tabbar:not(.bottom-bar) .tab.active {\n        border-bottom: 2px solid var(--primary-color);\n      }\n\n      .bottom-bar .tab {\n        padding: 0 16px;\n        width: 20%;\n        min-width: 0;\n      }\n\n      ha-menu-button,\n      ha-paper-icon-button-arrow-prev,\n      ::slotted([slot=\"toolbar-icon\"]) {\n        pointer-events: auto;\n        color: var(--sidebar-icon-color);\n      }\n\n      [main-title] {\n        margin: 0 0 0 24px;\n        line-height: 20px;\n        flex-grow: 1;\n      }\n\n      .content {\n        position: relative;\n        width: 100%;\n        height: calc(100% - 65px);\n        overflow-y: auto;\n        overflow: auto;\n        -webkit-overflow-scrolling: touch;\n      }\n\n      #toolbar-icon {\n        position: absolute;\n        right: 16px;\n      }\n\n      :host([narrow]) .content {\n        height: calc(100% - 128px);\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hass-tabs-subpage\": HassTabsSubpage;\n  }\n}\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import {\n  css,\n  CSSResult,\n  customElement,\n  html,\n  LitElement,\n  property,\n  query,\n  TemplateResult,\n} from \"lit-element\";\nimport \"../components/data-table/ha-data-table\";\n// tslint:disable-next-line\nimport {\n  HaDataTable,\n  DataTableColumnContainer,\n  DataTableRowData,\n} from \"../components/data-table/ha-data-table\";\nimport \"./hass-tabs-subpage\";\nimport { HomeAssistant, Route } from \"../types\";\n// tslint:disable-next-line\nimport { PageNavigation } from \"./hass-tabs-subpage\";\n\n@customElement(\"hass-tabs-subpage-data-table\")\nexport class HaTabsSubpageDataTable extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide!: boolean;\n  @property({ type: Boolean, reflect: true }) public narrow!: boolean;\n  /**\n   * Object with the columns.\n   * @type {Object}\n   */\n  @property({ type: Object }) public columns: DataTableColumnContainer = {};\n  /**\n   * Data to show in the table.\n   * @type {Array}\n   */\n  @property({ type: Array }) public data: DataTableRowData[] = [];\n  /**\n   * Should rows be selectable.\n   * @type {Boolean}\n   */\n  @property({ type: Boolean }) public selectable = false;\n  /**\n   * Field with a unique id per entry in data.\n   * @type {String}\n   */\n  @property({ type: String }) public id = \"id\";\n  /**\n   * String to filter the data in the data table on.\n   * @type {String}\n   */\n  @property({ type: String }) public filter = \"\";\n  /**\n   * What path to use when the back button is pressed.\n   * @type {String}\n   * @attr back-path\n   */\n  @property({ type: String, attribute: \"back-path\" }) public backPath?: string;\n  /**\n   * Function to call when the back button is pressed.\n   * @type {() => void}\n   */\n  @property() public backCallback?: () => void;\n  /**\n   * String to show when there are no records in the data table.\n   * @type {String}\n   */\n  @property({ type: String }) public noDataText?: string;\n  @property() public route!: Route;\n  /**\n   * Array of tabs to show on the page.\n   * @type {Array}\n   */\n  @property() public tabs!: PageNavigation[];\n  @query(\"ha-data-table\") private _dataTable!: HaDataTable;\n\n  public clearSelection() {\n    this._dataTable.clearSelection();\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <hass-tabs-subpage\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        .backPath=${this.backPath}\n        .backCallback=${this.backCallback}\n        .route=${this.route}\n        .tabs=${this.tabs}\n      >\n        ${this.narrow\n          ? html`\n              <div slot=\"header\">\n                <slot name=\"header\">\n                  <div class=\"search-toolbar\">\n                    <search-input\n                      no-label-float\n                      no-underline\n                      @value-changed=${this._handleSearchChange}\n                    ></search-input>\n                  </div>\n                </slot>\n              </div>\n            `\n          : \"\"}\n        <ha-data-table\n          .columns=${this.columns}\n          .data=${this.data}\n          .filter=${this.filter}\n          .selectable=${this.selectable}\n          .id=${this.id}\n          .noDataText=${this.noDataText}\n        >\n          ${!this.narrow\n            ? html`\n                <div slot=\"header\">\n                  <slot name=\"header\">\n                    <slot name=\"header\">\n                      <div class=\"table-header\">\n                        <search-input\n                          no-label-float\n                          no-underline\n                          @value-changed=${this._handleSearchChange}\n                        ></search-input></div></slot\n                  ></slot>\n                </div>\n              `\n            : html`\n                <div slot=\"header\"></div>\n              `}\n        </ha-data-table>\n      </hass-tabs-subpage>\n    `;\n  }\n\n  private _handleSearchChange(ev: CustomEvent) {\n    this.filter = ev.detail.value;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-data-table {\n        width: 100%;\n        height: 100%;\n        --data-table-border-width: 0;\n      }\n      :host(:not([narrow])) ha-data-table {\n        height: calc(100vh - 65px);\n        display: block;\n      }\n      .table-header {\n        border-bottom: 1px solid rgba(var(--rgb-primary-text-color), 0.12);\n      }\n      .search-toolbar {\n        margin-left: -24px;\n        color: var(--secondary-text-color);\n      }\n      search-input {\n        position: relative;\n        top: 2px;\n      }\n    `;\n  }\n}\n","import { fireEvent } from \"../../../../common/dom/fire_event\";\nimport {\n  LovelaceDashboard,\n  LovelaceDashboardMutableParams,\n  LovelaceDashboardCreateParams,\n} from \"../../../../data/lovelace\";\n\nexport interface LovelaceDashboardDetailsDialogParams {\n  dashboard?: LovelaceDashboard;\n  urlPath?: string;\n  createDashboard: (values: LovelaceDashboardCreateParams) => Promise<unknown>;\n  updateDashboard: (\n    updates: Partial<LovelaceDashboardMutableParams>\n  ) => Promise<unknown>;\n  removeDashboard: () => Promise<boolean>;\n}\n\nexport const loadDashboardDetailDialog = () =>\n  import(\n    /* webpackChunkName: \"lovelace-dashboard-detail-dialog\" */ \"./dialog-lovelace-dashboard-detail\"\n  );\n\nexport const showDashboardDetailDialog = (\n  element: HTMLElement,\n  dialogParams: LovelaceDashboardDetailsDialogParams\n) => {\n  fireEvent(element, \"show-dialog\", {\n    dialogTag: \"dialog-lovelace-dashboard-detail\",\n    dialogImport: loadDashboardDetailDialog,\n    dialogParams,\n  });\n};\n","import {\n  customElement,\n  html,\n  LitElement,\n  property,\n  PropertyValues,\n  TemplateResult,\n  CSSResult,\n  css,\n} from \"lit-element\";\nimport memoize from \"memoize-one\";\nimport \"@polymer/paper-tooltip/paper-tooltip\";\nimport {\n  DataTableColumnContainer,\n  RowClickedEvent,\n} from \"../../../../components/data-table/ha-data-table\";\nimport \"../../../../components/ha-icon\";\nimport \"../../../../layouts/hass-loading-screen\";\nimport \"../../../../layouts/hass-tabs-subpage-data-table\";\nimport { HomeAssistant, Route } from \"../../../../types\";\nimport {\n  LovelaceDashboard,\n  fetchDashboards,\n  createDashboard,\n  updateDashboard,\n  deleteDashboard,\n  LovelaceDashboardCreateParams,\n  LovelacePanelConfig,\n} from \"../../../../data/lovelace\";\nimport { showDashboardDetailDialog } from \"./show-dialog-lovelace-dashboard-detail\";\nimport { compare } from \"../../../../common/string/compare\";\nimport { showConfirmationDialog } from \"../../../../dialogs/generic/show-dialog-box\";\nimport { lovelaceTabs } from \"../ha-config-lovelace\";\nimport { navigate } from \"../../../../common/navigate\";\n\n@customElement(\"ha-config-lovelace-dashboards\")\nexport class HaConfigLovelaceDashboards extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() public isWide!: boolean;\n  @property() public narrow!: boolean;\n  @property() public route!: Route;\n  @property() private _dashboards: LovelaceDashboard[] = [];\n\n  private _columns = memoize(\n    (narrow: boolean, _language, dashboards): DataTableColumnContainer => {\n      const columns: DataTableColumnContainer = {\n        icon: {\n          title: \"\",\n          type: \"icon\",\n          template: (icon) =>\n            icon\n              ? html`\n                  <ha-icon slot=\"item-icon\" .icon=${icon}></ha-icon>\n                `\n              : html``,\n        },\n        title: {\n          title: this.hass.localize(\n            \"ui.panel.config.lovelace.dashboards.picker.headers.title\"\n          ),\n          sortable: true,\n          filterable: true,\n          direction: \"asc\",\n          grows: true,\n          template: (title, dashboard: any) => {\n            const titleTemplate = html`\n              ${title}\n              ${dashboard.default\n                ? html`\n                    <ha-icon\n                      style=\"padding-left: 10px;\"\n                      icon=\"hass:check-circle-outline\"\n                    ></ha-icon>\n                    <paper-tooltip>\n                      ${this.hass.localize(\n                        `ui.panel.config.lovelace.dashboards.default_dashboard`\n                      )}\n                    </paper-tooltip>\n                  `\n                : \"\"}\n            `;\n            return narrow\n              ? html`\n                  ${titleTemplate}\n                  <div class=\"secondary\">\n                    ${this.hass.localize(\n                      `ui.panel.config.lovelace.dashboards.conf_mode.${dashboard.mode}`\n                    )}${dashboard.filename\n                      ? html`\n                          - ${dashboard.filename}\n                        `\n                      : \"\"}\n                  </div>\n                `\n              : titleTemplate;\n          },\n        },\n      };\n\n      if (!narrow) {\n        columns.mode = {\n          title: this.hass.localize(\n            \"ui.panel.config.lovelace.dashboards.picker.headers.conf_mode\"\n          ),\n          sortable: true,\n          filterable: true,\n          width: \"15%\",\n          template: (mode) =>\n            html`\n              ${this.hass.localize(\n                `ui.panel.config.lovelace.dashboards.conf_mode.${mode}`\n              ) || mode}\n            `,\n        };\n        if (dashboards.some((dashboard) => dashboard.filename)) {\n          columns.filename = {\n            title: this.hass.localize(\n              \"ui.panel.config.lovelace.dashboards.picker.headers.filename\"\n            ),\n            width: \"15%\",\n            sortable: true,\n            filterable: true,\n          };\n        }\n        columns.require_admin = {\n          title: this.hass.localize(\n            \"ui.panel.config.lovelace.dashboards.picker.headers.require_admin\"\n          ),\n          sortable: true,\n          type: \"icon\",\n          width: \"100px\",\n          template: (requireAdmin: boolean) =>\n            requireAdmin\n              ? html`\n                  <ha-icon icon=\"hass:check\"></ha-icon>\n                `\n              : html`\n                  -\n                `,\n        };\n        columns.show_in_sidebar = {\n          title: this.hass.localize(\n            \"ui.panel.config.lovelace.dashboards.picker.headers.sidebar\"\n          ),\n          type: \"icon\",\n          width: \"100px\",\n          template: (sidebar) =>\n            sidebar\n              ? html`\n                  <ha-icon icon=\"hass:check\"></ha-icon>\n                `\n              : html`\n                  -\n                `,\n        };\n      }\n\n      columns.url_path = {\n        title: \"\",\n        filterable: true,\n        width: \"75px\",\n        template: (urlPath) =>\n          narrow\n            ? html`\n                <paper-icon-button\n                  icon=\"hass:open-in-new\"\n                  .urlPath=${urlPath}\n                  @click=${this._navigate}\n                ></paper-icon-button>\n              `\n            : html`\n                <mwc-button .urlPath=${urlPath} @click=${this._navigate}\n                  >${this.hass.localize(\n                    \"ui.panel.config.lovelace.dashboards.picker.open\"\n                  )}</mwc-button\n                >\n              `,\n      };\n\n      return columns;\n    }\n  );\n\n  private _getItems = memoize((dashboards: LovelaceDashboard[]) => {\n    const defaultMode = (this.hass.panels?.lovelace\n      ?.config as LovelacePanelConfig).mode;\n    const isDefault =\n      !localStorage.defaultPage || localStorage.defaultPage === \"lovelace\";\n    return [\n      {\n        icon: \"hass:view-dashboard\",\n        title: this.hass.localize(\"panel.states\"),\n        default: isDefault,\n        sidebar: isDefault,\n        require_admin: false,\n        url_path: \"lovelace\",\n        mode: defaultMode,\n        filename: defaultMode === \"yaml\" ? \"ui-lovelace.yaml\" : \"\",\n      },\n      ...dashboards.map((dashboard) => {\n        return {\n          filename: \"\",\n          ...dashboard,\n          default: localStorage.defaultPage === dashboard.url_path,\n        };\n      }),\n    ];\n  });\n\n  protected render(): TemplateResult {\n    if (!this.hass || this._dashboards === undefined) {\n      return html`\n        <hass-loading-screen></hass-loading-screen>\n      `;\n    }\n\n    return html`\n      <hass-tabs-subpage-data-table\n        .hass=${this.hass}\n        .narrow=${this.narrow}\n        back-path=\"/config\"\n        .route=${this.route}\n        .tabs=${lovelaceTabs}\n        .columns=${this._columns(\n          this.narrow,\n          this.hass.language,\n          this._dashboards\n        )}\n        .data=${this._getItems(this._dashboards)}\n        @row-click=${this._editDashboard}\n        id=\"url_path\"\n      >\n      </hass-tabs-subpage-data-table>\n      <ha-fab\n        ?is-wide=${this.isWide}\n        ?narrow=${this.narrow}\n        icon=\"hass:plus\"\n        title=\"${this.hass.localize(\n          \"ui.panel.config.lovelace.dashboards.picker.add_dashboard\"\n        )}\"\n        @click=${this._addDashboard}\n      ></ha-fab>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues) {\n    super.firstUpdated(changedProps);\n    this._getDashboards();\n  }\n\n  private async _getDashboards() {\n    this._dashboards = await fetchDashboards(this.hass);\n  }\n\n  private _navigate(ev: Event) {\n    ev.stopPropagation();\n    const url = `/${(ev.target as any).urlPath}`;\n    navigate(this, url);\n  }\n\n  private _editDashboard(ev: CustomEvent) {\n    const urlPath = (ev.detail as RowClickedEvent).id;\n    const dashboard = this._dashboards.find((res) => res.url_path === urlPath);\n    this._openDialog(dashboard, urlPath);\n  }\n\n  private _addDashboard() {\n    this._openDialog();\n  }\n\n  private async _openDialog(\n    dashboard?: LovelaceDashboard,\n    urlPath?: string\n  ): Promise<void> {\n    showDashboardDetailDialog(this, {\n      dashboard,\n      urlPath,\n      createDashboard: async (values: LovelaceDashboardCreateParams) => {\n        const created = await createDashboard(this.hass!, values);\n        this._dashboards = this._dashboards!.concat(\n          created\n        ).sort((res1, res2) => compare(res1.url_path, res2.url_path));\n      },\n      updateDashboard: async (values) => {\n        const updated = await updateDashboard(\n          this.hass!,\n          dashboard!.id,\n          values\n        );\n        this._dashboards = this._dashboards!.map((res) =>\n          res === dashboard ? updated : res\n        );\n      },\n      removeDashboard: async () => {\n        if (\n          !(await showConfirmationDialog(this, {\n            text: this.hass!.localize(\n              \"ui.panel.config.lovelace.dashboards.confirm_delete\"\n            ),\n          }))\n        ) {\n          return false;\n        }\n\n        try {\n          await deleteDashboard(this.hass!, dashboard!.id);\n          this._dashboards = this._dashboards!.filter(\n            (res) => res !== dashboard\n          );\n          return true;\n        } catch (err) {\n          return false;\n        }\n      },\n    });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      ha-fab {\n        position: fixed;\n        bottom: 16px;\n        right: 16px;\n        z-index: 1;\n      }\n      ha-fab[is-wide] {\n        bottom: 24px;\n        right: 24px;\n      }\n      ha-fab[narrow] {\n        bottom: 84px;\n      }\n    `;\n  }\n}\n"],"sourceRoot":""}