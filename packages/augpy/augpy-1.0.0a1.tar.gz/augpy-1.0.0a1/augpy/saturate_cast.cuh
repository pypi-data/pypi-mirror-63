// AUTOGENERATED FILE
// DO NOT EDIT
// CHANGES WILL BE OVERWRITTEN
// CHANGE generate_saturate_cast_cuh.py INSTEAD
#ifndef AUGPY_SATURATE_CAST_CUH
#define AUGPY_SATURATE_CAST_CUH


#include <cuda.h>
#include <math.h>


namespace augpy {


typedef float float32_t;
typedef double float64_t;


template<typename input_t, typename output_t>
__device__ __host__ __forceinline__ void saturate_cast(input_t vin, output_t* vout);


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint16_t)255);
    #else
        *vout = min(vin, (uint16_t)255);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint32_t)255);
    #else
        *vout = min(vin, (uint32_t)255);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint64_t)255);
    #else
        *vout = min(vin, (uint64_t)255);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint8_t)127);
    #else
        *vout = min(vin, (uint8_t)127);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int8_t)0);
    #else
        *vout = max(vin, (int8_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int16_t)0), (int16_t)255);
    #else
        *vout = min(max(vin, (int16_t)0), (int16_t)255);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int32_t)0), (int32_t)255);
    #else
        *vout = min(max(vin, (int32_t)0), (int32_t)255);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int64_t)0), (int64_t)255);
    #else
        *vout = min(max(vin, (int64_t)0), (int64_t)255);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(__float2uint_rn(vin), (uint32_t)255);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)0.0F ? (uint8_t)0 : vin;
        vin = vin > (float32_t)255.0F ? (uint8_t)255 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint8_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, uint8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(__double2uint_rn(vin), (uint32_t)255);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)0.0 ? (uint8_t)0 : vin;
        vin = vin > (float64_t)255.0 ? (uint8_t)255 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint32_t)65535);
    #else
        *vout = min(vin, (uint32_t)65535);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint64_t)65535);
    #else
        *vout = min(vin, (uint64_t)65535);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint16_t)127);
    #else
        *vout = min(vin, (uint16_t)127);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int8_t)0);
    #else
        *vout = max(vin, (int8_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint16_t)32767);
    #else
        *vout = min(vin, (uint16_t)32767);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int16_t)0);
    #else
        *vout = max(vin, (int16_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int32_t)0), (int32_t)65535);
    #else
        *vout = min(max(vin, (int32_t)0), (int32_t)65535);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int64_t)0), (int64_t)65535);
    #else
        *vout = min(max(vin, (int64_t)0), (int64_t)65535);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(__float2uint_rn(vin), (uint32_t)65535);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)0.0F ? (uint16_t)0 : vin;
        vin = vin > (float32_t)65535.0F ? (uint16_t)65535 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint16_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, uint16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(__double2uint_rn(vin), (uint32_t)65535);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)0.0 ? (uint16_t)0 : vin;
        vin = vin > (float64_t)65535.0 ? (uint16_t)65535 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint64_t)4294967295);
    #else
        *vout = min(vin, (uint64_t)4294967295);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint32_t)127);
    #else
        *vout = min(vin, (uint32_t)127);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int8_t)0);
    #else
        *vout = max(vin, (int8_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint32_t)32767);
    #else
        *vout = min(vin, (uint32_t)32767);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int16_t)0);
    #else
        *vout = max(vin, (int16_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint32_t)2147483647);
    #else
        *vout = min(vin, (uint32_t)2147483647);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int32_t)0);
    #else
        *vout = max(vin, (int32_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int64_t)0), (int64_t)4294967295);
    #else
        *vout = min(max(vin, (int64_t)0), (int64_t)4294967295);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __uint2float_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __float2uint_rn(vin);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)0.0F ? (uint32_t)0 : vin;
        vin = vin > (float32_t)4294967167.0F ? (uint32_t)4294967295 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint32_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __uint2double_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, uint32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __double2uint_rn(vin);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)0.0 ? (uint32_t)0 : vin;
        vin = vin > (float64_t)4294967295.0 ? (uint32_t)4294967295 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint64_t)127);
    #else
        *vout = min(vin, (uint64_t)127);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int8_t)0);
    #else
        *vout = max(vin, (int8_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint64_t)32767);
    #else
        *vout = min(vin, (uint64_t)32767);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int16_t)0);
    #else
        *vout = max(vin, (int16_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint64_t)2147483647);
    #else
        *vout = min(vin, (uint64_t)2147483647);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int32_t)0);
    #else
        *vout = max(vin, (int32_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(vin, (uint64_t)9223372036854775807);
    #else
        *vout = min(vin, (uint64_t)9223372036854775807);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = max(vin, (int64_t)0);
    #else
        *vout = max(vin, (int64_t)0);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __ull2float_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __float2ull_rn(vin);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)0.0F ? (uint64_t)0 : vin;
        vin = vin > (float32_t)18446743523953736703.0F ? (uint64_t)18446744073709551615 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(uint64_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __ull2double_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, uint64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __double2ull_rn(vin);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)0.0 ? (uint64_t)0 : vin;
        vin = vin > (float64_t)18446744073709550591.0 ? (uint64_t)18446744073709551615 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int16_t)-128), (int16_t)127);
    #else
        *vout = min(max(vin, (int16_t)-128), (int16_t)127);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int32_t)-128), (int32_t)127);
    #else
        *vout = min(max(vin, (int32_t)-128), (int32_t)127);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int64_t)-128), (int64_t)127);
    #else
        *vout = min(max(vin, (int64_t)-128), (int64_t)127);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(__float2int_rn(vin), (int32_t)-128), (int32_t)127);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)-128.0F ? (int8_t)-128 : vin;
        vin = vin > (float32_t)127.0F ? (int8_t)127 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int8_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, int8_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(__double2int_rn(vin), (int32_t)-128), (int32_t)127);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)-128.0 ? (int8_t)-128 : vin;
        vin = vin > (float64_t)127.0 ? (int8_t)127 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int32_t)-32768), (int32_t)32767);
    #else
        *vout = min(max(vin, (int32_t)-32768), (int32_t)32767);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int64_t)-32768), (int64_t)32767);
    #else
        *vout = min(max(vin, (int64_t)-32768), (int64_t)32767);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(__float2int_rn(vin), (int32_t)-32768), (int32_t)32767);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)-32768.0F ? (int16_t)-32768 : vin;
        vin = vin > (float32_t)32767.0F ? (int16_t)32767 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int16_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, int16_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(__double2int_rn(vin), (int32_t)-32768), (int32_t)32767);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)-32768.0 ? (int16_t)-32768 : vin;
        vin = vin > (float64_t)32767.0 ? (int16_t)32767 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = min(max(vin, (int64_t)-2147483648), (int64_t)2147483647);
    #else
        *vout = min(max(vin, (int64_t)-2147483648), (int64_t)2147483647);
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __int2float_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __float2int_rn(vin);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)-2147483648.0F ? (int32_t)-2147483648 : vin;
        vin = vin > (float32_t)2147483583.0F ? (int32_t)2147483647 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int32_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __int2double_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, int32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __double2int_rn(vin);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)-2147483648.0 ? (int32_t)-2147483648 : vin;
        vin = vin > (float64_t)2147483647.0 ? (int32_t)2147483647 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __ll2float_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __float2ll_rn(vin);
    #else
        vin = rintf(vin);
        vin = vin < (float32_t)-9223372036854775808.0F ? (int64_t)-9223372036854775808 : vin;
        vin = vin > (float32_t)9223371761976868351.0F ? (int64_t)9223372036854775807 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(int64_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __ll2double_rn(vin);
    #else
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, int64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __double2ll_rn(vin);
    #else
        vin = rint(vin);
        vin = vin < (float64_t)-9223372036854775808.0 ? (int64_t)-9223372036854775808 : vin;
        vin = vin > (float64_t)9223372036854775295.0 ? (int64_t)9223372036854775807 : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        vin = vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float32_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        vin = vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, float32_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = __double2float_rn(vin);
    #else
        vin = vin;
        vin = vin < (float64_t)-340282346638528859811704183484516925440.0 ? (float32_t)-340282346638528859811704183484516925440.0F : vin;
        vin = vin > (float64_t)340282346638528859811704183484516925440.0 ? (float32_t)340282346638528859811704183484516925440.0F : vin;
        *vout = vin;
    #endif
}


template<>
__device__ __host__ __forceinline__ void saturate_cast(float64_t vin, float64_t* vout) {
    #ifdef __CUDA_ARCH__
        *vout = vin;
    #else
        vin = vin;
        *vout = vin;
    #endif
}


// namespace augpy
}


// AUGPY_SATURATE_CAST_CUH
#endif
