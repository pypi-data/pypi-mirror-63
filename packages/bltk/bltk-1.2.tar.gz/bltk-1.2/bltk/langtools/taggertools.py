noun_suffix = ['াই', 'াটা', 'াটাই', 'াটাও', 'াটাকে', 'াটাকেও', 'াটি', 'ামি', 'িক', 'িকা', 'ের', 'েরই', 'েরও', 'েরা',
               'েরাও', 'েরে', 'ও', 'আবলি', 'আলা', 'এরা', 'এরে', 'কারী', 'কুলের', 'কে', 'কেই', 'কেও', 'খানা', 'খানি',
               'গণ', 'গণে', 'গন', 'গাছা', 'গাছি', 'গিরি', 'গুচ্ছ', 'গুলা', 'গুলি', 'গুলিকে', 'গুলিতে', 'গুলিন',
               'গুলির', 'গুলো', 'গুলোও', 'গুলোকে', 'গুলোয়', 'গুলোতে', 'গুলোর', 'গোটা', 'চস', 'টা', 'টাও', 'টাই',
               'টাকে', 'টার', 'টায়', 'টি', 'টিও', 'টিকে', 'টিকেই', 'টিতে', 'টিতেও', 'টির', 'টুকু', 'টুকুন', 'দল',
               'দলের', 'দনি', 'দিগ', 'দিগকে', 'দিগে', 'দিগেতে', 'দিগের', 'দিগেরে', 'দিতে', 'দের', 'দেরই', 'দেরে',
               'নিকর', 'নিচয়', 'নের', 'পানা', 'পানি', 'পাল', 'পুঞ্জ', 'পের', 'বৎ', 'বর্গ', 'বীনি', 'বৃন্দ',
               'মণ্ডলী', 'মন্ডলি', 'মালা', 'মালার', 'মালায়', 'যূথ', 'য়', 'য়ই', 'য়ে', 'র', 'রও', 'রই', 'রা', 'রাই',
               'রাও', 'রাওতো', 'রাজি', 'রাশি', 'সকল', 'সব', 'সমুদয়', 'সমুহ', 'সমুহের', 'সমূহ', 'সমূহের', 'সহ',
               'সাৎ', 'হারা']

verb_suffix = ['াইও', 'াইছি', 'াইছে', 'াইত', 'াইতাছস', 'াইতাছে', 'াইতাম', 'াইতিস', 'াইতে', 'াইতেছ', 'াইতেছি',
               'াইতেছিল', 'াইতেছিলাম', 'াইতেছিলি', 'াইতেছিলে', 'াইতেছিলেন', 'াইতেছিস', 'াইতেছে', 'াইতেছেন', 'াইতেন',
               'াইনতে', 'াইনি', 'াইব', 'াইবার', 'াইবি', 'াইবে', 'াইবো', 'াইবেন', 'াইয়া', 'াইয়াছ', 'াইয়াছি',
               'াইয়াছিল', 'াইয়াছিলাম', 'াইয়াছিলি', 'াইয়াছিলে', 'াইয়াছিলেন', 'াইয়াছিস', 'াইয়াছে', 'াইয়াছেন', 'াইয়ো',
               'াইল', 'াইলা', 'াইলাম', 'াইলি', 'াইলে', 'াইলেন', 'াইস', 'াক', 'াচ্ছ', 'াচ্ছি', 'াচ্ছিল', 'াচ্ছিলাম',
               'াচ্ছিলি', 'াচ্ছিলুম', 'াচ্ছিলে', 'াচ্ছিলেন', 'াচ্ছিলেম', 'াচ্ছিস', 'াচ্ছে', 'াচ্ছেন', 'াছিস', 'াছে',
               'াছেন', 'াতাম', 'াতি', 'াতিস', 'াতুম', 'াতেই', 'াতেও', 'াতেছ', 'াতেন', 'াতেম', 'াননি', 'ানো',
               'ানোর', 'ানো', 'ানোই', 'ানোও', 'ানোটা', 'ানোতে', 'ানোতেই', 'ানোয়', 'ানোর', 'ানোরই', 'ানোরও',
               'ানোসহ', 'াব', 'াবানি', 'াবার', 'াবি', 'াবে', 'াবো', 'াবেও', 'াবেন', 'াবেনই', 'াবো', 'ায়ও', 'ায়নি',
               'ায়ে', 'ায়েছিলাম', 'ায়েছে', 'ায়ো', 'ালাম', 'ালু', 'ালুম', 'ালেই', 'ালেও', 'ালেন', 'ালেনও', 'ালেম',
               'িআছিল', 'িছিলে', 'িতাম', 'িতিস', 'িতে', 'িতেও', 'িতেছ', 'িতেছি', 'িতেছিল', 'িতেছিলাম', 'িতেছিলি',
               'িতেছিলে', 'িতেছিলেন', 'িতেছিস', 'িতেছেন', 'িতেন', 'িন', 'িনী', 'িবা', 'িবে', 'িবেন', 'িলুম', 'িলেম',
               'িয়াছ', 'িয়াছি', 'িয়াছিলাম', 'িয়াছিলি', 'িয়াছিলে', 'িয়াছিলেন', 'িয়াছিস', 'িয়াছে', 'িয়াছেন', 'িয়েছি',
               'িয়েছিল', 'িয়েছিলি', 'িয়েছিলে', 'িয়েছিলেন', 'িয়েছিস', 'িয়েছে', 'িয়েছেন', 'িয়েছো', 'িল', 'িলাম',
               'িলি', 'িলে', 'িলেন', 'েছ', 'েছি', 'েছিল', 'েছিলাম', 'েছিলি', 'েছিলে', 'েছিলেন', 'েছিস', 'েছে',
               'েছেন', 'েতে', 'েন', 'েননি', 'ইছিলাম', 'ইছে', 'ইত', 'ইবে', 'ইয়', 'ইয়া', 'ইস', 'চ্ছিল', 'চ্ছিলাম',
               'চ্ছিলি', 'চ্ছিলে', 'চ্ছিলেন', 'চ্ছিস', 'চ্ছে', 'চ্ছেন', 'ছ', 'ছিল', 'ছিলাম', 'ছিলি', 'ছিলুম',
               'ছিলেম', 'ছিস', 'ছে', 'ছেই', 'ছেও', 'ছেন', 'ছেনই', 'ছেনও', 'ছেনটা', 'ছেননি', 'ছো', 'তাছি', 'তাছে',
               'তাছেন', 'তাম', 'তিছি', 'তিছেন', 'তিস', 'তুত', 'তুম', 'তেছি', 'তেছিলাম', 'তেছেন', 'তেন', 'তেনা',
               'তেম', 'নোর', 'নোয়', 'বে', 'বেই', 'বেন', 'বেনই', 'য়েছিলাম', 'লাম', 'লামই', 'লে', 'লেই', 'লেও', 'লেন',
               'লেনই', 'লেম', 'লো']

adjective_suffix = ['তাত্ত্বিক', 'শ্রেষ্ঠ', 'ভিত্তিক', 'গ্রস্ত', 'মণ্ডিত', 'গ্রস্থ',
                    'াত্মক', 'পূর্ণ', 'বিহীন', 'যোগ্য',
                    'পন্থী', 'বন্দী', 'যুক্ত', 'চালিত', 'পীড়িত', 'বর্তী', 'মুক্ত', 'মূলক', 'দায়ক', 'কারক', 'জনিত',
                    'বদ্ধ', 'কারী', 'শালী', 'ঘটিত', 'বাদী', 'বদ্ধ', 'প্রদ', 'সূচক', 'বাচক', 'াঙ্গ',
                    'বহুল', 'হীন', 'কৃত', 'ময়ী', 'বতী', 'শীল', 'মান', 'িত', 'ীন',
                    'কর', 'িক', 'তর', 'ীয়', 'তম', 'গত', 'ী']

pronouns = {
    "আমি": ["আমি", 'আমার', 'আমাদের', 'আমাদেরকে', 'আমাকে', 'আমাকেও', 'আমায়', 'আমাতে', 'আমরা'],
    "তুমি": ["তুমি", 'তুই', 'তোমার', 'তোমাদের', 'তোমাকে', 'তোমাদেরকে', 'তোমাতে',
             'তোমাকেও', 'তোমারে', 'তোর', 'তোমায়', 'তোমরা'],
    "আপনি": ["আপনি", 'আপনার', 'আপনাদের', 'আপনাকে', 'আপনারে', 'আপনাকেও', 'আপনারা'],
    "এরা": ["এরা", 'একে', 'এদেরকে', 'এদের', 'এদেরকেও'],
    "এটি": ["এটি", 'এটা', 'এটির', 'এটার', 'এটাকে', 'এটিকে', 'এটাতে', 'এটিতে', 'এটিও', 'এটাও', 'এটিই'],
    "ওরা": ["ওরা", 'ওদের', 'ওদেরকে', 'ওদেরকেও'],
    "ওটি": ["ওটি", 'ওটা', 'ওটির', 'ওটার', 'ওটাকে', 'ওটাকেও', 'ওটিকে', 'ওটাতে', 'ওটিতে', 'ওটিও', 'ওটাও'],
    "সে": ['তার', 'তাকে', 'সে', "তিনি"],
    "তারা": ["তারা", 'তাদের', 'তাদেরকে', 'তাদেরকেও'],
    "সেটি": ['সেটা', 'সেটির', 'সেটার', 'সেটাকে', 'সেটিকে', 'সেটাতে', 'সেটিতে', 'সেটি'],
    "সেগুলো": ['সেগুলোতে', 'সেগুলাতে', 'সেগুলোর', 'সেগুলার', 'সেগুলো']


}


def features(sentence: list, index: int):
    """
    :author: Saimon
    :param sentence: takes a sentence in the form of a list
    :param index: index of word in a sentence
    :return: A dictionary of the following items:
                  word: str,
                  next word: str,
                  previous word: str,
                  prefix_1: str,
                  prefix_2: str,
                  prefix_3: str,
                  prefix_4: str
                  suffix_1: str,
                  suffix_2: str,
                  suffix_3: str,
                  suffix_4: str
                  has-hyphen: boolean,
                  is_numeric: boolean,
                  has_noun_suffix: boolean
                  has_verb_suffix: boolean
                  has_adjective_suffix: boolean

    """

    return {
        'word': sentence[index],
        'prefix_1': sentence[index][0],
        'prefix_2': sentence[index][:2],
        'prefix_3': sentence[index][:3],
        'prefix_4': sentence[index][:4],
        'suffix_1': sentence[index][-1],
        'suffix_2': sentence[index][-2:],
        'suffix_3': sentence[index][-3:],
        'suffix_4': sentence[index][-4:],
        'prev_word': '' if index == 0 else sentence[index - 1],
        'next_word': '' if index == len(sentence) - 1 else sentence[index + 1],
        'has_hyphen': '-' in sentence[index],
        'is_numeric': sentence[index].isdigit(),
        'has_noun_suffix': True if any([True for suf in noun_suffix if sentence[index].endswith(suf)]) else False,
        'has_adjective_suffix': True if any([True for suf in adjective_suffix if sentence[index].endswith(suf)])
        else False,
        'has_verb_suffix': True if any([True for suf in verb_suffix if sentence[index].endswith(suf)]) else False,

    }
