# Schema validator for the quality_control
# author: Thomas Cokelaer

type: map
mapping:
    "input_directory":
        type: str
        required: False
    "input_readtag":
        type: str
        required: False
    "input_pattern":
        type: str
        required: False

    "bwa_mem_phix":
        type: map
        mapping:
            "do":
                type: bool
                default: True
            "reference_file":
                type: str
                required: True
                pattern: .*
            "index_algorithm":
                type: str
                required: False
                default: "is"
            "options":
                type: str
                default: "-T 30"
                required: False
            "threads":
                type: int
                required: True
                range: { min: 1, max: 8 }
            "tmp_directory":
                type: str
                required: True
                default: './tmp'
                pattern: .*

    "kraken":
        type: map
        mapping:
            "do":
                type: bool
            "threads":
                type: int
                required: True
                range: { min: 1 }
            "databases":
                type: list

    "fastq_sampling":
        type: map
        mapping:
            "do":
                type: bool
                required: True
            "N":
                type: int
                required: False

    "fastqc":
        type: map
        mapping:
            "options":
                type: str
                required: False
            "do_raw":
                type: bool
            "do_after_phix_removal":
                type: bool
            "do_after_adapter_removal":
                type: bool

    "requirements":
        type: seq
        sequence:
            - type: str

    "cutadapt":
        type: map
        mapping:
            "do":
                type: bool
                required: True
            "tool_choice":
                type: str
                enum: [cutadapt,atropos]
                required: True
            "adapter_choice":
                type: str
                # if we set this, the pipeline is not dynamic anymore, we need
                # to add manually the adapters. We comment this for now.
                #enum: ["", "Nextera", "NEBNext", "PCRFree", "Rubicon", "TruSeq", "TruSeqCD"]
                required: False
            "design_file":
                type: str
                required: False
                pattern: .*
            "fwd":
                type: str
                required: False
            "rev":
                type: str
                required: False
            "m":
                type: int
                range: {min: 0}
                required: True
            "mode":
                type: str
                enum: [b, g, a]
                required: True
            "options":
                type: str
                required: False
            "quality":
                type: int
                range: {max: 40, min: 0}
                required: False
            "threads":
                type: int
                required: True
                range: { min: 1 }







