[tox]
envlist =
    py{36,37},
    docs,
    linters,
    packaging,
skip_missing_interpreters = true
minversion = 3.5.0
isolated_build = true

# Configure special Tox environment used for isolated building of the source
# package.
[testenv:.package]
# Use the default Python 3 version available on the system.
# NOTE: This makes it portable to CI systems where only one particular Python 3
# version is installed.
basepython = python3

[testenv]
basepython =
    !py37: python3.6
    py37: python3.7
extras =
    docs: docs
    !docs: test
ignore_errors =
    !linters: false
    # Run all linters to see their output even if one of them fails.
    linters: true

commands_pre =
    # Verify installed packages have compatible dependencies.
    # NOTE: Running 'pip check' after installation is necessary since pip
    # currently lacks dependency resolution which means it can silently create
    # broken installations.
    # For more details, see: https://github.com/pypa/pip/issues/988.
    pip check

commands =
    # General tests commands:
    # Run tests.
    py{36,37}: pytest --verbose --cov=imaps

    # Docs commands:
    # Build documentation.
    docs: python setup.py build_sphinx --fresh-env --warning-is-error

    # Linter commands:
    linters: pylint imaps --ignore sandbox --disable="W0511"
    # Check code formatting (PEP 8).
    linters: pycodestyle imaps --exclude sandbox
    # Check documentation formatting (PEP 257).
    linters: pydocstyle imaps --match='(?!test[_s]).*\.py'
    # Check order of imports.
    linters: isort --recursive --check-only --diff --skip-glob *sandbox* imaps

    # Packaging commands:
    # Confirm that items checked into git are in sdist.
    packaging: check-manifest
    # Verify package metadata and confirm the long_description will render
    # correctly on PyPI.
    packaging: python setup.py check --metadata --restructuredtext --strict
