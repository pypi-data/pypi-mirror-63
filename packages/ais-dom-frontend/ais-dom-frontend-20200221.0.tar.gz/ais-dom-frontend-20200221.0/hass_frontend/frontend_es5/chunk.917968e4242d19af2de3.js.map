{"version":3,"sources":["webpack:///./src/common/entity/compute_state_domain.ts","webpack:///./src/components/entity/state-info.js","webpack:///./src/components/entity/state-badge.ts","webpack:///../src/directives/if-defined.ts","webpack:///./src/common/entity/compute_active_state.ts","webpack:///./src/common/style/icon_color_css.ts","webpack:///./src/components/ha-relative-time.js","webpack:///./src/common/datetime/relative_time.ts"],"names":["__webpack_require__","d","__webpack_exports__","computeStateDomain","_compute_domain__WEBPACK_IMPORTED_MODULE_0__","stateObj","computeDomain","entity_id","StateInfo","PolymerElement","html","_templateObject","this","styleTemplate","stateBadgeTemplate","infoTemplate","_templateObject2","_templateObject3","_templateObject4","hass","Object","inDialog","type","Boolean","value","rtl","reflectToAttribute","computed","computeStateName","computeRTL","customElements","define","StateBadge","_decorate","_initialize","_LitElement","F","_LitElement2","_getPrototypeOf2","_this","_classCallCheck","_len","arguments","length","args","Array","_key","_getPrototypeOf","call","apply","concat","_assertThisInitialized","_inherits","kind","key","decorators","property","query","domain","ifDefined","stateColor","undefined","computeActiveState","overrideIcon","stateIcon","changedProps","has","iconStyle","color","filter","hostStyle","backgroundImage","attributes","entity_picture","overrideImage","imageUrl","hassUrl","display","hs_color","hue","sat","brightness","errorMessage","_typeof","console","warn","assign","_icon","style","static","css","iconColorCSS","LitElement","_lit_html_js__WEBPACK_IMPORTED_MODULE_0__","part","name","committer","element","removeAttribute","setValue","split","state","hvac_action","HaRelativeTime","updateRelative","bind","LocalizeMixin","datetime","String","observer","datetimeObj","parsedDateTime","_get","prototype","updateInterval","setInterval","clearInterval","newVal","Date","root","dom","innerHTML","relativeTime","localize","tests","langKey","dateObj","timeDesc","options","delta","compareTime","getTime","tense","Math","abs","i","floor","includeTense"],"mappings":"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","file":"chunk.917968e4242d19af2de3.js","sourcesContent":["import { HassEntity } from \"home-assistant-js-websocket\";\nimport { computeDomain } from \"./compute_domain\";\n\nexport const computeStateDomain = (stateObj: HassEntity) => {\n  return computeDomain(stateObj.entity_id);\n};\n","import { html } from \"@polymer/polymer/lib/utils/html-tag\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport \"../ha-relative-time\";\nimport \"./state-badge\";\nimport { computeStateName } from \"../../common/entity/compute_state_name\";\nimport { computeRTL } from \"../../common/util/compute_rtl\";\n\nclass StateInfo extends PolymerElement {\n  static get template() {\n    return html`\n      ${this.styleTemplate} ${this.stateBadgeTemplate} ${this.infoTemplate}\n    `;\n  }\n\n  static get styleTemplate() {\n    return html`\n      <style>\n        :host {\n          @apply --paper-font-body1;\n          min-width: 120px;\n          white-space: nowrap;\n        }\n\n        state-badge {\n          float: left;\n        }\n\n        :host([rtl]) state-badge {\n          float: right;\n        }\n\n        .info {\n          margin-left: 56px;\n        }\n\n        :host([rtl]) .info {\n          margin-right: 56px;\n          margin-left: 0;\n          text-align: right;\n        }\n\n        .name {\n          @apply --paper-font-common-nowrap;\n          color: var(--primary-text-color);\n          line-height: 40px;\n        }\n\n        .name[in-dialog],\n        :host([secondary-line]) .name {\n          line-height: 20px;\n        }\n\n        .time-ago,\n        .extra-info,\n        .extra-info > * {\n          @apply --paper-font-common-nowrap;\n          color: var(--secondary-text-color);\n        }\n      </style>\n    `;\n  }\n\n  static get stateBadgeTemplate() {\n    return html`\n      <state-badge state-obj=\"[[stateObj]]\"></state-badge>\n    `;\n  }\n\n  static get infoTemplate() {\n    return html`\n      <div class=\"info\">\n        <div class=\"name\" in-dialog$=\"[[inDialog]]\">\n          [[computeStateName(stateObj)]]\n        </div>\n\n        <template is=\"dom-if\" if=\"[[inDialog]]\">\n          <div class=\"time-ago\">\n            <ha-relative-time\n              hass=\"[[hass]]\"\n              datetime=\"[[stateObj.last_changed]]\"\n            ></ha-relative-time>\n          </div>\n        </template>\n        <template is=\"dom-if\" if=\"[[!inDialog]]\">\n          <div class=\"extra-info\"><slot> </slot></div>\n        </template>\n      </div>\n    `;\n  }\n\n  static get properties() {\n    return {\n      hass: Object,\n      stateObj: Object,\n      inDialog: {\n        type: Boolean,\n        value: () => false,\n      },\n      rtl: {\n        type: Boolean,\n        reflectToAttribute: true,\n        computed: \"computeRTL(hass)\",\n      },\n    };\n  }\n\n  computeStateName(stateObj) {\n    return computeStateName(stateObj);\n  }\n\n  computeRTL(hass) {\n    return computeRTL(hass);\n  }\n}\n\ncustomElements.define(\"state-info\", StateInfo);\n","import {\n  LitElement,\n  TemplateResult,\n  css,\n  CSSResult,\n  html,\n  property,\n  PropertyValues,\n  query,\n} from \"lit-element\";\nimport \"../ha-icon\";\nimport { computeStateDomain } from \"../../common/entity/compute_state_domain\";\nimport { stateIcon } from \"../../common/entity/state_icon\";\nimport { HassEntity } from \"home-assistant-js-websocket\";\n// Not duplicate, this is for typing.\n// tslint:disable-next-line\nimport { HaIcon } from \"../ha-icon\";\nimport { HomeAssistant } from \"../../types\";\nimport { computeActiveState } from \"../../common/entity/compute_active_state\";\nimport { ifDefined } from \"lit-html/directives/if-defined\";\nimport { iconColorCSS } from \"../../common/style/icon_color_css\";\n\nexport class StateBadge extends LitElement {\n  public hass?: HomeAssistant;\n  @property() public stateObj?: HassEntity;\n  @property() public overrideIcon?: string;\n  @property() public overrideImage?: string;\n  @property({ type: Boolean }) public stateColor?: boolean;\n  @query(\"ha-icon\") private _icon!: HaIcon;\n\n  protected render(): TemplateResult {\n    const stateObj = this.stateObj;\n\n    if (!stateObj) {\n      return html``;\n    }\n\n    const domain = computeStateDomain(stateObj);\n\n    return html`\n      <ha-icon\n        id=\"icon\"\n        data-domain=${ifDefined(\n          this.stateColor || (domain === \"light\" && this.stateColor !== false)\n            ? domain\n            : undefined\n        )}\n        data-state=${computeActiveState(stateObj)}\n        .icon=${this.overrideIcon || stateIcon(stateObj)}\n      ></ha-icon>\n    `;\n  }\n\n  protected updated(changedProps: PropertyValues) {\n    if (!changedProps.has(\"stateObj\") || !this.stateObj) {\n      return;\n    }\n    const stateObj = this.stateObj;\n\n    const iconStyle: Partial<CSSStyleDeclaration> = {\n      color: \"\",\n      filter: \"\",\n    };\n    const hostStyle: Partial<CSSStyleDeclaration> = {\n      backgroundImage: \"\",\n    };\n    if (stateObj) {\n      // hide icon if we have entity picture\n      if (\n        (stateObj.attributes.entity_picture && !this.overrideIcon) ||\n        this.overrideImage\n      ) {\n        let imageUrl = this.overrideImage || stateObj.attributes.entity_picture;\n        if (this.hass) {\n          imageUrl = this.hass.hassUrl(imageUrl);\n        }\n        hostStyle.backgroundImage = `url(${imageUrl})`;\n        iconStyle.display = \"none\";\n      } else {\n        if (stateObj.attributes.hs_color && this.stateColor !== false) {\n          const hue = stateObj.attributes.hs_color[0];\n          const sat = stateObj.attributes.hs_color[1];\n          if (sat > 10) {\n            iconStyle.color = `hsl(${hue}, 100%, ${100 - sat / 2}%)`;\n          }\n        }\n        if (stateObj.attributes.brightness && this.stateColor !== false) {\n          const brightness = stateObj.attributes.brightness;\n          if (typeof brightness !== \"number\") {\n            const errorMessage = `Type error: state-badge expected number, but type of ${\n              stateObj.entity_id\n            }.attributes.brightness is ${typeof brightness} (${brightness})`;\n            // tslint:disable-next-line\n            console.warn(errorMessage);\n          }\n          // lowest brighntess will be around 50% (that's pretty dark)\n          iconStyle.filter = `brightness(${(brightness + 245) / 5}%)`;\n        }\n      }\n    }\n    Object.assign(this._icon.style, iconStyle);\n    Object.assign(this.style, hostStyle);\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        position: relative;\n        display: inline-block;\n        width: 40px;\n        color: var(--paper-item-icon-color, #44739e);\n        border-radius: 50%;\n        height: 40px;\n        text-align: center;\n        background-size: cover;\n        line-height: 40px;\n        vertical-align: middle;\n      }\n\n      ha-icon {\n        transition: color 0.3s ease-in-out, filter 0.3s ease-in-out;\n      }\n\n      ${iconColorCSS}\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"state-badge\": StateBadge;\n  }\n}\n\ncustomElements.define(\"state-badge\", StateBadge);\n","/**\n * @license\n * Copyright (c) 2018 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, directive, Part} from '../lit-html.js';\n\n/**\n * For AttributeParts, sets the attribute if the value is defined and removes\n * the attribute if the value is undefined.\n *\n * For other part types, this directive is a no-op.\n */\nexport const ifDefined = directive((value: unknown) => (part: Part) => {\n  if (value === undefined && part instanceof AttributePart) {\n    if (value !== part.value) {\n      const name = part.committer.name;\n      part.committer.element.removeAttribute(name);\n    }\n  } else {\n    part.setValue(value);\n  }\n});\n","import { HassEntity } from \"home-assistant-js-websocket\";\n\nexport const computeActiveState = (stateObj: HassEntity): string => {\n  const domain = stateObj.entity_id.split(\".\")[0];\n  let state = stateObj.state;\n\n  if (domain === \"climate\") {\n    state = stateObj.attributes.hvac_action;\n  }\n\n  return state;\n};\n","import { css } from \"lit-element\";\n\nexport const iconColorCSS = css`\n  ha-icon[data-domain=\"alert\"][data-state=\"on\"],\n  ha-icon[data-domain=\"automation\"][data-state=\"on\"],\n  ha-icon[data-domain=\"binary_sensor\"][data-state=\"on\"],\n  ha-icon[data-domain=\"calendar\"][data-state=\"on\"],\n  ha-icon[data-domain=\"camera\"][data-state=\"streaming\"],\n  ha-icon[data-domain=\"cover\"][data-state=\"open\"],\n  ha-icon[data-domain=\"fan\"][data-state=\"on\"],\n  ha-icon[data-domain=\"light\"][data-state=\"on\"],\n  ha-icon[data-domain=\"input_boolean\"][data-state=\"on\"],\n  ha-icon[data-domain=\"lock\"][data-state=\"unlocked\"],\n  ha-icon[data-domain=\"media_player\"][data-state=\"paused\"],\n  ha-icon[data-domain=\"media_player\"][data-state=\"playing\"],\n  ha-icon[data-domain=\"script\"][data-state=\"running\"],\n  ha-icon[data-domain=\"sun\"][data-state=\"above_horizon\"],\n  ha-icon[data-domain=\"switch\"][data-state=\"on\"],\n  ha-icon[data-domain=\"timer\"][data-state=\"active\"],\n  ha-icon[data-domain=\"vacuum\"][data-state=\"cleaning\"] {\n    color: var(--paper-item-icon-active-color, #fdd835);\n  }\n\n  ha-icon[data-domain=\"climate\"][data-state=\"cooling\"] {\n    color: var(--cool-color, #2b9af9);\n  }\n\n  ha-icon[data-domain=\"climate\"][data-state=\"heating\"] {\n    color: var(--heat-color, #ff8100);\n  }\n\n  ha-icon[data-domain=\"alarm_control_panel\"] {\n    color: var(--alarm-color-armed, var(--label-badge-red));\n  }\n\n  ha-icon[data-domain=\"alarm_control_panel\"][data-state=\"disarmed\"] {\n    color: var(--alarm-color-disarmed, var(--label-badge-green));\n  }\n\n  ha-icon[data-domain=\"alarm_control_panel\"][data-state=\"pending\"],\n  ha-icon[data-domain=\"alarm_control_panel\"][data-state=\"arming\"] {\n    color: var(--alarm-color-pending, var(--label-badge-yellow));\n    animation: pulse 1s infinite;\n  }\n\n  ha-icon[data-domain=\"alarm_control_panel\"][data-state=\"triggered\"] {\n    color: var(--alarm-color-triggered, var(--label-badge-red));\n    animation: pulse 1s infinite;\n  }\n\n  @keyframes pulse {\n    0% {\n      opacity: 1;\n    }\n    100% {\n      opacity: 0;\n    }\n  }\n\n  ha-icon[data-domain=\"plant\"][data-state=\"problem\"],\n  ha-icon[data-domain=\"zwave\"][data-state=\"dead\"] {\n    color: var(--error-state-color, #db4437);\n  }\n\n  /* Color the icon if unavailable */\n  ha-icon[data-state=\"unavailable\"] {\n    color: var(--state-icon-unavailable-color);\n  }\n`;\n","import { dom } from \"@polymer/polymer/lib/legacy/polymer.dom\";\nimport { PolymerElement } from \"@polymer/polymer/polymer-element\";\n\nimport relativeTime from \"../common/datetime/relative_time\";\n\nimport LocalizeMixin from \"../mixins/localize-mixin\";\n\n/*\n * @appliesMixin LocalizeMixin\n */\nclass HaRelativeTime extends LocalizeMixin(PolymerElement) {\n  static get properties() {\n    return {\n      hass: Object,\n      datetime: {\n        type: String,\n        observer: \"datetimeChanged\",\n      },\n\n      datetimeObj: {\n        type: Object,\n        observer: \"datetimeObjChanged\",\n      },\n\n      parsedDateTime: Object,\n    };\n  }\n\n  constructor() {\n    super();\n    this.updateRelative = this.updateRelative.bind(this);\n  }\n\n  connectedCallback() {\n    super.connectedCallback();\n    // update every 60 seconds\n    this.updateInterval = setInterval(this.updateRelative, 60000);\n  }\n\n  disconnectedCallback() {\n    super.disconnectedCallback();\n    clearInterval(this.updateInterval);\n  }\n\n  datetimeChanged(newVal) {\n    this.parsedDateTime = newVal ? new Date(newVal) : null;\n\n    this.updateRelative();\n  }\n\n  datetimeObjChanged(newVal) {\n    this.parsedDateTime = newVal;\n\n    this.updateRelative();\n  }\n\n  updateRelative() {\n    const root = dom(this);\n    if (!this.parsedDateTime) {\n      root.innerHTML = this.localize(\"ui.components.relative_time.never\");\n    } else {\n      root.innerHTML = relativeTime(this.parsedDateTime, this.localize);\n    }\n  }\n}\n\ncustomElements.define(\"ha-relative-time\", HaRelativeTime);\n","import { LocalizeFunc } from \"../translations/localize\";\n\n/**\n * Calculate a string representing a date object as relative time from now.\n *\n * Example output: 5 minutes ago, in 3 days.\n */\nconst tests = [60, 60, 24, 7];\nconst langKey = [\"second\", \"minute\", \"hour\", \"day\"];\n\nexport default function relativeTime(\n  dateObj: Date,\n  localize: LocalizeFunc,\n  options: {\n    compareTime?: Date;\n    includeTense?: boolean;\n  } = {}\n): string {\n  const compareTime = options.compareTime || new Date();\n  let delta = (compareTime.getTime() - dateObj.getTime()) / 1000;\n  const tense = delta >= 0 ? \"past\" : \"future\";\n  delta = Math.abs(delta);\n\n  let timeDesc;\n\n  for (let i = 0; i < tests.length; i++) {\n    if (delta < tests[i]) {\n      delta = Math.floor(delta);\n      timeDesc = localize(\n        `ui.components.relative_time.duration.${langKey[i]}`,\n        \"count\",\n        delta\n      );\n      break;\n    }\n\n    delta /= tests[i];\n  }\n\n  if (timeDesc === undefined) {\n    delta = Math.floor(delta);\n    timeDesc = localize(\n      \"ui.components.relative_time.duration.week\",\n      \"count\",\n      delta\n    );\n  }\n\n  return options.includeTense === false\n    ? timeDesc\n    : localize(`ui.components.relative_time.${tense}`, \"time\", timeDesc);\n}\n"],"sourceRoot":""}