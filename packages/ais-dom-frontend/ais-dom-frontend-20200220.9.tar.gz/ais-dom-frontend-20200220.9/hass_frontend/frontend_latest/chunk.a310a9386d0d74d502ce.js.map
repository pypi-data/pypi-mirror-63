{"version":3,"sources":["webpack:///./node_modules/memoize-one/dist/memoize-one.esm.js","webpack:///./node_modules/@polymer/paper-item/paper-icon-item.js","webpack:///./node_modules/@polymer/paper-item/paper-item-body.js","webpack:///./src/panels/lovelace/common/structs/struct.ts","webpack:///./src/panels/lovelace/common/structs/is-entity-id.ts","webpack:///./src/panels/lovelace/common/structs/is-icon.ts","webpack:///./src/panels/lovelace/components/hui-theme-select-editor.ts","webpack:///./src/panels/lovelace/editor/types.ts","webpack:///./src/panels/lovelace/editor/config-elements/hui-glance-card-editor.ts"],"names":["simpleIsEqual","newArgs","lastArgs","length","every","newArg","index","newValue","oldValue","resultFn","isEqual","lastThis","lastResult","calledOnce","_len","arguments","Array","_key","this","apply","__webpack_require__","_polymer_polymer_lib_legacy_polymer_fn_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_paper_item_behavior_js__WEBPACK_IMPORTED_MODULE_6__","Polymer","_template","html","is","behaviors","PaperItemBehavior","d","__webpack_exports__","struct","superstruct","types","entity-id","value","includes","icon","_decorate","customElement","_initialize","_LitElement","F","[object Object]","args","super","kind","decorators","property","key","themes","concat","Object","keys","hass","sort","label","localize","_changed","map","theme","static","css","ev","target","fireEvent","LitElement","actionConfigStruct","entitiesConfigStruct","_common_structs_struct__WEBPACK_IMPORTED_MODULE_0__","action","navigation_path","url_path","service","service_data","union","entity","name","cardConfigStruct","type","title","columns","show_name","show_state","show_icon","entities","HuiGlanceCardEditor","config","_config","_configEntities","processEditorEntities","NaN","configElementStyle","_title","_valueChanged","_theme","_columns","configValue","detail","isNaN","Number","assign","undefined","checked"],"mappings":"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","file":"chunk.a310a9386d0d74d502ce.js","sourcesContent":["var shallowEqual = function shallowEqual(newValue, oldValue) {\n  return newValue === oldValue;\n};\n\nvar simpleIsEqual = function simpleIsEqual(newArgs, lastArgs) {\n  return newArgs.length === lastArgs.length && newArgs.every(function (newArg, index) {\n    return shallowEqual(newArg, lastArgs[index]);\n  });\n};\n\nfunction index (resultFn, isEqual) {\n  if (isEqual === void 0) {\n    isEqual = simpleIsEqual;\n  }\n\n  var lastThis;\n  var lastArgs = [];\n  var lastResult;\n  var calledOnce = false;\n\n  var result = function result() {\n    for (var _len = arguments.length, newArgs = new Array(_len), _key = 0; _key < _len; _key++) {\n      newArgs[_key] = arguments[_key];\n    }\n\n    if (calledOnce && lastThis === this && isEqual(newArgs, lastArgs)) {\n      return lastResult;\n    }\n\n    lastResult = resultFn.apply(this, newArgs);\n    calledOnce = true;\n    lastThis = this;\n    lastArgs = newArgs;\n    return lastResult;\n  };\n\n  return result;\n}\n\nexport default index;\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/typography.js';\nimport './paper-item-shared-styles.js';\n\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\nimport {PaperItemBehavior} from './paper-item-behavior.js';\n\n/*\n`<paper-icon-item>` is a convenience element to make an item with icon. It is an\ninteractive list item with a fixed-width icon area, according to Material\nDesign. This is useful if the icons are of varying widths, but you want the item\nbodies to line up. Use this like a `<paper-item>`. The child node with the slot\nname `item-icon` is placed in the icon area.\n\n    <paper-icon-item>\n      <iron-icon icon=\"favorite\" slot=\"item-icon\"></iron-icon>\n      Favorite\n    </paper-icon-item>\n    <paper-icon-item>\n      <div class=\"avatar\" slot=\"item-icon\"></div>\n      Avatar\n    </paper-icon-item>\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-icon-width` | Width of the icon area | `56px`\n`--paper-item-icon` | Mixin applied to the icon area | `{}`\n`--paper-icon-item` | Mixin applied to the item | `{}`\n`--paper-item-selected-weight` | The font weight of a selected item | `bold`\n`--paper-item-selected` | Mixin applied to selected paper-items | `{}`\n`--paper-item-disabled-color` | The color for disabled paper-items | `--disabled-text-color`\n`--paper-item-disabled` | Mixin applied to disabled paper-items | `{}`\n`--paper-item-focused` | Mixin applied to focused paper-items | `{}`\n`--paper-item-focused-before` | Mixin applied to :before focused paper-items | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style include=\"paper-item-shared-styles\"></style>\n    <style>\n      :host {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n        @apply --paper-font-subhead;\n\n        @apply --paper-item;\n        @apply --paper-icon-item;\n      }\n\n      .content-icon {\n        @apply --layout-horizontal;\n        @apply --layout-center;\n\n        width: var(--paper-item-icon-width, 56px);\n        @apply --paper-item-icon;\n      }\n    </style>\n\n    <div id=\"contentIcon\" class=\"content-icon\">\n      <slot name=\"item-icon\"></slot>\n    </div>\n    <slot></slot>\n`,\n\n  is: 'paper-icon-item',\n  behaviors: [PaperItemBehavior]\n});\n","/**\n@license\nCopyright (c) 2015 The Polymer Project Authors. All rights reserved.\nThis code may only be used under the BSD style license found at\nhttp://polymer.github.io/LICENSE.txt The complete set of authors may be found at\nhttp://polymer.github.io/AUTHORS.txt The complete set of contributors may be\nfound at http://polymer.github.io/CONTRIBUTORS.txt Code distributed by Google as\npart of the polymer project is also subject to an additional IP rights grant\nfound at http://polymer.github.io/PATENTS.txt\n*/\nimport '@polymer/polymer/polymer-legacy.js';\n\nimport '@polymer/iron-flex-layout/iron-flex-layout.js';\nimport '@polymer/paper-styles/default-theme.js';\nimport '@polymer/paper-styles/typography.js';\nimport {Polymer} from '@polymer/polymer/lib/legacy/polymer-fn.js';\nimport {html} from '@polymer/polymer/lib/utils/html-tag.js';\n\n/*\nUse `<paper-item-body>` in a `<paper-item>` or `<paper-icon-item>` to make two-\nor three- line items. It is a flex item that is a vertical flexbox.\n\n    <paper-item>\n      <paper-item-body two-line>\n        <div>Show your status</div>\n        <div secondary>Your status is visible to everyone</div>\n      </paper-item-body>\n    </paper-item>\n\nThe child elements with the `secondary` attribute is given secondary text\nstyling.\n\n### Styling\n\nThe following custom properties and mixins are available for styling:\n\nCustom property | Description | Default\n----------------|-------------|----------\n`--paper-item-body-two-line-min-height` | Minimum height of a two-line item | `72px`\n`--paper-item-body-three-line-min-height` | Minimum height of a three-line item | `88px`\n`--paper-item-body-secondary-color` | Foreground color for the `secondary` area | `--secondary-text-color`\n`--paper-item-body-secondary` | Mixin applied to the `secondary` area | `{}`\n\n*/\nPolymer({\n  _template: html`\n    <style>\n      :host {\n        overflow: hidden; /* needed for text-overflow: ellipsis to work on ff */\n        @apply --layout-vertical;\n        @apply --layout-center-justified;\n        @apply --layout-flex;\n      }\n\n      :host([two-line]) {\n        min-height: var(--paper-item-body-two-line-min-height, 72px);\n      }\n\n      :host([three-line]) {\n        min-height: var(--paper-item-body-three-line-min-height, 88px);\n      }\n\n      :host > ::slotted(*) {\n        overflow: hidden;\n        text-overflow: ellipsis;\n        white-space: nowrap;\n      }\n\n      :host > ::slotted([secondary]) {\n        @apply --paper-font-body1;\n\n        color: var(--paper-item-body-secondary-color, var(--secondary-text-color));\n\n        @apply --paper-item-body-secondary;\n      }\n    </style>\n\n    <slot></slot>\n`,\n\n  is: 'paper-item-body'\n});\n","import { superstruct } from \"superstruct\";\nimport { isEntityId } from \"./is-entity-id\";\nimport { isIcon } from \"./is-icon\";\n\nexport const struct = superstruct({\n  types: {\n    \"entity-id\": isEntityId,\n    icon: isIcon,\n  },\n});\n","export function isEntityId(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"entity id should be a string\";\n  }\n  if (!value.includes(\".\")) {\n    return \"entity id should be in the format 'domain.entity'\";\n  }\n  return true;\n}\n","export function isIcon(value: any): string | boolean {\n  if (typeof value !== \"string\") {\n    return \"icon should be a string\";\n  }\n  if (!value.includes(\":\")) {\n    return \"icon should be in the format 'mdi:icon'\";\n  }\n  return true;\n}\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n  css,\n  CSSResult,\n} from \"lit-element\";\nimport \"@material/mwc-button\";\n\nimport { HomeAssistant } from \"../../../types\";\nimport { fireEvent, HASSDomEvent } from \"../../../common/dom/fire_event\";\n\ndeclare global {\n  // for fire event\n  interface HASSDomEvents {\n    \"theme-changed\": undefined;\n  }\n  // for add event listener\n  interface HTMLElementEventMap {\n    \"theme-changed\": HASSDomEvent<undefined>;\n  }\n}\n\n@customElement(\"hui-theme-select-editor\")\nexport class HuiThemeSelectEditor extends LitElement {\n  @property() public value?: string;\n  @property() public label?: string;\n  @property() public hass?: HomeAssistant;\n\n  protected render(): TemplateResult {\n    const themes = [\"Backend-selected\", \"default\"].concat(\n      Object.keys(this.hass!.themes.themes).sort()\n    );\n\n    return html`\n      <paper-dropdown-menu\n        .label=${this.label ||\n          this.hass!.localize(\"ui.panel.lovelace.editor.card.generic.theme\") +\n            \" (\" +\n            this.hass!.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            ) +\n            \")\"}\n        dynamic-align\n        @value-changed=\"${this._changed}\"\n      >\n        <paper-listbox\n          slot=\"dropdown-content\"\n          .selected=\"${this.value}\"\n          attr-for-selected=\"theme\"\n        >\n          ${themes.map((theme) => {\n            return html`\n              <paper-item theme=\"${theme}\">${theme}</paper-item>\n            `;\n          })}\n        </paper-listbox>\n      </paper-dropdown-menu>\n    `;\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      paper-dropdown-menu {\n        width: 100%;\n      }\n    `;\n  }\n\n  private _changed(ev): void {\n    if (!this.hass || ev.target.value === \"\") {\n      return;\n    }\n    this.value = ev.target.value;\n    fireEvent(this, \"theme-changed\");\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-theme-select-editor\": HuiThemeSelectEditor;\n  }\n}\n","import {\n  LovelaceCardConfig,\n  LovelaceViewConfig,\n  ActionConfig,\n} from \"../../../data/lovelace\";\nimport { EntityConfig } from \"../entity-rows/types\";\nimport { InputType } from \"zlib\";\nimport { struct } from \"../common/structs/struct\";\n\nexport interface YamlChangedEvent extends Event {\n  detail: {\n    yaml: string;\n  };\n}\n\nexport interface ViewEditEvent extends Event {\n  detail: {\n    config: LovelaceViewConfig;\n  };\n}\n\nexport interface ConfigValue {\n  format: \"json\" | \"yaml\";\n  value?: string | LovelaceCardConfig;\n}\n\nexport interface ConfigError {\n  type: string;\n  message: string;\n}\n\nexport interface EntitiesEditorEvent {\n  detail?: {\n    entities?: EntityConfig[];\n  };\n  target?: EventTarget;\n}\n\nexport interface EditorTarget extends EventTarget {\n  value?: string;\n  index?: number;\n  checked?: boolean;\n  configValue?: string;\n  type?: InputType;\n  config: ActionConfig;\n}\n\nexport interface CardPickTarget extends EventTarget {\n  type: string;\n}\n\nexport const actionConfigStruct = struct({\n  action: \"string\",\n  navigation_path: \"string?\",\n  url_path: \"string?\",\n  service: \"string?\",\n  service_data: \"object?\",\n});\n\nexport const entitiesConfigStruct = struct.union([\n  {\n    entity: \"entity-id\",\n    name: \"string?\",\n    icon: \"icon?\",\n  },\n  \"entity-id\",\n]);\n","import {\n  html,\n  LitElement,\n  TemplateResult,\n  customElement,\n  property,\n} from \"lit-element\";\nimport \"@polymer/paper-dropdown-menu/paper-dropdown-menu\";\nimport \"@polymer/paper-item/paper-item\";\nimport \"@polymer/paper-listbox/paper-listbox\";\n\nimport \"../../../../components/entity/state-badge\";\nimport \"../../components/hui-theme-select-editor\";\nimport \"../../components/hui-entity-editor\";\nimport \"../../../../components/ha-card\";\nimport \"../../../../components/ha-icon\";\nimport \"../../../../components/ha-switch\";\n\nimport { struct } from \"../../common/structs/struct\";\nimport { processEditorEntities } from \"../process-editor-entities\";\nimport {\n  EntitiesEditorEvent,\n  EditorTarget,\n  entitiesConfigStruct,\n} from \"../types\";\nimport { HomeAssistant } from \"../../../../types\";\nimport { LovelaceCardEditor } from \"../../types\";\nimport { fireEvent } from \"../../../../common/dom/fire_event\";\nimport { configElementStyle } from \"./config-elements-style\";\nimport { GlanceCardConfig, ConfigEntity } from \"../../cards/types\";\n\nconst cardConfigStruct = struct({\n  type: \"string\",\n  title: \"string|number?\",\n  theme: \"string?\",\n  columns: \"number?\",\n  show_name: \"boolean?\",\n  show_state: \"boolean?\",\n  show_icon: \"boolean?\",\n  entities: [entitiesConfigStruct],\n});\n\n@customElement(\"hui-glance-card-editor\")\nexport class HuiGlanceCardEditor extends LitElement\n  implements LovelaceCardEditor {\n  @property() public hass?: HomeAssistant;\n\n  @property() private _config?: GlanceCardConfig;\n\n  @property() private _configEntities?: ConfigEntity[];\n\n  public setConfig(config: GlanceCardConfig): void {\n    config = cardConfigStruct(config);\n    this._config = config;\n    this._configEntities = processEditorEntities(config.entities);\n  }\n\n  get _title(): string {\n    return this._config!.title || \"\";\n  }\n\n  get _theme(): string {\n    return this._config!.theme || \"Backend-selected\";\n  }\n\n  get _columns(): number {\n    return this._config!.columns || NaN;\n  }\n\n  get _show_name(): boolean {\n    return this._config!.show_name || true;\n  }\n\n  get _show_icon(): boolean {\n    return this._config!.show_icon || true;\n  }\n\n  get _show_state(): boolean {\n    return this._config!.show_state || true;\n  }\n\n  protected render(): TemplateResult {\n    if (!this.hass) {\n      return html``;\n    }\n\n    return html`\n      ${configElementStyle}\n      <div class=\"card-config\">\n        <paper-input\n          .label=\"${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.generic.title\"\n          )} (${this.hass.localize(\n            \"ui.panel.lovelace.editor.card.config.optional\"\n          )})\"\n          .value=\"${this._title}\"\n          .configValue=\"${\"title\"}\"\n          @value-changed=\"${this._valueChanged}\"\n        ></paper-input>\n        <div class=\"side-by-side\">\n          <hui-theme-select-editor\n            .hass=\"${this.hass}\"\n            .value=\"${this._theme}\"\n            .configValue=\"${\"theme\"}\"\n            @theme-changed=\"${this._valueChanged}\"\n          ></hui-theme-select-editor>\n          <paper-input\n            .label=\"${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.glance.columns\"\n            )} (${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.config.optional\"\n            )})\"\n            type=\"number\"\n            .value=\"${this._columns}\"\n            .configValue=\"${\"columns\"}\"\n            @value-changed=\"${this._valueChanged}\"\n          ></paper-input>\n        </div>\n        <div class=\"side-by-side\">\n          <ha-switch\n            .checked=${this._config!.show_name !== false}\n            .configValue=\"${\"show_name\"}\"\n            @change=\"${this._valueChanged}\"\n            >${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.show_name\"\n            )}</ha-switch\n          >\n          <ha-switch\n            .checked=${this._config!.show_icon !== false}\n            .configValue=\"${\"show_icon\"}\"\n            @change=\"${this._valueChanged}\"\n            >${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.show_icon\"\n            )}</ha-switch\n          >\n          <ha-switch\n            .checked=${this._config!.show_state !== false}\n            .configValue=\"${\"show_state\"}\"\n            @change=\"${this._valueChanged}\"\n            >${this.hass.localize(\n              \"ui.panel.lovelace.editor.card.generic.show_state\"\n            )}</ha-switch\n          >\n        </div>\n      </div>\n      <hui-entity-editor\n        .hass=\"${this.hass}\"\n        .entities=\"${this._configEntities}\"\n        @entities-changed=\"${this._valueChanged}\"\n      ></hui-entity-editor>\n    `;\n  }\n\n  private _valueChanged(ev: EntitiesEditorEvent): void {\n    if (!this._config || !this.hass) {\n      return;\n    }\n    const target = ev.target! as EditorTarget;\n\n    if (target.configValue && this[`_${target.configValue}`] === target.value) {\n      return;\n    }\n    if (ev.detail && ev.detail.entities) {\n      this._config.entities = ev.detail.entities;\n      this._configEntities = processEditorEntities(this._config.entities);\n    } else if (target.configValue) {\n      if (\n        target.value === \"\" ||\n        (target.type === \"number\" && isNaN(Number(target.value)))\n      ) {\n        delete this._config[target.configValue!];\n      } else {\n        let value: any = target.value;\n        if (target.type === \"number\") {\n          value = Number(value);\n        }\n        this._config = {\n          ...this._config,\n          [target.configValue!]:\n            target.checked !== undefined ? target.checked : value,\n        };\n      }\n    }\n    fireEvent(this, \"config-changed\", { config: this._config });\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"hui-glance-card-editor\": HuiGlanceCardEditor;\n  }\n}\n"],"sourceRoot":""}