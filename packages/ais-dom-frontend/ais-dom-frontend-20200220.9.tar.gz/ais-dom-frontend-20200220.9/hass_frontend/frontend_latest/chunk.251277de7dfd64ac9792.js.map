{"version":3,"sources":["webpack:///./src/components/ha-switch.ts","webpack:///./src/common/util/render-status.ts","webpack:///./src/components/map/ha-location-editor.ts","webpack:///./src/components/ha-dialog.ts","webpack:///./src/panels/config/zone/dialog-zone-detail.ts","webpack:///./src/common/location/add_distance_to_coord.ts"],"names":["MwcSwitch","customElements","get","_decorate","customElement","_initialize","_MwcSwitch","HaSwitch","[object Object]","args","super","this","F","d","kind","decorators","property","type","Boolean","key","value","query","_get","_getPrototypeOf","prototype","call","style","setProperty","classList","toggle","_slot","assignedNodes","length","addEventListener","haptic","forwardHaptic","html","ripple","interactionNode","_haChangeHandler","static","css","e","mdcFoundation","handleChange","checked","formElement","__webpack_require__","__webpack_exports__","afterNextRender","nextRender","cb","requestAnimationFrame","setTimeout","Promise","resolve","LocationEditor","_LitElement","_leafletMap","location","_locationMarker","getBounds","fitBounds","setView","fitZoom","_ignoreFitToMap","changedProps","_initMap","Leaflet","has","_updateMarker","fitMap","_updateRadius","_updateRadiusColor","_updateIcon","shadowRoot","querySelector","async","setupLeafletMap","_mapEl","radius","ev","_locationUpdated","latlng","invalidateSize","longitude","lng","Math","abs","lat","fireEvent","undefined","bubbles","getRadius","icon","_iconEl","iconHTML","el","document","createElement","setAttribute","outerHTML","divIcon","iconSize","className","_setIcon","setIcon","editing","_moveMarker","enable","moveMarker","resizeMarker","_resizeMarkers","target","getLatLng","_radiusUpdated","setLatLng","disable","_setupEdit","circle","color","radiusColor","defaultRadiusColor","addLayer","marker","draggable","remove","setRadius","setStyle","LitElement","MwcDialog","_MwcDialog","DialogZoneDetail","params","_params","_error","entry","_name","name","_icon","_latitude","latitude","hass","config","_longitude","_passive","passive","_radius","initConfig","getZoneEditorInitData","movedHomeLocation","dx","random","dy","PI","cos","updateComplete","title","localize","nameValid","trim","iconValid","includes","latValid","String","lngValid","radiusValid","valid","_close","_valueChanged","_locationValue","passiveRadiusColor","_locationChanged","_passiveChanged","_deleteEntry","_submitting","_updateEntry","Number","currentTarget","configValue","detail","values","updateEntry","createEntry","err","message","removeEntry","define"],"mappings":"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","file":"chunk.251277de7dfd64ac9792.js","sourcesContent":["import {\n  customElement,\n  CSSResult,\n  css,\n  query,\n  html,\n  property,\n} from \"lit-element\";\nimport \"@material/mwc-switch\";\nimport { style } from \"@material/mwc-switch/mwc-switch-css\";\n// tslint:disable-next-line\nimport { Switch } from \"@material/mwc-switch\";\nimport { Constructor } from \"../types\";\nimport { forwardHaptic } from \"../data/haptics\";\nimport { ripple } from \"@material/mwc-ripple/ripple-directive\";\n// tslint:disable-next-line\nconst MwcSwitch = customElements.get(\"mwc-switch\") as Constructor<Switch>;\n\n@customElement(\"ha-switch\")\nexport class HaSwitch extends MwcSwitch {\n  // Generate a haptic vibration.\n  // Only set to true if the new value of the switch is applied right away when toggling.\n  // Do not add haptic when a user is required to press save.\n  @property({ type: Boolean }) public haptic = false;\n  @query(\"slot\") private _slot!: HTMLSlotElement;\n\n  protected firstUpdated() {\n    super.firstUpdated();\n    this.style.setProperty(\n      \"--mdc-theme-secondary\",\n      \"var(--switch-checked-color)\"\n    );\n    this.classList.toggle(\n      \"slotted\",\n      Boolean(this._slot.assignedNodes().length)\n    );\n    this.addEventListener(\"change\", () => {\n      if (this.haptic) {\n        forwardHaptic(\"light\");\n      }\n    });\n  }\n\n  protected render() {\n    return html`\n      <div class=\"mdc-switch\">\n        <div class=\"mdc-switch__track\"></div>\n        <div\n          class=\"mdc-switch__thumb-underlay\"\n          .ripple=\"${ripple({\n            interactionNode: this,\n          })}\"\n        >\n          <div class=\"mdc-switch__thumb\">\n            <input\n              type=\"checkbox\"\n              id=\"basic-switch\"\n              class=\"mdc-switch__native-control\"\n              role=\"switch\"\n              @change=\"${this._haChangeHandler}\"\n            />\n          </div>\n        </div>\n      </div>\n      <label for=\"basic-switch\"><slot></slot></label>\n    `;\n  }\n\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        :host {\n          display: flex;\n          flex-direction: row;\n          align-items: center;\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__thumb {\n          background-color: var(--switch-checked-button-color);\n          border-color: var(--switch-checked-button-color);\n        }\n        .mdc-switch.mdc-switch--checked .mdc-switch__track {\n          background-color: var(--switch-checked-track-color);\n          border-color: var(--switch-checked-track-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__thumb {\n          background-color: var(--switch-unchecked-button-color);\n          border-color: var(--switch-unchecked-button-color);\n        }\n        .mdc-switch:not(.mdc-switch--checked) .mdc-switch__track {\n          background-color: var(--switch-unchecked-track-color);\n          border-color: var(--switch-unchecked-track-color);\n        }\n        :host(.slotted) .mdc-switch {\n          margin-right: 24px;\n        }\n      `,\n    ];\n  }\n\n  private _haChangeHandler(e: Event) {\n    this.mdcFoundation.handleChange(e);\n    // catch \"click\" event and sync properties\n    this.checked = this.formElement.checked;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-switch\": HaSwitch;\n  }\n}\n","export const afterNextRender = (cb: () => void): void => {\n  requestAnimationFrame(() => setTimeout(cb, 0));\n};\n\nexport const nextRender = () => {\n  return new Promise((resolve) => {\n    afterNextRender(resolve);\n  });\n};\n","import {\n  LitElement,\n  property,\n  TemplateResult,\n  html,\n  CSSResult,\n  css,\n  customElement,\n  PropertyValues,\n} from \"lit-element\";\nimport {\n  Marker,\n  Map,\n  LeafletMouseEvent,\n  DragEndEvent,\n  LatLng,\n  Circle,\n  DivIcon,\n} from \"leaflet\";\nimport {\n  setupLeafletMap,\n  LeafletModuleType,\n} from \"../../common/dom/setup-leaflet-map\";\nimport { fireEvent } from \"../../common/dom/fire_event\";\nimport { nextRender } from \"../../common/util/render-status\";\nimport { defaultRadiusColor } from \"../../data/zone\";\n\n@customElement(\"ha-location-editor\")\nclass LocationEditor extends LitElement {\n  @property() public location?: [number, number];\n  @property() public radius?: number;\n  @property() public radiusColor?: string;\n  @property() public icon?: string;\n  public fitZoom = 16;\n  private _iconEl?: DivIcon;\n  private _ignoreFitToMap?: [number, number];\n\n  // tslint:disable-next-line\n  private Leaflet?: LeafletModuleType;\n  private _leafletMap?: Map;\n  private _locationMarker?: Marker | Circle;\n\n  public fitMap(): void {\n    if (!this._leafletMap || !this.location) {\n      return;\n    }\n    if ((this._locationMarker as Circle).getBounds) {\n      this._leafletMap.fitBounds((this._locationMarker as Circle).getBounds());\n    } else {\n      this._leafletMap.setView(this.location, this.fitZoom);\n    }\n    this._ignoreFitToMap = this.location;\n  }\n\n  protected render(): TemplateResult {\n    return html`\n      <div id=\"map\"></div>\n    `;\n  }\n\n  protected firstUpdated(changedProps: PropertyValues): void {\n    super.firstUpdated(changedProps);\n    this._initMap();\n  }\n\n  protected updated(changedProps: PropertyValues): void {\n    super.updated(changedProps);\n\n    // Still loading.\n    if (!this.Leaflet) {\n      return;\n    }\n\n    if (changedProps.has(\"location\")) {\n      this._updateMarker();\n      if (\n        this.location &&\n        (!this._ignoreFitToMap ||\n          this._ignoreFitToMap[0] !== this.location[0] ||\n          this._ignoreFitToMap[1] !== this.location[1])\n      ) {\n        this.fitMap();\n      }\n    }\n    if (changedProps.has(\"radius\")) {\n      this._updateRadius();\n    }\n    if (changedProps.has(\"radiusColor\")) {\n      this._updateRadiusColor();\n    }\n    if (changedProps.has(\"icon\")) {\n      this._updateIcon();\n    }\n  }\n\n  private get _mapEl(): HTMLDivElement {\n    return this.shadowRoot!.querySelector(\"div\")!;\n  }\n\n  private async _initMap(): Promise<void> {\n    [this._leafletMap, this.Leaflet] = await setupLeafletMap(\n      this._mapEl,\n      false,\n      Boolean(this.radius)\n    );\n    this._leafletMap.addEventListener(\n      \"click\",\n      // @ts-ignore\n      (ev: LeafletMouseEvent) => this._locationUpdated(ev.latlng)\n    );\n    this._updateIcon();\n    this._updateMarker();\n    this.fitMap();\n    this._leafletMap.invalidateSize();\n  }\n\n  private _locationUpdated(latlng: LatLng) {\n    let longitude = latlng.lng;\n    if (Math.abs(longitude) > 180.0) {\n      // Normalize longitude if map provides values beyond -180 to +180 degrees.\n      longitude = (((longitude % 360.0) + 540.0) % 360.0) - 180.0;\n    }\n    this.location = this._ignoreFitToMap = [latlng.lat, longitude];\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _radiusUpdated() {\n    this._ignoreFitToMap = this.location;\n    this.radius = (this._locationMarker as Circle).getRadius();\n    fireEvent(this, \"change\", undefined, { bubbles: false });\n  }\n\n  private _updateIcon() {\n    if (!this.icon) {\n      this._iconEl = undefined;\n      return;\n    }\n\n    // create icon\n    let iconHTML = \"\";\n    const el = document.createElement(\"ha-icon\");\n    el.setAttribute(\"icon\", this.icon);\n    iconHTML = el.outerHTML;\n\n    this._iconEl = this.Leaflet!.divIcon({\n      html: iconHTML,\n      iconSize: [24, 24],\n      className: \"light leaflet-edit-move\",\n    });\n    this._setIcon();\n  }\n\n  private _setIcon() {\n    if (!this._locationMarker || !this._iconEl) {\n      return;\n    }\n\n    if (!this.radius) {\n      (this._locationMarker as Marker).setIcon(this._iconEl);\n      return;\n    }\n\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    moveMarker.setIcon(this._iconEl);\n  }\n\n  private _setupEdit() {\n    // @ts-ignore\n    this._locationMarker.editing.enable();\n    // @ts-ignore\n    const moveMarker = this._locationMarker.editing._moveMarker;\n    // @ts-ignore\n    const resizeMarker = this._locationMarker.editing._resizeMarkers[0];\n    this._setIcon();\n    moveMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n    );\n    resizeMarker.addEventListener(\n      \"dragend\",\n      // @ts-ignore\n      (ev: DragEndEvent) => this._radiusUpdated(ev)\n    );\n  }\n\n  private async _updateMarker(): Promise<void> {\n    if (!this.location) {\n      if (this._locationMarker) {\n        this._locationMarker.remove();\n        this._locationMarker = undefined;\n      }\n      return;\n    }\n\n    if (this._locationMarker) {\n      this._locationMarker.setLatLng(this.location);\n      if (this.radius) {\n        // @ts-ignore\n        this._locationMarker.editing.disable();\n        await nextRender();\n        this._setupEdit();\n      }\n      return;\n    }\n\n    if (!this.radius) {\n      this._locationMarker = this.Leaflet!.marker(this.location, {\n        draggable: true,\n      });\n      this._setIcon();\n      this._locationMarker.addEventListener(\n        \"dragend\",\n        // @ts-ignore\n        (ev: DragEndEvent) => this._locationUpdated(ev.target.getLatLng())\n      );\n      this._leafletMap!.addLayer(this._locationMarker);\n    } else {\n      this._locationMarker = this.Leaflet!.circle(this.location, {\n        color: this.radiusColor || defaultRadiusColor,\n        radius: this.radius,\n      });\n      this._leafletMap!.addLayer(this._locationMarker);\n      this._setupEdit();\n    }\n  }\n\n  private _updateRadius(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setRadius(this.radius);\n  }\n\n  private _updateRadiusColor(): void {\n    if (!this._locationMarker || !this.radius) {\n      return;\n    }\n    (this._locationMarker as Circle).setStyle({ color: this.radiusColor });\n  }\n\n  static get styles(): CSSResult {\n    return css`\n      :host {\n        display: block;\n        height: 300px;\n      }\n      #map {\n        height: 100%;\n      }\n      .light {\n        color: #000000;\n      }\n      .leaflet-edit-move {\n        border-radius: 50%;\n        cursor: move !important;\n      }\n      .leaflet-edit-resize {\n        border-radius: 50%;\n        cursor: nesw-resize !important;\n      }\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-location-editor\": LocationEditor;\n  }\n}\n","import { customElement, CSSResult, css } from \"lit-element\";\nimport \"@material/mwc-dialog\";\nimport { style } from \"@material/mwc-dialog/mwc-dialog-css\";\n// tslint:disable-next-line\nimport { Dialog } from \"@material/mwc-dialog\";\nimport { Constructor } from \"../types\";\n// tslint:disable-next-line\nconst MwcDialog = customElements.get(\"mwc-dialog\") as Constructor<Dialog>;\n\n@customElement(\"ha-dialog\")\nexport class HaDialog extends MwcDialog {\n  protected static get styles(): CSSResult[] {\n    return [\n      style,\n      css`\n        .mdc-dialog__actions {\n          justify-content: var(--justify-action-buttons, flex-end);\n        }\n        .mdc-dialog__container {\n          align-items: var(--vertial-align-dialog, center);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"ha-dialog\": HaDialog;\n  }\n}\n","import {\n  LitElement,\n  html,\n  css,\n  CSSResult,\n  TemplateResult,\n  property,\n} from \"lit-element\";\n\nimport \"@polymer/paper-input/paper-input\";\nimport \"@material/mwc-button\";\n\nimport \"../../../components/map/ha-location-editor\";\nimport \"../../../components/ha-switch\";\nimport \"../../../components/ha-dialog\";\n\nimport { ZoneDetailDialogParams } from \"./show-dialog-zone-detail\";\nimport { HomeAssistant } from \"../../../types\";\nimport {\n  ZoneMutableParams,\n  passiveRadiusColor,\n  defaultRadiusColor,\n  getZoneEditorInitData,\n} from \"../../../data/zone\";\nimport { addDistanceToCoord } from \"../../../common/location/add_distance_to_coord\";\n\nclass DialogZoneDetail extends LitElement {\n  @property() public hass!: HomeAssistant;\n  @property() private _name!: string;\n  @property() private _icon!: string;\n  @property() private _latitude!: number;\n  @property() private _longitude!: number;\n  @property() private _passive!: boolean;\n  @property() private _radius!: number;\n  @property() private _error?: string;\n  @property() private _params?: ZoneDetailDialogParams;\n  @property() private _submitting: boolean = false;\n\n  public async showDialog(params: ZoneDetailDialogParams): Promise<void> {\n    this._params = params;\n    this._error = undefined;\n    if (this._params.entry) {\n      this._name = this._params.entry.name || \"\";\n      this._icon = this._params.entry.icon || \"\";\n      this._latitude = this._params.entry.latitude || this.hass.config.latitude;\n      this._longitude =\n        this._params.entry.longitude || this.hass.config.longitude;\n      this._passive = this._params.entry.passive || false;\n      this._radius = this._params.entry.radius || 100;\n    } else {\n      const initConfig = getZoneEditorInitData();\n      let movedHomeLocation;\n      if (!initConfig?.latitude || !initConfig?.longitude) {\n        movedHomeLocation = addDistanceToCoord(\n          [this.hass.config.latitude, this.hass.config.longitude],\n          Math.random() * 500 * (Math.random() < 0.5 ? -1 : 1),\n          Math.random() * 500 * (Math.random() < 0.5 ? -1 : 1)\n        );\n      }\n      this._latitude = initConfig?.latitude || movedHomeLocation[0];\n      this._longitude = initConfig?.longitude || movedHomeLocation[1];\n      this._name = initConfig?.name || \"\";\n      this._icon = initConfig?.icon || \"mdi:map-marker\";\n\n      this._passive = false;\n      this._radius = 100;\n    }\n    await this.updateComplete;\n  }\n\n  protected render(): TemplateResult {\n    if (!this._params) {\n      return html``;\n    }\n    const title = html`\n      ${this._params.entry\n        ? this._params.entry.name\n        : this.hass!.localize(\"ui.panel.config.zone.detail.new_zone\")}\n      <paper-icon-button\n        aria-label=${this.hass.localize(\n          \"ui.panel.config.integrations.config_flow.dismiss\"\n        )}\n        icon=\"hass:close\"\n        dialogAction=\"close\"\n        style=\"position: absolute; right: 16px; top: 12px;\"\n      ></paper-icon-button>\n    `;\n    const nameValid = this._name.trim() === \"\";\n    const iconValid = !this._icon.trim().includes(\":\");\n    const latValid = String(this._latitude) === \"\";\n    const lngValid = String(this._longitude) === \"\";\n    const radiusValid = String(this._radius) === \"\";\n\n    const valid =\n      !nameValid && !iconValid && !latValid && !lngValid && !radiusValid;\n\n    return html`\n      <ha-dialog\n        open\n        @closing=\"${this._close}\"\n        scrimClickAction=\"\"\n        escapeKeyAction=\"\"\n        .heading=${title}\n      >\n        <div>\n          ${this._error\n            ? html`\n                <div class=\"error\">${this._error}</div>\n              `\n            : \"\"}\n          <div class=\"form\">\n            <paper-input\n              .value=${this._name}\n              .configValue=${\"name\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.name\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              .invalid=${nameValid}\n            ></paper-input>\n            <paper-input\n              .value=${this._icon}\n              .configValue=${\"icon\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.icon_error_msg\"\n              )}\"\n              .invalid=${iconValid}\n            ></paper-input>\n            <ha-location-editor\n              class=\"flex\"\n              .location=${this._locationValue}\n              .radius=${this._radius}\n              .radiusColor=${this._passive\n                ? passiveRadiusColor\n                : defaultRadiusColor}\n              .icon=${this._icon}\n              @change=${this._locationChanged}\n            ></ha-location-editor>\n            <div class=\"location\">\n              <paper-input\n                .value=${this._latitude}\n                .configValue=${\"latitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.latitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${latValid}\n              ></paper-input>\n              <paper-input\n                .value=${this._longitude}\n                .configValue=${\"longitude\"}\n                @value-changed=${this._valueChanged}\n                .label=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.longitude\"\n                )}\"\n                .errorMessage=\"${this.hass!.localize(\n                  \"ui.panel.config.zone.detail.required_error_msg\"\n                )}\"\n                .invalid=${lngValid}\n              ></paper-input>\n            </div>\n            <paper-input\n              .value=${this._radius}\n              .configValue=${\"radius\"}\n              @value-changed=${this._valueChanged}\n              .label=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.radius\"\n              )}\"\n              .errorMessage=\"${this.hass!.localize(\n                \"ui.panel.config.zone.detail.required_error_msg\"\n              )}\"\n              .invalid=${radiusValid}\n            ></paper-input>\n            <p>\n              ${this.hass!.localize(\"ui.panel.config.zone.detail.passive_note\")}\n            </p>\n            <ha-switch .checked=${this._passive} @change=${this._passiveChanged}\n              >${this.hass!.localize(\n                \"ui.panel.config.zone.detail.passive\"\n              )}</ha-switch\n            >\n          </div>\n        </div>\n        ${this._params.entry\n          ? html`\n              <mwc-button\n                slot=\"secondaryAction\"\n                class=\"warning\"\n                @click=\"${this._deleteEntry}\"\n                .disabled=${this._submitting}\n              >\n                ${this.hass!.localize(\"ui.panel.config.zone.detail.delete\")}\n              </mwc-button>\n            `\n          : html``}\n        <mwc-button\n          slot=\"primaryAction\"\n          @click=\"${this._updateEntry}\"\n          .disabled=${!valid || this._submitting}\n        >\n          ${this._params.entry\n            ? this.hass!.localize(\"ui.panel.config.zone.detail.update\")\n            : this.hass!.localize(\"ui.panel.config.zone.detail.create\")}\n        </mwc-button>\n      </ha-dialog>\n    `;\n  }\n\n  private get _locationValue() {\n    return [Number(this._latitude), Number(this._longitude)];\n  }\n\n  private _locationChanged(ev) {\n    [this._latitude, this._longitude] = ev.currentTarget.location;\n    this._radius = ev.currentTarget.radius;\n  }\n\n  private _passiveChanged(ev) {\n    this._passive = ev.target.checked;\n  }\n\n  private _valueChanged(ev: CustomEvent) {\n    const configValue = (ev.target as any).configValue;\n\n    this._error = undefined;\n    this[`_${configValue}`] = ev.detail.value;\n  }\n\n  private async _updateEntry() {\n    this._submitting = true;\n    try {\n      const values: ZoneMutableParams = {\n        name: this._name.trim(),\n        icon: this._icon.trim(),\n        latitude: this._latitude,\n        longitude: this._longitude,\n        passive: this._passive,\n        radius: this._radius,\n      };\n      if (this._params!.entry) {\n        await this._params!.updateEntry!(values);\n      } else {\n        await this._params!.createEntry(values);\n      }\n      this._params = undefined;\n    } catch (err) {\n      this._error = err ? err.message : \"Unknown error\";\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private async _deleteEntry() {\n    this._submitting = true;\n    try {\n      if (await this._params!.removeEntry!()) {\n        this._params = undefined;\n      }\n    } finally {\n      this._submitting = false;\n    }\n  }\n\n  private _close(): void {\n    this._params = undefined;\n  }\n\n  static get styles(): CSSResult[] {\n    return [\n      css`\n        ha-dialog {\n          --mdc-dialog-title-ink-color: var(--primary-text-color);\n          --justify-action-buttons: space-between;\n        }\n        @media only screen and (min-width: 600px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 600px;\n          }\n        }\n\n        /* make dialog fullscreen on small screens */\n        @media all and (max-width: 450px), all and (max-height: 500px) {\n          ha-dialog {\n            --mdc-dialog-min-width: 100vw;\n            --mdc-dialog-max-height: 100vh;\n            --mdc-dialog-shape-radius: 0px;\n            --vertial-align-dialog: flex-end;\n          }\n        }\n        .form {\n          padding-bottom: 24px;\n          color: var(--primary-text-color);\n        }\n        .location {\n          display: flex;\n        }\n        .location > * {\n          flex-grow: 1;\n          min-width: 0;\n        }\n        .location > *:first-child {\n          margin-right: 4px;\n        }\n        .location > *:last-child {\n          margin-left: 4px;\n        }\n        ha-location-editor {\n          margin-top: 16px;\n        }\n        ha-user-picker {\n          margin-top: 16px;\n        }\n        mwc-button.warning {\n          --mdc-theme-primary: var(--google-red-500);\n        }\n        .error {\n          color: var(--google-red-500);\n        }\n        a {\n          color: var(--primary-color);\n        }\n        p {\n          color: var(--primary-text-color);\n        }\n      `,\n    ];\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    \"dialog-zone-detail\": DialogZoneDetail;\n  }\n}\n\ncustomElements.define(\"dialog-zone-detail\", DialogZoneDetail);\n","export const addDistanceToCoord = (\n  location: [number, number],\n  dx: number,\n  dy: number\n): [number, number] => {\n  const rEarth = 6378000;\n  const newLatitude = location[0] + (dy / rEarth) * (180 / Math.PI);\n  const newLongitude =\n    location[1] +\n    ((dx / rEarth) * (180 / Math.PI)) / Math.cos((location[0] * Math.PI) / 180);\n  return [newLatitude, newLongitude];\n};\n"],"sourceRoot":""}