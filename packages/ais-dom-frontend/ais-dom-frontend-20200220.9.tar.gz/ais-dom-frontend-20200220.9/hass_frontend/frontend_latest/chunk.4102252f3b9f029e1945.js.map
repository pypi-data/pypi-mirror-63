{"version":3,"sources":["webpack:///./node_modules/@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js","webpack:///./node_modules/@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js","webpack:///./node_modules/@vaadin/vaadin-element-mixin/vaadin-element-mixin.js","webpack:///./node_modules/@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js","webpack:///./node_modules/@vaadin/vaadin-button/src/vaadin-button.js"],"names":["DEV_MODE_CODE_REGEXP","FlowClients","window","Vaadin","Flow","clients","uncommentAndRun","callback","args","match","exec","toString","Function","e","console","log","runIfDevelopmentMode","developmentMode","maybeGatherAndSendStats","undefined","localStorage","getItem","indexOf","location","hostname","productionModeApps","Object","keys","map","key","filter","client","productionMode","length","isFlowProductionMode","isDevelopmentMode","usageStatistics","statsJob","__webpack_require__","d","__webpack_exports__","ElementMixin","registrations","developmentModeCallback","superClass","[object Object]","super","_finalizeClass","this","is","push","Debouncer","debounce","idlePeriod","enqueueDebouncer","ready","document","doctype","warn","ControlStateMixin","properties","tabindex","type","Number","value","reflectToAttribute","observer","ShadyDOM","TabIndexMixin","autofocus","Boolean","_previousTabIndex","disabled","_isShiftTabbing","addEventListener","composedPath","_focus","focusElement","_setFocused","ensureEventComposed","composed","target","dispatchEvent","CustomEvent","bubbles","cancelable","shadowRoot","defaultPrevented","keyCode","shiftKey","HTMLElement","prototype","focus","apply","setTimeout","firefox","navigator","userAgent","parseFloat","parentNode","nextSibling","fakeTarget","createElement","style","position","opacity","tabIndex","insertBefore","removeChild","focused","requestAnimationFrame","setAttribute","_boundKeydownListener","_bodyKeydownListener","bind","_boundKeyupListener","_bodyKeyupListener","connectedCallback","body","disconnectedCallback","removeEventListener","hasAttribute","removeAttribute","_tabPressed","localName","blur","_disabledChanged","_tabindexChanged","setProperties","click","_polymer_polymer_polymer_element_js__WEBPACK_IMPORTED_MODULE_0__","_polymer_polymer_lib_mixins_gesture_event_listeners_js__WEBPACK_IMPORTED_MODULE_1__","_vaadin_vaadin_themable_mixin_vaadin_themable_mixin_js__WEBPACK_IMPORTED_MODULE_2__","_vaadin_vaadin_control_state_mixin_vaadin_control_state_mixin_js__WEBPACK_IMPORTED_MODULE_3__","_vaadin_vaadin_element_mixin_vaadin_element_mixin_js__WEBPACK_IMPORTED_MODULE_4__","_polymer_polymer_lib_utils_html_tag_js__WEBPACK_IMPORTED_MODULE_5__","_polymer_polymer_lib_utils_gestures_js__WEBPACK_IMPORTED_MODULE_6__","ButtonElement","ThemableMixin","GestureEventListeners","PolymerElement","template","html","version","$","button","_addActiveListeners","addListener","customElements","define"],"mappings":"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","file":"chunk.4102252f3b9f029e1945.js","sourcesContent":["const DEV_MODE_CODE_REGEXP =\n  /\\/\\*\\*\\s+vaadin-dev-mode:start([\\s\\S]*)vaadin-dev-mode:end\\s+\\*\\*\\//i;\n\nconst FlowClients = window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients;\n\nfunction isMinified() {\n  function test() {\n    /** vaadin-dev-mode:start\n    return false;\n    vaadin-dev-mode:end **/\n    return true;\n  }\n  return uncommentAndRun(test);\n}\n\nfunction isDevelopmentMode() {\n  try {\n    if (isForcedDevelopmentMode()) {\n      return true;\n    }\n\n    if (!isLocalhost()) {\n      return false;\n    }\n\n    if (FlowClients) {\n      return !isFlowProductionMode();\n    }\n\n    return !isMinified();\n  } catch (e) {\n    // Some error in this code, assume production so no further actions will be taken\n    return false;\n  }\n}\n\nfunction isForcedDevelopmentMode() {\n  return localStorage.getItem(\"vaadin.developmentmode.force\");\n}\n\nfunction isLocalhost() {\n  return ([\"localhost\",\"127.0.0.1\"].indexOf(window.location.hostname) >= 0);\n}\n\nfunction isFlowProductionMode() {\n  if (FlowClients) {\n    const productionModeApps = Object.keys(FlowClients)\n      .map(key => FlowClients[key])\n      .filter(client => client.productionMode);\n    if (productionModeApps.length > 0) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction uncommentAndRun(callback, args) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n\n  const match = DEV_MODE_CODE_REGEXP.exec(callback.toString());\n  if (match) {\n    try {\n      // requires CSP: script-src 'unsafe-eval'\n      callback = new Function(match[1]);\n    } catch (e) {\n      // eat the exception\n      console.log('vaadin-development-mode-detector: uncommentAndRun() failed', e)\n    }\n  }\n\n  return callback(args);\n}\n\n// A guard against polymer-modulizer removing the window.Vaadin\n// initialization above.\nwindow['Vaadin'] = window['Vaadin'] || {};\n\n/**\n * Inspects the source code of the given `callback` function for\n * specially-marked _commented_ code. If such commented code is found in the\n * callback source, uncomments and runs that code instead of the callback\n * itself. Otherwise runs the callback as is.\n *\n * The optional arguments are passed into the callback / uncommented code,\n * the result is returned.\n *\n * See the `isMinified()` function source code in this file for an example.\n *\n */\nexport const runIfDevelopmentMode = function(callback, args) {\n  if (window.Vaadin.developmentMode) {\n    return uncommentAndRun(callback, args);\n  }\n};\n\nif (window.Vaadin.developmentMode === undefined) {\n  window.Vaadin.developmentMode = isDevelopmentMode();\n}\n","/* This file is autogenerated from src/vaadin-usage-statistics.tpl.html */\n/*\n\nThis script gathers usage statistics from the application running in development mode.\n\nStatistics gathering is automatically disabled and excluded from production builds.\n\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\n\n*/\n/*\n  FIXME(polymer-modulizer): the above comments were extracted\n  from HTML and may be out of place here. Review them and\n  then delete this comment!\n*/\nimport { runIfDevelopmentMode } from '@vaadin/vaadin-development-mode-detector/vaadin-development-mode-detector.js';\n\nfunction maybeGatherAndSendStats() {\n  /** vaadin-dev-mode:start\n  (function () {\n'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar getPolymerVersion = function getPolymerVersion() {\n  return window.Polymer && window.Polymer.version;\n};\n\nvar StatisticsGatherer = function () {\n  function StatisticsGatherer(logger) {\n    classCallCheck(this, StatisticsGatherer);\n\n    this.now = new Date().getTime();\n    this.logger = logger;\n  }\n\n  createClass(StatisticsGatherer, [{\n    key: 'frameworkVersionDetectors',\n    value: function frameworkVersionDetectors() {\n      return {\n        'Flow': function Flow() {\n          if (window.Vaadin && window.Vaadin.Flow && window.Vaadin.Flow.clients) {\n            var flowVersions = Object.keys(window.Vaadin.Flow.clients).map(function (key) {\n              return window.Vaadin.Flow.clients[key];\n            }).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().flow;\n            });\n            if (flowVersions.length > 0) {\n              return flowVersions[0];\n            }\n          }\n        },\n        'Vaadin Framework': function VaadinFramework() {\n          if (window.vaadin && window.vaadin.clients) {\n            var frameworkVersions = Object.values(window.vaadin.clients).filter(function (client) {\n              return client.getVersionInfo;\n            }).map(function (client) {\n              return client.getVersionInfo().vaadinVersion;\n            });\n            if (frameworkVersions.length > 0) {\n              return frameworkVersions[0];\n            }\n          }\n        },\n        'AngularJs': function AngularJs() {\n          if (window.angular && window.angular.version && window.angular.version) {\n            return window.angular.version.full;\n          }\n        },\n        'Angular': function Angular() {\n          if (window.ng) {\n            var tags = document.querySelectorAll(\"[ng-version]\");\n            if (tags.length > 0) {\n              return tags[0].getAttribute(\"ng-version\");\n            }\n            return \"Unknown\";\n          }\n        },\n        'Backbone.js': function BackboneJs() {\n          if (window.Backbone) {\n            return window.Backbone.VERSION;\n          }\n        },\n        'React': function React() {\n          var reactSelector = '[data-reactroot], [data-reactid]';\n          if (!!document.querySelector(reactSelector)) {\n            // React does not publish the version by default\n            return \"unknown\";\n          }\n        },\n        'Ember': function Ember() {\n          if (window.Em && window.Em.VERSION) {\n            return window.Em.VERSION;\n          } else if (window.Ember && window.Ember.VERSION) {\n            return window.Ember.VERSION;\n          }\n        },\n        'jQuery': function (_jQuery) {\n          function jQuery() {\n            return _jQuery.apply(this, arguments);\n          }\n\n          jQuery.toString = function () {\n            return _jQuery.toString();\n          };\n\n          return jQuery;\n        }(function () {\n          if (typeof jQuery === 'function' && jQuery.prototype.jquery !== undefined) {\n            return jQuery.prototype.jquery;\n          }\n        }),\n        'Polymer': function Polymer() {\n          var version = getPolymerVersion();\n          if (version) {\n            return version;\n          }\n        },\n        'LitElement': function LitElement() {\n          var version = window.litElementVersions && window.litElementVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'LitHtml': function LitHtml() {\n          var version = window.litHtmlVersions && window.litHtmlVersions[0];\n          if (version) {\n            return version;\n          }\n        },\n        'Vue.js': function VueJs() {\n          if (window.Vue) {\n            return window.Vue.version;\n          }\n        }\n      };\n    }\n  }, {\n    key: 'getUsedVaadinElements',\n    value: function getUsedVaadinElements(elements) {\n      var version = getPolymerVersion();\n      var elementClasses = void 0;\n      if (version && version.indexOf('2') === 0) {\n        // Polymer 2: components classes are stored in window.Vaadin\n        elementClasses = Object.keys(window.Vaadin).map(function (c) {\n          return window.Vaadin[c];\n        }).filter(function (c) {\n          return c.is;\n        });\n      } else {\n        // Polymer 3: components classes are stored in window.Vaadin.registrations\n        elementClasses = window.Vaadin.registrations || [];\n      }\n      elementClasses.forEach(function (klass) {\n        var version = klass.version ? klass.version : \"0.0.0\";\n        elements[klass.is] = { version: version };\n      });\n    }\n  }, {\n    key: 'getUsedVaadinThemes',\n    value: function getUsedVaadinThemes(themes) {\n      ['Lumo', 'Material'].forEach(function (themeName) {\n        var theme;\n        var version = getPolymerVersion();\n        if (version && version.indexOf('2') === 0) {\n          // Polymer 2: themes are stored in window.Vaadin\n          theme = window.Vaadin[themeName];\n        } else {\n          // Polymer 3: themes are stored in custom element registry\n          theme = customElements.get('vaadin-' + themeName.toLowerCase() + '-styles');\n        }\n        if (theme && theme.version) {\n          themes[themeName] = { version: theme.version };\n        }\n      });\n    }\n  }, {\n    key: 'getFrameworks',\n    value: function getFrameworks(frameworks) {\n      var detectors = this.frameworkVersionDetectors();\n      Object.keys(detectors).forEach(function (framework) {\n        var detector = detectors[framework];\n        try {\n          var version = detector();\n          if (version) {\n            frameworks[framework] = { version: version };\n          }\n        } catch (e) {}\n      });\n    }\n  }, {\n    key: 'gather',\n    value: function gather(storage) {\n      var storedStats = storage.read();\n      var gatheredStats = {};\n      var types = [\"elements\", \"frameworks\", \"themes\"];\n\n      types.forEach(function (type) {\n        gatheredStats[type] = {};\n        if (!storedStats[type]) {\n          storedStats[type] = {};\n        }\n      });\n\n      var previousStats = JSON.stringify(storedStats);\n\n      this.getUsedVaadinElements(gatheredStats.elements);\n      this.getFrameworks(gatheredStats.frameworks);\n      this.getUsedVaadinThemes(gatheredStats.themes);\n\n      var now = this.now;\n      types.forEach(function (type) {\n        var keys = Object.keys(gatheredStats[type]);\n        keys.forEach(function (key) {\n          if (!storedStats[type][key] || _typeof(storedStats[type][key]) != _typeof({})) {\n            storedStats[type][key] = { firstUsed: now };\n          }\n          // Discards any previously logged version number\n          storedStats[type][key].version = gatheredStats[type][key].version;\n          storedStats[type][key].lastUsed = now;\n        });\n      });\n\n      var newStats = JSON.stringify(storedStats);\n      storage.write(newStats);\n      if (newStats != previousStats && Object.keys(storedStats).length > 0) {\n        this.logger.debug(\"New stats: \" + newStats);\n      }\n    }\n  }]);\n  return StatisticsGatherer;\n}();\n\nvar StatisticsStorage = function () {\n  function StatisticsStorage(key) {\n    classCallCheck(this, StatisticsStorage);\n\n    this.key = key;\n  }\n\n  createClass(StatisticsStorage, [{\n    key: 'read',\n    value: function read() {\n      var localStorageStatsString = localStorage.getItem(this.key);\n      try {\n        return JSON.parse(localStorageStatsString ? localStorageStatsString : '{}');\n      } catch (e) {\n        return {};\n      }\n    }\n  }, {\n    key: 'write',\n    value: function write(data) {\n      localStorage.setItem(this.key, data);\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      localStorage.removeItem(this.key);\n    }\n  }, {\n    key: 'isEmpty',\n    value: function isEmpty() {\n      var storedStats = this.read();\n      var empty = true;\n      Object.keys(storedStats).forEach(function (key) {\n        if (Object.keys(storedStats[key]).length > 0) {\n          empty = false;\n        }\n      });\n\n      return empty;\n    }\n  }]);\n  return StatisticsStorage;\n}();\n\nvar StatisticsSender = function () {\n  function StatisticsSender(url, logger) {\n    classCallCheck(this, StatisticsSender);\n\n    this.url = url;\n    this.logger = logger;\n  }\n\n  createClass(StatisticsSender, [{\n    key: 'send',\n    value: function send(data, errorHandler) {\n      var logger = this.logger;\n\n      if (navigator.onLine === false) {\n        logger.debug(\"Offline, can't send\");\n        errorHandler();\n        return;\n      }\n      logger.debug(\"Sending data to \" + this.url);\n\n      var req = new XMLHttpRequest();\n      req.withCredentials = true;\n      req.addEventListener(\"load\", function () {\n        // Stats sent, nothing more to do\n        logger.debug(\"Response: \" + req.responseText);\n      });\n      req.addEventListener(\"error\", function () {\n        logger.debug(\"Send failed\");\n        errorHandler();\n      });\n      req.addEventListener(\"abort\", function () {\n        logger.debug(\"Send aborted\");\n        errorHandler();\n      });\n      req.open(\"POST\", this.url);\n      req.setRequestHeader(\"Content-Type\", \"application/json\");\n      req.send(data);\n    }\n  }]);\n  return StatisticsSender;\n}();\n\nvar StatisticsLogger = function () {\n  function StatisticsLogger(id) {\n    classCallCheck(this, StatisticsLogger);\n\n    this.id = id;\n  }\n\n  createClass(StatisticsLogger, [{\n    key: '_isDebug',\n    value: function _isDebug() {\n      return localStorage.getItem(\"vaadin.\" + this.id + \".debug\");\n    }\n  }, {\n    key: 'debug',\n    value: function debug(msg) {\n      if (this._isDebug()) {\n        console.info(this.id + \": \" + msg);\n      }\n    }\n  }]);\n  return StatisticsLogger;\n}();\n\nvar UsageStatistics = function () {\n  function UsageStatistics() {\n    classCallCheck(this, UsageStatistics);\n\n    this.now = new Date();\n    this.timeNow = this.now.getTime();\n    this.gatherDelay = 10; // Delay between loading this file and gathering stats\n    this.initialDelay = 24 * 60 * 60;\n\n    this.logger = new StatisticsLogger(\"statistics\");\n    this.storage = new StatisticsStorage(\"vaadin.statistics.basket\");\n    this.gatherer = new StatisticsGatherer(this.logger);\n    this.sender = new StatisticsSender(\"https://tools.vaadin.com/usage-stats/submit\", this.logger);\n  }\n\n  createClass(UsageStatistics, [{\n    key: 'maybeGatherAndSend',\n    value: function maybeGatherAndSend() {\n      var _this = this;\n\n      if (localStorage.getItem(UsageStatistics.optOutKey)) {\n        return;\n      }\n      this.gatherer.gather(this.storage);\n      setTimeout(function () {\n        _this.maybeSend();\n      }, this.gatherDelay * 1000);\n    }\n  }, {\n    key: 'lottery',\n    value: function lottery() {\n      return Math.random() <= 0.05;\n    }\n  }, {\n    key: 'currentMonth',\n    value: function currentMonth() {\n      return this.now.getYear() * 12 + this.now.getMonth();\n    }\n  }, {\n    key: 'maybeSend',\n    value: function maybeSend() {\n      var firstUse = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      var monthProcessed = Number(localStorage.getItem(UsageStatistics.monthProcessedKey));\n\n      if (!firstUse) {\n        // Use a grace period to avoid interfering with tests, incognito mode etc\n        firstUse = this.timeNow;\n        localStorage.setItem(UsageStatistics.firstUseKey, firstUse);\n      }\n\n      if (this.timeNow < firstUse + this.initialDelay * 1000) {\n        this.logger.debug(\"No statistics will be sent until the initial delay of \" + this.initialDelay + \"s has passed\");\n        return;\n      }\n      if (this.currentMonth() <= monthProcessed) {\n        this.logger.debug(\"This month has already been processed\");\n        return;\n      }\n      localStorage.setItem(UsageStatistics.monthProcessedKey, this.currentMonth());\n      // Use random sampling\n      if (this.lottery()) {\n        this.logger.debug(\"Congratulations, we have a winner!\");\n      } else {\n        this.logger.debug(\"Sorry, no stats from you this time\");\n        return;\n      }\n\n      this.send();\n    }\n  }, {\n    key: 'send',\n    value: function send() {\n      // Ensure we have the latest data\n      this.gatherer.gather(this.storage);\n\n      // Read, send and clean up\n      var data = this.storage.read();\n      data[\"firstUse\"] = Number(localStorage.getItem(UsageStatistics.firstUseKey));\n      data[\"usageStatisticsVersion\"] = UsageStatistics.version;\n      var info = 'This request contains usage statistics gathered from the application running in development mode. \\n\\nStatistics gathering is automatically disabled and excluded from production builds.\\n\\nFor details and to opt-out, see https://github.com/vaadin/vaadin-usage-statistics.\\n\\n\\n\\n';\n      var self = this;\n      this.sender.send(info + JSON.stringify(data), function () {\n        // Revert the 'month processed' flag\n        localStorage.setItem(UsageStatistics.monthProcessedKey, self.currentMonth() - 1);\n      });\n    }\n  }], [{\n    key: 'version',\n    get: function get$1() {\n      return '2.0.10';\n    }\n  }, {\n    key: 'firstUseKey',\n    get: function get$1() {\n      return 'vaadin.statistics.firstuse';\n    }\n  }, {\n    key: 'monthProcessedKey',\n    get: function get$1() {\n      return 'vaadin.statistics.monthProcessed';\n    }\n  }, {\n    key: 'optOutKey',\n    get: function get$1() {\n      return 'vaadin.statistics.optout';\n    }\n  }]);\n  return UsageStatistics;\n}();\n\ntry {\n  window.Vaadin = window.Vaadin || {};\n  window.Vaadin.usageStatsChecker = window.Vaadin.usageStatsChecker || new UsageStatistics();\n  window.Vaadin.usageStatsChecker.maybeGatherAndSend();\n} catch (e) {\n  // Intentionally ignored as this is not a problem in the app being developed\n}\n\n}());\n\n  vaadin-dev-mode:end **/\n}\n\nexport const usageStatistics = function() {\n  if (typeof runIfDevelopmentMode === 'function') {\n    return runIfDevelopmentMode(maybeGatherAndSendStats);\n  }\n};\n","import { idlePeriod } from '@polymer/polymer/lib/utils/async.js';\nimport { Debouncer } from '@polymer/polymer/lib/utils/debounce.js';\nimport { enqueueDebouncer } from '@polymer/polymer/lib/utils/flush.js';\nimport { usageStatistics } from '@vaadin/vaadin-usage-statistics/vaadin-usage-statistics.js';\nif (!window.Vaadin) {\n  window['Vaadin'] = {};\n}\n\n/**\n * Array of Vaadin custom element classes that have been finalized.\n */\nwindow['Vaadin'].registrations = window.Vaadin.registrations || [];\n\n// Use the hack to prevent polymer-modulizer from converting to exports\nwindow['Vaadin'].developmentModeCallback = window.Vaadin.developmentModeCallback || {};\nwindow['Vaadin'].developmentModeCallback['vaadin-usage-statistics'] = function() {\n  if (usageStatistics) {\n    usageStatistics();\n  }\n};\n\nlet statsJob;\n\n/**\n * @polymerMixin\n */\nexport const ElementMixin = superClass => class VaadinElementMixin extends superClass {\n  /** @protected */\n  static _finalizeClass() {\n    super._finalizeClass();\n\n    // Registers a class prototype for telemetry purposes.\n    if (this.is) {\n      window.Vaadin.registrations.push(this);\n\n      if (window.Vaadin.developmentModeCallback) {\n        statsJob = Debouncer.debounce(statsJob,\n          idlePeriod, () => {\n            window.Vaadin.developmentModeCallback['vaadin-usage-statistics']();\n          }\n        );\n        enqueueDebouncer(statsJob);\n      }\n    }\n  }\n  ready() {\n    super.ready();\n    if (document.doctype === null) {\n      console.warn(\n        'Vaadin components require the \"standards mode\" declaration. Please add <!DOCTYPE html> to the HTML document.'\n      );\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\n/**\n * A private mixin to avoid problems with dynamic properties and Polymer Analyzer.\n * No need to expose these properties in the API docs.\n * @polymerMixin\n */\nconst TabIndexMixin = superClass => class VaadinTabIndexMixin extends superClass {\n  static get properties() {\n    var properties = {\n      /**\n       * Internal property needed to listen to `tabindex` attribute changes.\n       *\n       * For changing the tabindex of this component use the native `tabIndex` property.\n       * @private\n       */\n      tabindex: {\n        type: Number,\n        value: 0,\n        reflectToAttribute: true,\n        observer: '_tabindexChanged'\n      }\n    };\n\n    if (window.ShadyDOM) {\n      // ShadyDOM browsers need the `tabIndex` in order to notify when the user changes it programmatically.\n      properties['tabIndex'] = properties.tabindex;\n    }\n\n    return properties;\n  }\n};\n\n/**\n * Polymer.IronControlState is not a proper 2.0 class, also, its tabindex\n * implementation fails in the shadow dom, so we have this for vaadin elements.\n * @polymerMixin\n */\nexport const ControlStateMixin = superClass => class VaadinControlStateMixin extends TabIndexMixin(superClass) {\n  static get properties() {\n    return {\n      /**\n       * Specify that this control should have input focus when the page loads.\n       */\n      autofocus: {\n        type: Boolean\n      },\n\n      /**\n       * Stores the previous value of tabindex attribute of the disabled element\n       */\n      _previousTabIndex: {\n        type: Number\n      },\n\n      /**\n       * If true, the user cannot interact with this element.\n       */\n      disabled: {\n        type: Boolean,\n        observer: '_disabledChanged',\n        reflectToAttribute: true\n      },\n\n      _isShiftTabbing: {\n        type: Boolean\n      }\n    };\n  }\n\n  ready() {\n    this.addEventListener('focusin', e => {\n      if (e.composedPath()[0] === this) {\n        this._focus(e);\n      } else if (e.composedPath().indexOf(this.focusElement) !== -1 && !this.disabled) {\n        this._setFocused(true);\n      }\n    });\n    this.addEventListener('focusout', e => this._setFocused(false));\n\n    // In super.ready() other 'focusin' and 'focusout' listeners might be\n    // added, so we call it after our own ones to ensure they execute first.\n    // Issue to watch out: when incorrect, <vaadin-combo-box> refocuses the\n    // input field on iOS after “Done” is pressed.\n    super.ready();\n\n    // This fixes the bug in Firefox 61 (https://bugzilla.mozilla.org/show_bug.cgi?id=1472887)\n    // where focusout event does not go out of shady DOM because composed property in the event is not true\n    const ensureEventComposed = e => {\n      if (!e.composed) {\n        e.target.dispatchEvent(new CustomEvent(e.type, {\n          bubbles: true,\n          composed: true,\n          cancelable: false\n        }));\n      }\n    };\n    this.shadowRoot.addEventListener('focusin', ensureEventComposed);\n    this.shadowRoot.addEventListener('focusout', ensureEventComposed);\n\n    this.addEventListener('keydown', e => {\n      if (!e.defaultPrevented && e.keyCode === 9) {\n        if (e.shiftKey) {\n          // Flag is checked in _focus event handler.\n          this._isShiftTabbing = true;\n          HTMLElement.prototype.focus.apply(this);\n          this._setFocused(false);\n          // Event handling in IE is asynchronous and the flag is removed asynchronously as well\n          setTimeout(() => this._isShiftTabbing = false, 0);\n        } else {\n          // Workaround for FF63-65 bug that causes the focus to get lost when\n          // blurring a slotted component with focusable shadow root content\n          // https://bugzilla.mozilla.org/show_bug.cgi?id=1528686\n          // TODO: Remove when safe\n          const firefox = window.navigator.userAgent.match(/Firefox\\/(\\d\\d\\.\\d)/);\n          if (firefox\n            && parseFloat(firefox[1]) >= 63\n            && parseFloat(firefox[1]) < 66\n            && this.parentNode\n            && this.nextSibling) {\n            const fakeTarget = document.createElement('input');\n            fakeTarget.style.position = 'absolute';\n            fakeTarget.style.opacity = 0;\n            fakeTarget.tabIndex = this.tabIndex;\n\n            this.parentNode.insertBefore(fakeTarget, this.nextSibling);\n            fakeTarget.focus();\n            fakeTarget.addEventListener('focusout', () => this.parentNode.removeChild(fakeTarget));\n          }\n        }\n\n      }\n    });\n\n    if (this.autofocus && !this.focused && !this.disabled) {\n      window.requestAnimationFrame(() => {\n        this._focus();\n        this._setFocused(true);\n        this.setAttribute('focus-ring', '');\n      });\n    }\n\n    this._boundKeydownListener = this._bodyKeydownListener.bind(this);\n    this._boundKeyupListener = this._bodyKeyupListener.bind(this);\n  }\n\n  /**\n   * @protected\n   */\n  connectedCallback() {\n    super.connectedCallback();\n\n    document.body.addEventListener('keydown', this._boundKeydownListener, true);\n    document.body.addEventListener('keyup', this._boundKeyupListener, true);\n  }\n\n  /**\n   * @protected\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    document.body.removeEventListener('keydown', this._boundKeydownListener, true);\n    document.body.removeEventListener('keyup', this._boundKeyupListener, true);\n\n    // in non-Chrome browsers, blur does not fire on the element when it is disconnected.\n    // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n    if (this.hasAttribute('focused')) {\n      this._setFocused(false);\n    }\n  }\n\n  _setFocused(focused) {\n    if (focused) {\n      this.setAttribute('focused', '');\n    } else {\n      this.removeAttribute('focused');\n    }\n\n    // focus-ring is true when the element was focused from the keyboard.\n    // Focus Ring [A11ycasts]: https://youtu.be/ilj2P5-5CjI\n    if (focused && this._tabPressed) {\n      this.setAttribute('focus-ring', '');\n    } else {\n      this.removeAttribute('focus-ring');\n    }\n  }\n\n  _bodyKeydownListener(e) {\n    this._tabPressed = e.keyCode === 9;\n  }\n\n  _bodyKeyupListener() {\n    this._tabPressed = false;\n  }\n\n  /**\n   * Any element extending this mixin is required to implement this getter.\n   * It returns the actual focusable element in the component.\n   */\n  get focusElement() {\n    window.console.warn(`Please implement the 'focusElement' property in <${this.localName}>`);\n    return this;\n  }\n\n  _focus(e) {\n    if (this._isShiftTabbing) {\n      return;\n    }\n\n    this.focusElement.focus();\n    this._setFocused(true);\n  }\n\n  /**\n   * Moving the focus from the host element causes firing of the blur event what leads to problems in IE.\n   * @private\n   */\n  focus() {\n    if (!this.focusElement || this.disabled) {\n      return;\n    }\n\n    this.focusElement.focus();\n    this._setFocused(true);\n  }\n\n  /**\n   * Native bluring in the host element does nothing because it does not have the focus.\n   * In chrome it works, but not in FF.\n   * @private\n   */\n  blur() {\n    this.focusElement.blur();\n    this._setFocused(false);\n  }\n\n  _disabledChanged(disabled) {\n    this.focusElement.disabled = disabled;\n    if (disabled) {\n      this.blur();\n      this._previousTabIndex = this.tabindex;\n      this.tabindex = -1;\n      this.setAttribute('aria-disabled', 'true');\n    } else {\n      if (typeof this._previousTabIndex !== 'undefined') {\n        this.tabindex = this._previousTabIndex;\n      }\n      this.removeAttribute('aria-disabled');\n    }\n  }\n\n  _tabindexChanged(tabindex) {\n    if (tabindex !== undefined) {\n      this.focusElement.tabIndex = tabindex;\n    }\n\n    if (this.disabled && this.tabindex) {\n      // If tabindex attribute was changed while checkbox was disabled\n      if (this.tabindex !== -1) {\n        this._previousTabIndex = this.tabindex;\n      }\n      this.tabindex = tabindex = undefined;\n    }\n\n    if (window.ShadyDOM) {\n      this.setProperties({tabIndex: tabindex, tabindex: tabindex});\n    }\n  }\n\n  /**\n   * @protected\n   */\n  click() {\n    if (!this.disabled) {\n      super.click();\n    }\n  }\n};\n","/**\n@license\nCopyright (c) 2017 Vaadin Ltd.\nThis program is available under Apache License Version 2.0, available at https://vaadin.com/license/\n*/\nimport { PolymerElement } from '@polymer/polymer/polymer-element.js';\n\nimport { GestureEventListeners } from '@polymer/polymer/lib/mixins/gesture-event-listeners.js';\nimport { ThemableMixin } from '@vaadin/vaadin-themable-mixin/vaadin-themable-mixin.js';\nimport { ControlStateMixin } from '@vaadin/vaadin-control-state-mixin/vaadin-control-state-mixin.js';\nimport { ElementMixin } from '@vaadin/vaadin-element-mixin/vaadin-element-mixin.js';\nimport { html } from '@polymer/polymer/lib/utils/html-tag.js';\nimport { addListener } from '@polymer/polymer/lib/utils/gestures.js';\n/**\n * `<vaadin-button>` is a Web Component providing an accessible and customizable button.\n *\n * ```html\n * <vaadin-button>\n * </vaadin-button>\n * ```\n *\n * ```js\n * document.querySelector('vaadin-button').addEventListener('click', () => alert('Hello World!'));\n * ```\n *\n * ### Styling\n *\n * The following shadow DOM parts are exposed for styling:\n *\n * Part name | Description\n * ----------------|----------------\n * `label` | The label (text) inside the button\n * `prefix` | A slot for e.g. an icon before the label\n * `suffix` | A slot for e.g. an icon after the label\n *\n *\n * The following attributes are exposed for styling:\n *\n * Attribute | Description\n * --------- | -----------\n * `active` | Set when the button is pressed down, either with mouse, touch or the keyboard.\n * `disabled` | Set when the button is disabled.\n * `focus-ring` | Set when the button is focused using the keyboard.\n * `focused` | Set when the button is focused.\n *\n * See [ThemableMixin – how to apply styles for shadow parts](https://github.com/vaadin/vaadin-themable-mixin/wiki)\n *\n * @memberof Vaadin\n * @mixes Vaadin.ElementMixin\n * @mixes Vaadin.ControlStateMixin\n * @mixes Vaadin.ThemableMixin\n * @mixes Polymer.GestureEventListeners\n * @demo demo/index.html\n */\nclass ButtonElement extends\n  ElementMixin(\n    ControlStateMixin(\n      ThemableMixin(\n        GestureEventListeners(PolymerElement)))) {\n  static get template() {\n    return html`\n    <style>\n      :host {\n        display: inline-block;\n        position: relative;\n        outline: none;\n        white-space: nowrap;\n      }\n\n      :host([hidden]) {\n        display: none !important;\n      }\n\n      /* Ensure the button is always aligned on the baseline */\n      .vaadin-button-container::before {\n        content: \"\\\\2003\";\n        display: inline-block;\n        width: 0;\n      }\n\n      .vaadin-button-container {\n        display: inline-flex;\n        align-items: center;\n        justify-content: center;\n        text-align: center;\n        width: 100%;\n        height: 100%;\n        min-height: inherit;\n        text-shadow: inherit;\n        -webkit-user-select: none;\n        -moz-user-select: none;\n        user-select: none;\n      }\n\n      [part=\"prefix\"],\n      [part=\"suffix\"] {\n        flex: none;\n      }\n\n      [part=\"label\"] {\n        white-space: nowrap;\n        overflow: hidden;\n        text-overflow: ellipsis;\n      }\n\n      #button {\n        position: absolute;\n        top: 0;\n        left: 0;\n        width: 100%;\n        height: 100%;\n        opacity: 0;\n        cursor: inherit;\n      }\n    </style>\n    <div class=\"vaadin-button-container\">\n      <div part=\"prefix\">\n        <slot name=\"prefix\"></slot>\n      </div>\n      <div part=\"label\">\n        <slot></slot>\n      </div>\n      <div part=\"suffix\">\n        <slot name=\"suffix\"></slot>\n      </div>\n    </div>\n    <button id=\"button\" type=\"button\"></button>\n`;\n  }\n\n  static get is() {\n    return 'vaadin-button';\n  }\n\n  static get version() {\n    return '2.2.1';\n  }\n\n  ready() {\n    super.ready();\n\n    // Leaving default role in the native button, makes navigation announcement\n    // being different when using focus navigation (tab) versus using normal\n    // navigation (arrows). The first way announces the label on a button\n    // since the focus is moved programmatically, and the second on a group.\n    this.setAttribute('role', 'button');\n    this.$.button.setAttribute('role', 'presentation');\n\n    this._addActiveListeners();\n  }\n\n  /**\n   * @protected\n   */\n  disconnectedCallback() {\n    super.disconnectedCallback();\n\n    // `active` state is preserved when the element is disconnected between keydown and keyup events.\n    // reproducible in `<vaadin-date-picker>` when closing on `Cancel` or `Today` click.\n    if (this.hasAttribute('active')) {\n      this.removeAttribute('active');\n    }\n  }\n\n  _addActiveListeners() {\n    addListener(this, 'down', () => !this.disabled && this.setAttribute('active', ''));\n    addListener(this, 'up', () => this.removeAttribute('active'));\n    this.addEventListener('keydown', e => !this.disabled && [13, 32].indexOf(e.keyCode) >= 0 && this.setAttribute('active', ''));\n    this.addEventListener('keyup', () => this.removeAttribute('active'));\n    this.addEventListener('blur', () => this.removeAttribute('active'));\n  }\n\n  /**\n   * @protected\n   */\n  get focusElement() {\n    return this.$.button;\n  }\n}\n\ncustomElements.define(ButtonElement.is, ButtonElement);\n\nexport { ButtonElement };\n"],"sourceRoot":""}