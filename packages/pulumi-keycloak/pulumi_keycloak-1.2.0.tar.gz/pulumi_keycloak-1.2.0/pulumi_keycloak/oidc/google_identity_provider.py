# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class GoogleIdentityProvider(pulumi.CustomResource):
    accepts_prompt_none_forward_from_client: pulumi.Output[bool]
    add_read_token_role_on_create: pulumi.Output[bool]
    alias: pulumi.Output[str]
    authenticate_by_default: pulumi.Output[bool]
    client_id: pulumi.Output[str]
    client_secret: pulumi.Output[str]
    default_scopes: pulumi.Output[str]
    disable_user_info: pulumi.Output[bool]
    display_name: pulumi.Output[str]
    enabled: pulumi.Output[bool]
    extra_config: pulumi.Output[dict]
    first_broker_login_flow_alias: pulumi.Output[str]
    hide_on_login_page: pulumi.Output[bool]
    hosted_domain: pulumi.Output[str]
    internal_id: pulumi.Output[str]
    link_only: pulumi.Output[bool]
    post_broker_login_flow_alias: pulumi.Output[str]
    provider_id: pulumi.Output[str]
    realm: pulumi.Output[str]
    request_refresh_token: pulumi.Output[bool]
    store_token: pulumi.Output[bool]
    trust_email: pulumi.Output[bool]
    use_user_ip_param: pulumi.Output[bool]
    def __init__(__self__, resource_name, opts=None, accepts_prompt_none_forward_from_client=None, add_read_token_role_on_create=None, authenticate_by_default=None, client_id=None, client_secret=None, default_scopes=None, disable_user_info=None, enabled=None, extra_config=None, first_broker_login_flow_alias=None, hide_on_login_page=None, hosted_domain=None, link_only=None, post_broker_login_flow_alias=None, provider_id=None, realm=None, request_refresh_token=None, store_token=None, trust_email=None, use_user_ip_param=None, __props__=None, __name__=None, __opts__=None):
        """
        Create a GoogleIdentityProvider resource with the given unique name, props, and options.
        
        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['accepts_prompt_none_forward_from_client'] = accepts_prompt_none_forward_from_client
            __props__['add_read_token_role_on_create'] = add_read_token_role_on_create
            __props__['authenticate_by_default'] = authenticate_by_default
            if client_id is None:
                raise TypeError("Missing required property 'client_id'")
            __props__['client_id'] = client_id
            if client_secret is None:
                raise TypeError("Missing required property 'client_secret'")
            __props__['client_secret'] = client_secret
            __props__['default_scopes'] = default_scopes
            __props__['disable_user_info'] = disable_user_info
            __props__['enabled'] = enabled
            __props__['extra_config'] = extra_config
            __props__['first_broker_login_flow_alias'] = first_broker_login_flow_alias
            __props__['hide_on_login_page'] = hide_on_login_page
            __props__['hosted_domain'] = hosted_domain
            __props__['link_only'] = link_only
            __props__['post_broker_login_flow_alias'] = post_broker_login_flow_alias
            __props__['provider_id'] = provider_id
            if realm is None:
                raise TypeError("Missing required property 'realm'")
            __props__['realm'] = realm
            __props__['request_refresh_token'] = request_refresh_token
            __props__['store_token'] = store_token
            __props__['trust_email'] = trust_email
            __props__['use_user_ip_param'] = use_user_ip_param
            __props__['alias'] = None
            __props__['display_name'] = None
            __props__['internal_id'] = None
        super(GoogleIdentityProvider, __self__).__init__(
            'keycloak:oidc/googleIdentityProvider:GoogleIdentityProvider',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, accepts_prompt_none_forward_from_client=None, add_read_token_role_on_create=None, alias=None, authenticate_by_default=None, client_id=None, client_secret=None, default_scopes=None, disable_user_info=None, display_name=None, enabled=None, extra_config=None, first_broker_login_flow_alias=None, hide_on_login_page=None, hosted_domain=None, internal_id=None, link_only=None, post_broker_login_flow_alias=None, provider_id=None, realm=None, request_refresh_token=None, store_token=None, trust_email=None, use_user_ip_param=None):
        """
        Get an existing GoogleIdentityProvider resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.
        
        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()
        __props__["accepts_prompt_none_forward_from_client"] = accepts_prompt_none_forward_from_client
        __props__["add_read_token_role_on_create"] = add_read_token_role_on_create
        __props__["alias"] = alias
        __props__["authenticate_by_default"] = authenticate_by_default
        __props__["client_id"] = client_id
        __props__["client_secret"] = client_secret
        __props__["default_scopes"] = default_scopes
        __props__["disable_user_info"] = disable_user_info
        __props__["display_name"] = display_name
        __props__["enabled"] = enabled
        __props__["extra_config"] = extra_config
        __props__["first_broker_login_flow_alias"] = first_broker_login_flow_alias
        __props__["hide_on_login_page"] = hide_on_login_page
        __props__["hosted_domain"] = hosted_domain
        __props__["internal_id"] = internal_id
        __props__["link_only"] = link_only
        __props__["post_broker_login_flow_alias"] = post_broker_login_flow_alias
        __props__["provider_id"] = provider_id
        __props__["realm"] = realm
        __props__["request_refresh_token"] = request_refresh_token
        __props__["store_token"] = store_token
        __props__["trust_email"] = trust_email
        __props__["use_user_ip_param"] = use_user_ip_param
        return GoogleIdentityProvider(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

