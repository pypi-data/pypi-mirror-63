Metadata-Version: 1.1
Name: bracketology
Version: 0.0.9-beta
Summary: Analyze and simulate NCAA march madness tournaments
Home-page: https://github.com/stahl085/bracketology
Author: Kyle Stahl
Author-email: stahl085@umn.edu
License: MIT
Download-URL: https://github.com/stahl085/bracketology/archive/0.0.4.tar.gz
Description: Welcome to Bracketology!
        ========================
        
        .. figure:: docs/_static/bracketology_logo.png
           :width: 100%
           :align: center
           :alt: Bracketology logo
        
        .. inclusion-marker-do-not-remove
           
        The goal of bracketology is to speed up the analysis of NCAA march madness data 
        and help develop algorithms for filling out brackets.  
        
        :Documentation: https://bracketology.readthedocs.io/en/latest/
        :GitHub Repo: https://github.com/stahl085/bracketology
        :Issue Tracker: https://github.com/stahl085/bracketology/issues
        :Backlog: https://github.com/stahl085/bracketology/projects/1?fullscreen=true
        :PyPI: https://pypi.org/project/bracketology/
        
        Before You Start
        ----------------  
        
        Here are the main things you need to know:
         - The main parts of this package are the :code:`Bracket` objects and simulator functions in the :code:`simulators` module
         - A Bracket is composed of :code:`Team` and :code:`Game` objects
         - Game objects have two Team objects as attributes, and the round number
         - Teams have a name, seed, and dictionary for statistics
         - Simulator functions have 1 argument of type Game, and return the winning Team of that Game
        
           
        Installation
        ------------
        
        Install from `pip <https://pip.pypa.io/en/stable/>`_
        
        .. code-block:: bash
        
            pip install bracketology
        
        Or download directly from `PyPi <https://pypi.org/project/bracketology/>`_
        
        Getting Started
        ---------------
        Import bracketology and create a bracket from last year.
        
        .. code-block:: python
        
            from bracketology import Bracket, Game, Team
            
            # Create a bracket object from 2019
            year = 2019
            b19 = Bracket(year)
            
        Tutorial
        ========
        
        Inspecting the Bracket Object
        -----------------------------
        Here are three different ways you can inspect the Bracket.    
        
        * Inspect teams in each region (dictionary of actual results)
        * Inspect actual results by round (dictionary)
        * Inspect simulated results by round (list of Team attributes)
        
        Get Teams in each Region
        ~~~~~~~~~~~~~~~~~~~~~~~~
        
        Print out all the teams in each region. The `regions` attribute is
        a dictionary with the information of all the teams in each region.
        
        .. code-block:: python
        
            >>> print(b19.regions)
            {
                'East': [{'Team': 'Duke', 'Seed': 1}, 
                         {'Team': 'Michigan St', 'Seed': 2}, 
                         {'Team': 'LSU', 'Seed': 3}, 
                         ...],
                'West': [{'Team': 'Gonzaga', 'Seed': 1}, 
                         {'Team': 'Michigan', 'Seed': 2}, 
                         {'Team': 'Texas Tech', 'Seed': 3},
                         ...],
                'Midwest': [{'Team': 'North Carolina', 'Seed': 1}, 
                            {'Team': 'Kentucky', 'Seed': 2}, 
                            {'Team': 'Houston', 'Seed': 3},
                            ...],
                'South': [{'Team': 'Virginia', 'Seed': 1}, 
                          {'Team': 'Tennessee', 'Seed': 2}, 
                          {'Team': 'Purdue', 'Seed': 3},
                          ...]
            }
        
        
Keywords: brackets,NCAA,basketball,march,madness,tournament
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Intended Audience :: Developers
Classifier: Topic :: Software Development :: Build Tools
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.4
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
