# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from . import qbit_pb2 as qbit__pb2


class QbitStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.CompareMolecule = channel.unary_unary(
        '/qbit.services.Qbit/CompareMolecule',
        request_serializer=qbit__pb2.CompareRequest.SerializeToString,
        response_deserializer=qbit__pb2.ComparisonResult.FromString,
        )
    self.CompareMoleculeBenchmark = channel.unary_unary(
        '/qbit.services.Qbit/CompareMoleculeBenchmark',
        request_serializer=qbit__pb2.CompareRequest.SerializeToString,
        response_deserializer=qbit__pb2.ComparisonResult.FromString,
        )
    self.Hobo2Qubo = channel.unary_unary(
        '/qbit.services.Qbit/Hobo2Qubo',
        request_serializer=qbit__pb2.BinaryPolynomial.SerializeToString,
        response_deserializer=qbit__pb2.BinaryPolynomial.FromString,
        )
    self.SolveQubo = channel.unary_unary(
        '/qbit.services.Qbit/SolveQubo',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.QuboResponse.FromString,
        )
    self.SolveQuboFujitsuDA2 = channel.unary_unary(
        '/qbit.services.Qbit/SolveQuboFujitsuDA2',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.QuboResponse.FromString,
        )
    self.SolveQuboFujitsuDA2PT = channel.unary_unary(
        '/qbit.services.Qbit/SolveQuboFujitsuDA2PT',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.QuboResponse.FromString,
        )
    self.HealthCheck = channel.unary_unary(
        '/qbit.services.Qbit/HealthCheck',
        request_serializer=qbit__pb2.HealthCheckRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.AuthCheck = channel.unary_unary(
        '/qbit.services.Qbit/AuthCheck',
        request_serializer=qbit__pb2.HealthCheckRequest.SerializeToString,
        response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
        )
    self.Version = channel.unary_unary(
        '/qbit.services.Qbit/Version',
        request_serializer=qbit__pb2.VersionRequest.SerializeToString,
        response_deserializer=qbit__pb2.VersionResponse.FromString,
        )
    self.SubmitSolveQuboTabu = channel.unary_unary(
        '/qbit.services.Qbit/SubmitSolveQuboTabu',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.SubmitQuboResponse.FromString,
        )
    self.SubmitSolveQuboMultiTabu = channel.unary_unary(
        '/qbit.services.Qbit/SubmitSolveQuboMultiTabu',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.SubmitQuboResponse.FromString,
        )
    self.SubmitSolveQuboPTICM = channel.unary_unary(
        '/qbit.services.Qbit/SubmitSolveQuboPTICM',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.SubmitQuboResponse.FromString,
        )
    self.SubmitSolveQuboPathRelinking = channel.unary_unary(
        '/qbit.services.Qbit/SubmitSolveQuboPathRelinking',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.SubmitQuboResponse.FromString,
        )
    self.SubmitSolveQuboFujitsuDA2 = channel.unary_unary(
        '/qbit.services.Qbit/SubmitSolveQuboFujitsuDA2',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.SubmitQuboResponse.FromString,
        )
    self.SubmitSolveQuboFujitsuDA2PT = channel.unary_unary(
        '/qbit.services.Qbit/SubmitSolveQuboFujitsuDA2PT',
        request_serializer=qbit__pb2.SolveQuboRequest.SerializeToString,
        response_deserializer=qbit__pb2.SubmitQuboResponse.FromString,
        )
    self.GetQuboSolution = channel.unary_unary(
        '/qbit.services.Qbit/GetQuboSolution',
        request_serializer=qbit__pb2.QuboSolutionRequest.SerializeToString,
        response_deserializer=qbit__pb2.QuboSolutionResponse.FromString,
        )
    self.SubmitQubo = channel.stream_unary(
        '/qbit.services.Qbit/SubmitQubo',
        request_serializer=qbit__pb2.SubmitQuboStream.SerializeToString,
        response_deserializer=qbit__pb2.ArchivedQuboInfo.FromString,
        )
    self.AzureQuantumCreateJob = channel.unary_unary(
        '/qbit.services.Qbit/AzureQuantumCreateJob',
        request_serializer=qbit__pb2.AzureCreateJobRequest.SerializeToString,
        response_deserializer=qbit__pb2.AzureJobResponse.FromString,
        )
    self.AzureQuantumGetJob = channel.unary_unary(
        '/qbit.services.Qbit/AzureQuantumGetJob',
        request_serializer=qbit__pb2.AzureGetJobRequest.SerializeToString,
        response_deserializer=qbit__pb2.AzureJobResponse.FromString,
        )
    self.AzureQuantumCancelJob = channel.unary_unary(
        '/qbit.services.Qbit/AzureQuantumCancelJob',
        request_serializer=qbit__pb2.AzureCancelJobRequest.SerializeToString,
        response_deserializer=qbit__pb2.AzureJobResponse.FromString,
        )


class QbitServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def CompareMolecule(self, request, context):
    """Compare molecules.

    With a specified solver, compare molecular similarities with a set of criterias.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def CompareMoleculeBenchmark(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Hobo2Qubo(self, request, context):
    """Converts HOBO to QUBO.

    Given a Higher Order Binary Optimization (HOBO) problem, convert into
    QUBO form.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SolveQubo(self, request, context):
    """Solves a QUBO.

    Given a QUBO and a solver with optionally set parameters, return a list
    of Solutions ordered by energy.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SolveQuboFujitsuDA2(self, request, context):
    """Solves a QUBO using the FujitsuDA2Solver.

    Given a QUBO and a solver with optionally set parameters, return a list
    of Solutions ordered by energy.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SolveQuboFujitsuDA2PT(self, request, context):
    """Solves a QUBO using the FujitsuDA2PTSolver.

    Given a QUBO and a solver with optionally set parameters, return a list
    of Solutions ordered by energy.

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def HealthCheck(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AuthCheck(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def Version(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubmitSolveQuboTabu(self, request, context):
    """*******************
    ASYNCHRONOUS CALLS
    *******************

    `SUBMIT` CALLS

    Takes a QUBO and a Tabu solver with optionally set parameters, then
    solves the given problem and saves the results in the database

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubmitSolveQuboMultiTabu(self, request, context):
    """Takes a QUBO and a MultiTabu solver with optionally set parameters, then
    solves the given problem and saves the results in the database

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubmitSolveQuboPTICM(self, request, context):
    """Takes a QUBO and a PTICM solver with optionally set parameters, then
    solves the given problem and saves the results in the database

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubmitSolveQuboPathRelinking(self, request, context):
    """Takes a QUBO and a PathRelinking solver with optionally set parameters, then
    solves the given problem and saves the results in the database

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubmitSolveQuboFujitsuDA2(self, request, context):
    """Takes a QUBO and a FujitsuDA2 solver with optionally set parameters, then
    solves the given problem and saves the results in the database

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubmitSolveQuboFujitsuDA2PT(self, request, context):
    """Takes a QUBO and a FujitsuDA2PT solver with optionally set parameters, then
    solves the given problem and saves the results in the database

    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def GetQuboSolution(self, request, context):
    """`GET SOLUTION` CALLS

    Retrieves the full response based off of the request ID passed through the
    body.
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def SubmitQubo(self, request_iterator, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AzureQuantumCreateJob(self, request, context):
    """Azure Quantum APIs
    Creates a job using customer supplied input data, parameters, and desired target
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AzureQuantumGetJob(self, request, context):
    """Gets the job information and status for a previously created job
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def AzureQuantumCancelJob(self, request, context):
    """Cancels a job that has been created
    """
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_QbitServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'CompareMolecule': grpc.unary_unary_rpc_method_handler(
          servicer.CompareMolecule,
          request_deserializer=qbit__pb2.CompareRequest.FromString,
          response_serializer=qbit__pb2.ComparisonResult.SerializeToString,
      ),
      'CompareMoleculeBenchmark': grpc.unary_unary_rpc_method_handler(
          servicer.CompareMoleculeBenchmark,
          request_deserializer=qbit__pb2.CompareRequest.FromString,
          response_serializer=qbit__pb2.ComparisonResult.SerializeToString,
      ),
      'Hobo2Qubo': grpc.unary_unary_rpc_method_handler(
          servicer.Hobo2Qubo,
          request_deserializer=qbit__pb2.BinaryPolynomial.FromString,
          response_serializer=qbit__pb2.BinaryPolynomial.SerializeToString,
      ),
      'SolveQubo': grpc.unary_unary_rpc_method_handler(
          servicer.SolveQubo,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.QuboResponse.SerializeToString,
      ),
      'SolveQuboFujitsuDA2': grpc.unary_unary_rpc_method_handler(
          servicer.SolveQuboFujitsuDA2,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.QuboResponse.SerializeToString,
      ),
      'SolveQuboFujitsuDA2PT': grpc.unary_unary_rpc_method_handler(
          servicer.SolveQuboFujitsuDA2PT,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.QuboResponse.SerializeToString,
      ),
      'HealthCheck': grpc.unary_unary_rpc_method_handler(
          servicer.HealthCheck,
          request_deserializer=qbit__pb2.HealthCheckRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'AuthCheck': grpc.unary_unary_rpc_method_handler(
          servicer.AuthCheck,
          request_deserializer=qbit__pb2.HealthCheckRequest.FromString,
          response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
      ),
      'Version': grpc.unary_unary_rpc_method_handler(
          servicer.Version,
          request_deserializer=qbit__pb2.VersionRequest.FromString,
          response_serializer=qbit__pb2.VersionResponse.SerializeToString,
      ),
      'SubmitSolveQuboTabu': grpc.unary_unary_rpc_method_handler(
          servicer.SubmitSolveQuboTabu,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.SubmitQuboResponse.SerializeToString,
      ),
      'SubmitSolveQuboMultiTabu': grpc.unary_unary_rpc_method_handler(
          servicer.SubmitSolveQuboMultiTabu,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.SubmitQuboResponse.SerializeToString,
      ),
      'SubmitSolveQuboPTICM': grpc.unary_unary_rpc_method_handler(
          servicer.SubmitSolveQuboPTICM,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.SubmitQuboResponse.SerializeToString,
      ),
      'SubmitSolveQuboPathRelinking': grpc.unary_unary_rpc_method_handler(
          servicer.SubmitSolveQuboPathRelinking,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.SubmitQuboResponse.SerializeToString,
      ),
      'SubmitSolveQuboFujitsuDA2': grpc.unary_unary_rpc_method_handler(
          servicer.SubmitSolveQuboFujitsuDA2,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.SubmitQuboResponse.SerializeToString,
      ),
      'SubmitSolveQuboFujitsuDA2PT': grpc.unary_unary_rpc_method_handler(
          servicer.SubmitSolveQuboFujitsuDA2PT,
          request_deserializer=qbit__pb2.SolveQuboRequest.FromString,
          response_serializer=qbit__pb2.SubmitQuboResponse.SerializeToString,
      ),
      'GetQuboSolution': grpc.unary_unary_rpc_method_handler(
          servicer.GetQuboSolution,
          request_deserializer=qbit__pb2.QuboSolutionRequest.FromString,
          response_serializer=qbit__pb2.QuboSolutionResponse.SerializeToString,
      ),
      'SubmitQubo': grpc.stream_unary_rpc_method_handler(
          servicer.SubmitQubo,
          request_deserializer=qbit__pb2.SubmitQuboStream.FromString,
          response_serializer=qbit__pb2.ArchivedQuboInfo.SerializeToString,
      ),
      'AzureQuantumCreateJob': grpc.unary_unary_rpc_method_handler(
          servicer.AzureQuantumCreateJob,
          request_deserializer=qbit__pb2.AzureCreateJobRequest.FromString,
          response_serializer=qbit__pb2.AzureJobResponse.SerializeToString,
      ),
      'AzureQuantumGetJob': grpc.unary_unary_rpc_method_handler(
          servicer.AzureQuantumGetJob,
          request_deserializer=qbit__pb2.AzureGetJobRequest.FromString,
          response_serializer=qbit__pb2.AzureJobResponse.SerializeToString,
      ),
      'AzureQuantumCancelJob': grpc.unary_unary_rpc_method_handler(
          servicer.AzureQuantumCancelJob,
          request_deserializer=qbit__pb2.AzureCancelJobRequest.FromString,
          response_serializer=qbit__pb2.AzureJobResponse.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'qbit.services.Qbit', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
