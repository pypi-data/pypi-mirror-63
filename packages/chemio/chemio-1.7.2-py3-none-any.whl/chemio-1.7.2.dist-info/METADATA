Metadata-Version: 2.1
Name: chemio
Version: 1.7.2
Summary: Quantum Chemical Softwares Input Generater & Output Parser
Home-page: https://github.com/atomse/chemio
Author: Sky Zhang
Author-email: sky.atomse@gmail.com
Maintainer: Sky Zhang
Maintainer-email: sky.atomse@gmail.com
License: MIT License
Platform: Linux
Platform: Darwin
Classifier: Development Status :: 4 - Beta
Classifier: Operating System :: MacOS
Classifier: Operating System :: POSIX
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: Implementation
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.5
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Requires-Python: >=3
Description-Content-Type: text/markdown
Requires-Dist: ase (>=3.19.0)
Requires-Dist: atomtools (>=1.9.1)
Requires-Dist: json-tricks (>=3.13.4)
Requires-Dist: modlog (>=0.0.2)
Requires-Dist: requests (>=2.22.0)
Provides-Extra: curate
Requires-Dist: graphviz ; extra == 'curate'
Provides-Extra: docs
Requires-Dist: sphinx ; extra == 'docs'
Requires-Dist: sphinxcontrib-programoutput ; extra == 'docs'
Requires-Dist: sphinx-rtd-theme ; extra == 'docs'
Requires-Dist: numpydoc ; extra == 'docs'
Provides-Extra: tests
Requires-Dist: pytest (>=4.0) ; extra == 'tests'
Requires-Dist: pytest-cov ; extra == 'tests'

# Chemio Chemical files Input/Output


Chemical file Input/Output

Chemio: convert from one to another



[![Build Status](https://travis-ci.org/atomse/chemio.svg?branch=master)](https://travis-ci.org/atomse/chemio)
[![PyPI](https://img.shields.io/pypi/v/chemio.svg)](https://pypi.org/project/chemio)


## read/write

```python
import chemio
chemio.read(inputobj, index)
chemio.write(filename, inputobj, format)
chemio.convert(inputobj, input_index, input_format, output_filename, output_index, output_format)
chemio.preview(arrays, format)
```


## cli

```bash
# chemio -h
usage: chemio [-h] [--version] [-T] {help,info,convert} ...

Chem IO command line tool.

optional arguments:
  -h, --help           show this help message and exit
  --version            show program's version number and exit
  -T, --traceback

Sub-commands:
  {help,info,convert}
    help               Help for sub-command.
    info               Print information about files or system.
    convert            Convert between file formats.
```



```bash
usage: chemio info [-h] [-v] [-k KEY] [filename [filename ...]]

Print information about files or system.

With filename(s), the file format will be determined for each file.

positional arguments:
  filename           Name of file to determine format for.

optional arguments:
  -h, --help         show this help message and exit
  -v, --verbose      Show more information about files.
  -k KEY, --key KEY  key to show

```



```bash
usage: chemio convert [-h] [-v] [-i FORMAT] [-o FORMAT] [-f] [-n NUMBER] [-s]
                      input-file [input-file ...] output-file

Convert between file formats.

Use "-" for stdin/stdout. See "chemio info --formats" for known formats.

positional arguments:
  input-file
  output-file

optional arguments:
  -h, --help            show this help message and exit
  -v, --verbose         Print names of converted files
  -i FORMAT, --input-format FORMAT
                        Specify input FORMAT
  -o FORMAT, --output-format FORMAT
                        Specify output FORMAT
  -f, --force           Overwrite an existing file
  -n NUMBER, --image-number NUMBER
                        Pick images from trajectory. NUMBER can be a single
                        number (use a negative number to count from the back)
                        or a range: start:stop:step, where the ":step" part
                        can be left out - default values are 0:nimages:1.
  -s, --split-output    Write output frames to individual files. Output file
                        name should be a format string with a single integer
                        field, e.g. out-{:0>5}.xyz
```


