#-*- coding: utf-8 -*-
"""
Created on 2017-01-05 20:55:26
Modified on 2017-06-26 02:36:25

@author: Young Ju Kim
"""


import os
import datetime as dt
import tarfile
import distutils
import subprocess

try:
    from setuptools import setup, find_packages
except ImportError:
    from distutils.core import setup, find_packages
from distutils.cmd import Command


__version__ = '0.1.27'

desc = """
This contains a number of useful objects for data manipulation & analysis.
"""

with open('README.rst', 'r', encoding='utf-8') as readme_file:
    long_desc = readme_file.read()


class SphinxCommand(Command):
    """Documentation Command"""

    def initialize_options(self):
        """Set default values for options."""
        pass

    def finalize_options(self):
        """Post-process options."""
        pass

    def run(self):
        """Run command."""
        command = ['cd docs;make html;cd ..']
        # command.append(os.getcwd())
        self.announce(
            'Running command: %s' % str(command),
            level=distutils.log.INFO)
        subprocess.check_call(command)


with open('unipy/__version__.py', 'w') as f:
    version_py_string = '''#-*- coding: utf-8 -*-
# This file is automatically generated by 'setup.py'
"""
Created on 2017-01-05 20:53:15
Modified on {modified_time}

@author: Young Ju Kim
"""


__all__ = ['__version__']


__version__ = '{version}'

'''.format(modified_time=dt.datetime.now().strftime("%Y-%m-%d %H:%M:%S"),
           version=__version__)
    f.write(version_py_string)



def package_data_listup():

    filename = 'dataset/resources.gz/resources.tar.gz'
    tar = tarfile.open(filename)
    filelist = list(set(map(lambda x: x.split('/')[0], tar.getnames())))
    filelist.sort()
    return filelist

required_packages = [
    'pandas >=0.20.2',
    'numpy >=1.13.1',
    'numpydoc >=0.7.0',
    'scipy >=0.19.1',
    'scikit-learn >=0.18.0',
    'statsmodels >=0.8.0',
    'matplotlib >=2.0.2',
    'paramiko >=2.1.2',
    'pandasql >=0.7.3',
    'seaborn >=0.8',
    'scikit-image >=0.13.0',
    'PyDrive >=1.2.1',
    'oauth2client >=4.1.2',
    'google-auth-oauthlib >=0.2.0',
    'pyasn1 >=0.4.3',
    'pyasn1-modules >=0.2.1',
    #'pyqt5',
    'mglearn >=0.1.6',
    # 'numba >=0.34.0',
    # 'nomkl',  # conda
]

# REQUIREMENTS.txt for [`Travis CI`, `readthedocs`]
for requirement_file in ['REQUIREMENTS.txt', 'requirements.txt']:
    with open(requirement_file, 'w') as f:
        header = '--index-url https://pypi.python.org/simple/'
        pkg_ls = '\n'.join(required_packages).replace('>=', '>=')
        f.write('\n'.join([header, pkg_ls]))



# Package Description

package_name = 'unipy'
package_version = __version__
short_desc = 'Useful tools for Data Scentists'
package_source = '{name}-{version}.tar.gz'.format(
    name=package_name,
    version=package_version,
)
git_url = 'https://github.com/pydemia/unipy'
doc_url = 'https://unipy.readthedocs.io/en/latest/index.html'
required_on_run = '\n' + '\n'.join([(' ' * 4) + '- {dep}'.format(dep=dep)
    for dep in (['python'] + required_packages)])
required_on_build = '\n' + (' ' * 4) + '- setuptools' + required_on_run
license_family_str = 'MIT'
license_str = 'MIT License'



setup(name=package_name,
      version=package_version,
      description='Useful tools for Data Scientists',
      long_description=long_desc,
      python_requires='>= 3.6',
      url=doc_url,
      download_url=git_url,
      author='Youngju Jaden Kim',
      author_email='pydemia@gmail.com',
      license=license_str,
      classifiers=[
            # How Mature: 3 - Alpha, 4 - Beta, 5 - Production/Stable
            'Development Status :: 4 - Beta',
            'Environment :: Console',
            #'Programming Language :: Python :: 3.5',
            'Programming Language :: Python :: 3.6',
            'Operating System :: OS Independent',
            'Intended Audience :: End Users/Desktop',
            'Intended Audience :: Developers',
            'Intended Audience :: Science/Research',
            'Natural Language :: English',
            ],
      packages=find_packages(exclude=['contrib',
                                     #  'docs',
                                      'tests']),
      cmdclass={'documentation': SphinxCommand},
      #setup_requires=required_packages,
      install_requires=required_packages,
      zip_safe=False,
      package_data={'unipy': ['*.gz', 'dataset/resources.tar.gz']}
      )


# # Managing conda-build
# with open('meta.yaml.template', 'r') as conda_file:
#     conda_build_str = conda_file.read()
#     conda_build_str = conda_build_str.format(
#         package_name=package_name,
#         package_version=package_version,
#         package_source=package_source,
#         package_url='./dist',
#         required_on_build=required_on_build,
#         required_on_run=required_on_run,
#         doc_url=doc_url,
#         license_str=license_str,
#         short_desc=short_desc,
#         license_family_str=license_family_str,
#     )

# with open('conda/unipy/meta.yaml', 'w') as conda_meta_file:
#     conda_meta_file.write(conda_build_str)
