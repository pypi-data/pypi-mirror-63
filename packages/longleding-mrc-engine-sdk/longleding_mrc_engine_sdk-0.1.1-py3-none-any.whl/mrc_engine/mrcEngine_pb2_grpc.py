# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from . import common_pb2 as common__pb2


class MRCEngineStub(object):
    # missing associated documentation comment in .proto file
    pass

    def __init__(self, channel):
        """Constructor.

        Args:
          channel: A grpc.Channel.
        """
        self.OCRResultClassify = channel.unary_unary(
            '/longleding.mrc_engine.MRCEngine/OCRResultClassify',
            request_serializer=common__pb2.RequestMessage.SerializeToString,
            response_deserializer=common__pb2.ResponseMessage.FromString,
        )
        self.OCRResultMatching = channel.unary_unary(
            '/longleding.mrc_engine.MRCEngine/OCRResultMatching',
            request_serializer=common__pb2.RequestMessage.SerializeToString,
            response_deserializer=common__pb2.ResponseMessage.FromString,
        )


class MRCEngineServicer(object):
    # missing associated documentation comment in .proto file
    pass

    def OCRResultClassify(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def OCRResultMatching(self, request, context):
        # missing associated documentation comment in .proto file
        pass
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MRCEngineServicer_to_server(servicer, server):
    rpc_method_handlers = {
        'OCRResultClassify': grpc.unary_unary_rpc_method_handler(
            servicer.OCRResultClassify,
            request_deserializer=common__pb2.RequestMessage.FromString,
            response_serializer=common__pb2.ResponseMessage.SerializeToString,
        ),
        'OCRResultMatching': grpc.unary_unary_rpc_method_handler(
            servicer.OCRResultMatching,
            request_deserializer=common__pb2.RequestMessage.FromString,
            response_serializer=common__pb2.ResponseMessage.SerializeToString,
        ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
        'longleding.mrc_engine.MRCEngine', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
