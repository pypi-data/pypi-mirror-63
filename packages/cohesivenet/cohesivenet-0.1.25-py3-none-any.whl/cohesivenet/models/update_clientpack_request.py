# coding: utf-8

"""
    VNS3 Controller API

    Cohesive networks VNS3 API providing complete control of your network's addresses, routes, rules and edge  # noqa: E501

    The version of the OpenAPI document: 4.8
    Contact: solutions@cohesive.net
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six


class UpdateClientpackRequest(object):
    """Based on OpenAPI spec
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        "enabled": "bool",
        "checked_out": "bool",
        "name": "str",
        "regenerate": "bool",
    }

    attribute_map = {
        "enabled": "enabled",
        "checked_out": "checked_out",
        "name": "name",
        "regenerate": "regenerate",
    }

    def __init__(
        self, enabled=None, checked_out=None, name=None, regenerate=None
    ):  # noqa: E501
        """UpdateClientpackRequest - a model defined in OpenAPI"""  # noqa: E501

        self._enabled = None
        self._checked_out = None
        self._name = None
        self._regenerate = None
        self.discriminator = None

        if enabled is not None:
            self.enabled = enabled
        if checked_out is not None:
            self.checked_out = checked_out
        if name is not None:
            self.name = name
        if regenerate is not None:
            self.regenerate = regenerate

    @property
    def enabled(self):
        """Gets the enabled of this UpdateClientpackRequest.  # noqa: E501

        Enable or disable clientpacks.  # noqa: E501

        :return: The enabled of this UpdateClientpackRequest.  # noqa: E501
        :rtype: bool
        """
        return self._enabled

    @enabled.setter
    def enabled(self, enabled):
        """Sets the enabled of this UpdateClientpackRequest.

        Enable or disable clientpacks.  # noqa: E501

        :param enabled: The enabled of this UpdateClientpackRequest.  # noqa: E501
        :type: bool
        """

        self._enabled = enabled

    @property
    def checked_out(self):
        """Gets the checked_out of this UpdateClientpackRequest.  # noqa: E501

        Update whether clientpacks are checked out and thus unavailable  # noqa: E501

        :return: The checked_out of this UpdateClientpackRequest.  # noqa: E501
        :rtype: bool
        """
        return self._checked_out

    @checked_out.setter
    def checked_out(self, checked_out):
        """Sets the checked_out of this UpdateClientpackRequest.

        Update whether clientpacks are checked out and thus unavailable  # noqa: E501

        :param checked_out: The checked_out of this UpdateClientpackRequest.  # noqa: E501
        :type: bool
        """

        self._checked_out = checked_out

    @property
    def regenerate(self):
        """Gets the regenerate of this UpdateClientpackRequest.  # noqa: E501

        Regenerate this clientpack  # noqa: E501

        :return: The regenerate of this UpdateClientpackRequest.  # noqa: E501
        :rtype: bool
        """
        return self._regenerate

    @regenerate.setter
    def regenerate(self, regenerate):
        """Sets the regenerate of this UpdateClientpackRequest.

        Regenerater this clientpack  # noqa: E501

        :param regenerate: The regenerate of this UpdateClientpackRequest.  # noqa: E501
        :type: bool
        """
        self._regenerate = regenerate

    @property
    def name(self):
        """Gets the name of this UpdateClientpackRequest.  # noqa: E501

        name this clientpack  # noqa: E501

        :return: The name of this UpdateClientpackRequest.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this UpdateClientpackRequest.

        name this clientpack  # noqa: E501

        :param name: The name of this UpdateClientpackRequest.  # noqa: E501
        :type: str
        """
        self._name = name

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(
                    map(lambda x: x.to_dict() if hasattr(x, "to_dict") else x, value)
                )
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(
                    map(
                        lambda item: (item[0], item[1].to_dict())
                        if hasattr(item[1], "to_dict")
                        else item,
                        value.items(),
                    )
                )
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, UpdateClientpackRequest):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
