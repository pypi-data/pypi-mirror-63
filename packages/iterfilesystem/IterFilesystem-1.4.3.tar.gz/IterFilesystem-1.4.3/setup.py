# -*- coding: utf-8 -*-
from setuptools import setup

packages = \
['iterfilesystem', 'iterfilesystem.bin', 'iterfilesystem.tests']

package_data = \
{'': ['*']}

install_requires = \
['psutil', 'tqdm']

entry_points = \
{'console_scripts': ['print_fs_stats = iterfilesystem.bin.print_fs_stats:main',
                     'publish = iterfilesystem.publish:publish',
                     'update_rst_readme = '
                     'iterfilesystem.publish:update_readme']}

setup_kwargs = {
    'name': 'iterfilesystem',
    'version': '1.4.3',
    'description': 'Multiprocess directory iteration via os.scandir() with progress indicator via tqdm bars.',
    'long_description': '--------------\nIterFilesystem\n--------------\n\nMultiprocess directory iteration via ``os.scandir()``\n\nWho\'s this Lib for?\n\nYou want to process a large number of files and/or a few very big files and give feedback to the user on how long it will take.\n\nFeatures:\n=========\n\n* Progress indicator:\n\n    * Immediately after start: process files and indication of progress via multiprocess\n\n    * process bars via `tqdm <https://pypi.org/project/tqdm/>`_\n\n    * Estimated time based on file count and size\n\n* Easy to implement extra process bar for big file processing.\n\n* Skip directories and file name via fnmatch.\n\nHow it works:\n=============\n\nThe main process starts *statistic* processes in background via Python multiprocess and starts directly with the work.\n\nThere are two background *statistic* processes collects information for the process bars:\n\n* Count up all directories and files.\n\n* Accumulates the sizes of all files.\n\nWhy two processes?\n\nBecause collect only the count of all filesystem items via ``os.scandir()`` is very fast. This is the fastest way to predict a processing time.\n\nUse ``os.DirEntry.stat()`` to get the file size is significantly slower: It requires another system call.\n\nOK, but why two processed?\n\nUse only the total count of all ``DirEntry`` may result in bad estimated time Progress indication.\nIt depends on what the actual work is about: When processing the contents of large files, it is good to know how much total data to be processed.\n\nThat\'s why we used two ways: the ``DirEntry`` count to forecast a processing time very quickly and the size to improve the predicted time.\n\nrequirements:\n=============\n\n* Python 3.6 or newer.\n\n* ``tqdm`` for process bars\n\n* ``psutils`` for setting process priority\n\n* For dev.: `Pipenv <https://pipenv.readthedocs.io/en/latest/install/#installing-pipenv>`_. Packages and virtual environment manager\n\ncontribute\n==========\n\nPlease: try, fork and contribute! ;)\n\n+--------------------------------------+----------------------------------------------------------+\n| |Build Status on travis-ci.org|      | `travis-ci.org/jedie/IterFilesystem`_                    |\n+--------------------------------------+----------------------------------------------------------+\n| |Build Status on appveyor.com|       | `ci.appveyor.com/project/jedie/IterFilesystem`_          |\n+--------------------------------------+----------------------------------------------------------+\n| |Coverage Status on codecov.io|      | `codecov.io/gh/jedie/IterFilesystem`_                    |\n+--------------------------------------+----------------------------------------------------------+\n| |Coverage Status on coveralls.io|    | `coveralls.io/r/jedie/IterFilesystem`_                   |\n+--------------------------------------+----------------------------------------------------------+\n| |Requirements Status on requires.io| | `requires.io/github/jedie/IterFilesystem/requirements/`_ |\n+--------------------------------------+----------------------------------------------------------+\n\n.. |Build Status on travis-ci.org| image:: https://travis-ci.org/jedie/IterFilesystem.svg\n.. _travis-ci.org/jedie/IterFilesystem: https://travis-ci.org/jedie/IterFilesystem/\n.. |Build Status on appveyor.com| image:: https://ci.appveyor.com/api/projects/status/py5sl38ql3xciafc?svg=true\n.. _ci.appveyor.com/project/jedie/IterFilesystem: https://ci.appveyor.com/project/jedie/IterFilesystem/history\n.. |Coverage Status on codecov.io| image:: https://codecov.io/gh/jedie/IterFilesystem/branch/master/graph/badge.svg\n.. _codecov.io/gh/jedie/IterFilesystem: https://codecov.io/gh/jedie/IterFilesystem\n.. |Coverage Status on coveralls.io| image:: https://coveralls.io/repos/jedie/IterFilesystem/badge.svg\n.. _coveralls.io/r/jedie/IterFilesystem: https://coveralls.io/r/jedie/IterFilesystem\n.. |Requirements Status on requires.io| image:: https://requires.io/github/jedie/IterFilesystem/requirements.svg?branch=master\n.. _requires.io/github/jedie/IterFilesystem/requirements/: https://requires.io/github/jedie/IterFilesystem/requirements/\n\n-------\nExample\n-------\n\nUse example CLI, e.g.:\n\n::\n\n    ~$ git clone https://github.com/jedie/IterFilesystem.git\n    ~$ cd IterFilesystem\n    ~/IterFilesystem$ pipenv install\n    ~/IterFilesystem$ pipenv shell\n    (IterFilesystem) ~/IterFilesystem$ print_fs_stats --help\n    (IterFilesystem) ~/IterFilesystem$ pip install -e .\n    ...\n    Successfully installed iterfilesystem\n    \n    ~/IterFilesystem$ $ poetry run print_fs_stats --help\n    usage: print_fs_stats.py [-h] [-v] [--debug] [--path PATH]\n                             [--skip_dir_patterns [SKIP_DIR_PATTERNS [SKIP_DIR_PATTERNS ...]]]\n                             [--skip_file_patterns [SKIP_FILE_PATTERNS [SKIP_FILE_PATTERNS ...]]]\n    \n    Scan filesystem and print some information\n    \n    optional arguments:\n      -h, --help            show this help message and exit\n      -v, --version         show program\'s version number and exit\n      --debug               enable DEBUG\n      --path PATH           The file path that should be scanned e.g.: "~/foobar/"\n                            default is "~"\n      --skip_dir_patterns [SKIP_DIR_PATTERNS [SKIP_DIR_PATTERNS ...]]\n                            Directory names to exclude from scan.\n      --skip_file_patterns [SKIP_FILE_PATTERNS [SKIP_FILE_PATTERNS ...]]\n                            File names to ignore.\n\nexample output looks like this:\n\n::\n\n    (IterFilesystem) ~/IterFilesystem$ $ print_fs_stats --path ~/IterFilesystem --skip_dir_patterns ".*" "*.egg-info" --skip_file_patterns ".*"\n    Read/process: \'~/IterFilesystem\'...\n    Skip directory patterns:\n    \t* .*\n    \t* *.egg-info\n    \n    Skip file patterns:\n    \t* .*\n    \n    Filesystem items..:Read/process: \'~/IterFilesystem\'...\n    \n    ...\n    \n    Filesystem items..: 100%|█████████████████████████████████████████|135/135 13737.14entries/s [00:00<00:00, 13737.14entries/s]\n    File sizes........: 100%|██████████████████████████████████████████████████████████████|843k/843k [00:00<00:00, 88.5MBytes/s]\n    Average progress..: 100%|███████████████████████████████████████████████████████████████████████████████████████|00:00<00:00\n    Current File......:, /home/jens/repos/IterFilesystem/Pipfile\n    \n    \n    Processed 135 filesystem items in 0.02 sec\n    SHA515 hash calculated over all file content: 10f9475b21977f5aea1d4657a0e09ad153a594ab30abc2383bf107dbc60c430928596e368ebefab3e78ede61dcc101cb638a845348fe908786cb8754393439ef\n    File count: 109\n    Total file size: 843.5 KB\n    6 directories skipped.\n    6 files skipped.\n\n-------\nHistory\n-------\n\n* `**dev** - compare v1.4.3...master <https://github.com/jedie/IterFilesystem/compare/v1.4.3...master>`_ \n\n    * TBC\n\n* `16.03.2020 - v1.4.3 <https://github.com/jedie/IterFilesystem/compare/v1.4.2...v1.4.3>`_ \n\n    * Use logging and remove "verbose mode"\n\n    * Nicer "Average progess" bar\n\n    * Bugfix "Current File" bar: remove comma\n\n* `16.02.2020 - v1.4.2 <https://github.com/jedie/IterFilesystem/compare/v1.4.1...v1.4.2>`_ \n\n    * iterate over sorted dir entries\n\n    * update CI pipelines\n\n* `02.02.2020 - v1.4.1 <https://github.com/jedie/IterFilesystem/compare/v1.4.0...v1.4.1>`_ \n\n    * Bugfix ``human_filesize``\n\n* `02.02.2020 - v1.4.0 <https://github.com/jedie/IterFilesystem/compare/v1.3.1...v1.4.0>`_ \n\n    * ``stats_helper.abort`` exists always usefull to get information if KeyboardInterrupt was used\n\n    * use poetry and modernize project setup\n\n* `20.10.2019 - v1.3.1 <https://github.com/jedie/IterFilesystem/compare/v1.3.0...v1.3.1>`_ \n\n    * Bugfix if scan directory is completely empty\n\n* `13.10.2019 - v1.3.0 <https://github.com/jedie/IterFilesystem/compare/v1.2.0...v1.3.0>`_ \n\n    * Set ionice and nice priority via psutils\n\n* `13.10.2019 - v1.2.0 <https://github.com/jedie/IterFilesystem/compare/v1.1.0...v1.2.0>`_ \n\n    * Refactor API\n\n    * cleanup statistics and process bar\n\n    * handle access errors like: *Permission denied*\n\n    * fix tests\n\n* `12.10.2019 - v1.1.0 <https://github.com/jedie/IterFilesystem/compare/v1.0.0...v1.1.0>`_ \n\n    * don\'t create separate process for worker: Just do the work in main process\n\n    * dir/file filter uses now ``fnmatch``\n\n* `12.10.2019 - v1.0.0 <https://github.com/jedie/IterFilesystem/compare/v0.2.0...v1.0.0>`_ \n\n    * refactoring:\n\n        * don\'t use ``persist-queue``\n\n        * switch from threading to multiprocessing\n\n        * enhance progress display with multiple ``tqdm`` process bars\n\n* `15.09.2019 - v0.2.0 <https://github.com/jedie/IterFilesystem/compare/v0.1.0...v0.2.0>`_ \n\n    * store persist queue in temp directory\n\n    * Don\'t catch ``process_path_item`` errors, this should be made in child class\n\n* `15.09.2019 - v0.1.0 <https://github.com/jedie/IterFilesystem/compare/v0.0.1...v0.1.0>`_ \n\n    * add some project meta files and tests\n\n    * setup CI\n\n    * fix tests\n\n* `15.09.2019 - v0.0.1 <https://github.com/jedie/IterFilesystem/commit/db89a467a548a969d9d2cdd48adb92114a8833fe>`_ \n\n    * first Release on PyPi\n\n-----\nLinks\n-----\n\n* `https://pypi.python.org/pypi/IterFilesystem/ <https://pypi.python.org/pypi/IterFilesystem/>`_\n\n* `https://github.com/jedie/IterFilesystem/ <https://github.com/jedie/IterFilesystem/>`_\n\n--------\nDonating\n--------\n\n* `paypal.me/JensDiemer <https://www.paypal.me/JensDiemer>`_\n\n* `Flattr This! <https://flattr.com/submit/auto?uid=jedie&url=https%3A%2F%2Fgithub.com%2Fjedie%2FIterFilesystem%2F>`_\n\n* Send `Bitcoins <http://www.bitcoin.org/>`_ to `1823RZ5Md1Q2X5aSXRC5LRPcYdveCiVX6F <https://blockexplorer.com/address/1823RZ5Md1Q2X5aSXRC5LRPcYdveCiVX6F>`_\n\n------------\n\n``Note: this file is generated from README.creole 2020-03-16 18:09:30 with "python-creole"``',
    'author': 'JensDiemer',
    'author_email': 'git@jensdiemer.de',
    'maintainer': None,
    'maintainer_email': None,
    'url': None,
    'packages': packages,
    'package_data': package_data,
    'install_requires': install_requires,
    'entry_points': entry_points,
    'python_requires': '>=3.6,<4.0',
}


setup(**setup_kwargs)
