<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd"
[
	<!ENTITY pathchar       "\w\-\.\*\?\+@,\\&amp;&#037;&#036;&#033;&#126;">
	<!ENTITY nopathchar     "\s\)&quot;">
	<!ENTITY varname        "[A-Za-z]\w*">
	<!ENTITY exec           "[pPcC]?[iuU]?x">
]>

<!--
  AppArmor Profiles Syntax Highlighting Definition
  for the KDE's KSyntaxHighlighting Framework.
  ==========================================================================================
   Copyright (c) 2017-2018 Nibaldo González S. (nibgonz@gmail.com)
  
   Permission is hereby granted, free of charge, to any person obtaining a copy of this
   software and associated documentation files (the "Software"), to deal in the Software
   without restriction, including without limitation the rights to use, copy, modify, merge,
   publish, distribute, sublicense, and/or sell copies of the Software, and to permit
   persons to whom the Software is furnished to do so, subject to the following conditions:
  
   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.
  
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
   PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
   COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
   AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ==========================================================================================
  
  Last update:
	Syntax highlighting based in AppArmor 2.12.0
	For more details about the syntax of AppArmor profiles, visit:
		https://gitlab.com/apparmor/apparmor/wikis/Documentation
		http://manpages.ubuntu.com/manpages/artful/en/man5/apparmor.d.5.html
  
  Change log:
	* Version 5 [31-Jan-2018, by Nibaldo González]:
		- Fix 'itemDatas' and end-of-rules keywords.
	* Version 4 [25-Jan-2018, by Nibaldo González]: (AppArmor 2.12.0)
		- New keywords: network and mount rules, default abstractions, variables and others.
		- Improvements in the highlighting of Include rules, variables, rlimit rules, 
		  profile name, transition profile rules, end of rule context & file permissions.
		- Fixes: Comments within rules, sensitive keywords, owner qualifier & others.
	* Version 3 [24-Sep-2017, by Nibaldo González]:
		- Fix incorrect highlighting of the DBus rule 'name' keyword.
	* Version 2 [29-Aug-2017, by Nibaldo González]:
		- Improvements in highlighting and bug fixes.
		- Each rule has its own context.
		- The profile name is highlighted in the profile header and profile transition rules.
  	* Version 1 [22-Feb-2017, by Nibaldo González]:
		- Initial version. Support for profile syntax of Apparmor 2.11.
-->

<language name="AppArmor Security Profile"
		version="5"
		kateversion="5.0"
		section="Markup"
		extensions="usr.bin.*;usr.sbin.*;bin.*;sbin.*;usr.lib.*;usr.lib64.*;usr.lib32.*;usr.libx32.*;usr.libexec.*;usr.local.bin.*;usr.local.sbin.*;usr.local.lib*;opt.*;etc.cron.*"
		priority="0"
		mimetype=""
		author="Nibaldo González (nibgonz@gmail.com)"
		license="MIT">
	
	<highlighting>
		
		<!-- Profile Header -->
		<list name="profile_head">
			<item>profile</item>
			<item>hat</item>
		</list>
		<list name="profile_options">
			<item>flags</item>
		</list>
		<list name="profile_flags">
			<item>audit</item>
			<item>complain</item>
			<item>enforce</item>
			<item>mediate_deleted</item>
			<item>attach_disconnected</item>
			<item>chroot_relative</item>
			<item>chroot_attach</item>
			<item>chroot_no_attach</item>
			<item>delegate_deleted</item>
			<item>no_attach_disconnected</item>
			<item>namespace_relative</item>
		</list>

		<!-- Rule Qualifiers -->
		<list name="access_types">
			<item>allow</item>
			<item>deny</item>
		</list>
		<list name="file_qualifiers">
			<item>owner</item>
			<!-- other -->
		</list>
		<list name="qualifiers">
			<item>audit</item>
			<!-- defined, if, else, not -->
		</list>
		
		<!-- Capabilities, Capability Rule.
		     Lowercase capability name without 'CAP_' prefix.
		     http://man7.org/linux/man-pages/man7/capabilities.7.html -->
		<list name="rule_capability">
			<item>audit_control</item>
			<item>audit_read</item>
			<item>audit_write</item>
			<item>block_suspend</item>
			<item>chown</item>
			<item>dac_override</item>
			<item>dac_read_search</item>
			<item>fowner</item>
			<item>fsetid</item>
			<item>ipc_lock</item>
			<item>ipc_owner</item>
			<item>kill</item>
			<item>lease</item>
			<item>linux_immutable</item>
			<item>mac_admin</item>
			<item>mac_override</item>
			<item>mknod</item>
			<item>net_admin</item>
			<item>net_bind_service</item>
			<item>net_broadcast</item>
			<item>net_raw</item>
			<item>setgid</item>
			<item>setfcap</item>
			<item>setpcap</item>
			<item>setuid</item>
			<item>sys_admin</item>
			<item>sys_boot</item>
			<item>sys_chroot</item>
			<item>sys_module</item>
			<item>sys_nice</item>
			<item>sys_pacct</item>
			<item>sys_ptrace</item>
			<item>sys_rawio</item>
			<item>sys_resource</item>
			<item>sys_time</item>
			<item>sys_tty_config</item>
			<item>syslog</item>
			<item>wake_alarm</item>
		</list>

		<!-- Network Rule -->
		<list name="rule_network">
			<!-- Domain.
				 Also: unix -->
			<item>inet</item>
			<item>ax25</item>
			<item>ipx</item>
			<item>appletalk</item>
			<item>netrom</item>
			<item>bridge</item>
			<item>atmpvc</item>
			<item>x25</item>
			<item>inet6</item>
			<item>rose</item>
			<item>netbeui</item>
			<item>security</item>
			<item>key</item>
			<item>packet</item>
			<item>ash</item>
			<item>econet</item>
			<item>atmsvc</item>
			<item>sna</item>
			<item>irda</item>
			<item>pppox</item>
			<item>wanpipe</item>
			<item>bluetooth</item>
			<item>netlink</item>
			<item>rds</item>
			<item>llc</item>
			<item>can</item>
			<item>tipc</item>
			<item>iucv</item>
			<item>rxrpc</item>
			<item>isdn</item>
			<item>phonet</item>
			<item>ieee802154</item>
			<item>caif</item>
			<item>alg</item>
			<item>nfc</item>
			<item>vsock</item>
			<item>mpls</item>
			<item>ib</item>
			<item>kcm</item>
			<item>smc</item>

			<!-- Type.
				 Also: packet -->
			<item>stream</item>
			<item>dgram</item>
			<item>seqpacket</item>
			<item>rdm</item>
			<item>raw</item>

			<!-- Protocol -->
			<item>tcp</item>
			<item>udp</item>
			<item>icmp</item>
		</list>
		<list name="rule_network_unix">
			<!-- NOTE: This keyword is placed in a separate list, 
				 to avoid conflicts with the 'unix' rule name. -->
			<item>unix</item>
		</list>
		
		<!-- Mount Rule -->
		<list name="rule_mount_options">
			<item>fstype</item>
			<item>vfstype</item>
			<item>options</item>
			<item>option</item>
		</list>
		<list name="rule_mount_flags">
			<item>r</item>
			<item>w</item>
			<item>rw</item>
			<item>ro</item>
			<item>read-only</item>
			<item>suid</item>
			<item>nosuid</item>
			<item>dev</item>
			<item>nodev</item>
			<item>exec</item>
			<item>noexec</item>
			<item>sync</item>
			<item>async</item>
			<item>remount</item>
			<item>mand</item>
			<item>nomand</item>
			<item>dirsync</item>
			<item>atime</item>
			<item>noatime</item>
			<item>diratime</item>
			<item>nodiratime</item>
			<item>bind</item>
			<item>B</item>
			<item>move</item>
			<item>M</item>
			<item>rbind</item>
			<item>R</item>
			<item>verbose</item>
			<item>silent</item>
			<item>loud</item>
			<item>acl</item>
			<item>noacl</item>
			<item>unbindable</item>
			<item>make-unbindable</item>
			<item>runbindable</item>
			<item>make-runbindable</item>
			<item>private</item>
			<item>make-private</item>
			<item>rprivate</item>
			<item>make-rprivate</item>
			<item>slave</item>
			<item>make-slave</item>
			<item>rslave</item>
			<item>make-rslave</item>
			<item>shared</item>
			<item>make-shared</item>
			<item>rshared</item>
			<item>make-rshared</item>
			<item>relatime</item>
			<item>norelatime</item>
			<item>iversion</item>
			<item>noiversion</item>
			<item>strictatime</item>
			<item>user</item>
			<item>nouser</item>
		</list>
		<list name="rule_mount_fstypes">
			<!-- VFS Types -->
			<item>autofs</item>
			<item>bdev</item>
			<item>bpf</item>
			<item>cachefs</item>
			<item>cgroup</item>
			<item>cgroup2</item>
			<item>cifs</item>
			<item>coherent</item>
			<item>configfs</item>
			<item>cpuset</item>
			<item>cramfs</item>
			<item>debugfs</item>
			<item>devfs</item>
			<item>devpts</item>
			<item>devtmpfs</item>
			<item>ecryptfs</item>
			<item>efs</item>
			<item>fuse</item>
			<item>fuseblk</item>
			<item>fusectl</item>
			<item>hugetlbfs</item>
			<item>iso9660</item>
			<item>kernfs</item>
			<item>mqueue</item>
			<item>pipefs</item>
			<item>proc</item>
			<item>procfs</item>
			<item>pstore</item>
			<item>ramfs</item>
			<item>romfs</item>
			<item>rootfs</item>
			<item>securityfs</item>
			<item>selinuxfs</item>
			<item>sockfs</item>
			<item>specfs</item>
			<item>squashfs</item>
			<item>swapfs</item>
			<item>sysfs</item>
			<item>sysv</item>
			<item>tmpfs</item>
			<item>usbfs</item>
			<item>vfat</item>
			<!-- FS Types -->
			<item>adfs</item>
			<item>affs</item>
			<item>apfs</item>
			<item>btrfs</item>
			<item>coda</item>
			<item>exfat</item>
			<item>ext2</item>
			<item>ext3</item>
			<item>ext4</item>
			<item>f2fs</item>
			<item>fatx</item>
			<item>hfs</item>
			<item>hfsplus</item>
			<item>hpfs</item>
			<item>jfs</item>
			<item>lvm2</item>
			<item>minix</item>
			<item>msdos</item>
			<item>ncpfs</item>
			<item>nilfs</item>
			<item>nilfs2</item>
			<item>nfs</item>
			<item>nfs4</item>
			<item>ntfs</item>
			<item>ntfs-3g</item>
			<item>openzfs</item>
			<item>qnx4</item>
			<item>qnx6</item>
			<item>reiser4</item>
			<item>reiserfs</item>
			<item>smbfs</item>
			<item>swap</item>
			<item>tracefs</item>
			<item>ubifs</item>
			<item>udf</item>
			<item>ufs</item>
			<item>umsdos</item>
			<item>urefs</item>
			<item>xenix</item>	
			<item>xfs</item>
			<item>zfs</item>
			<!-- Not included: ext, usbdevfs, xiafs -->
		</list>

		<!-- Pivot Root Rule -->
		<list name="rule_pivotroot_options">
			<item>oldroot</item>
		</list>

		<!-- Ptrace Rule -->
		<list name="rule_ptrace_options">
			<item>peer</item>
		</list>
		<list name="rule_ptrace_access">
			<!-- Also: r, w, rw, read -->
			<item>readby</item>
			<item>trace</item>
			<item>tracedby</item>
		</list>

		<!-- Signal Rule -->
		<list name="rule_signal_options">
			<item>set</item>
			<item>peer</item>
		</list>
		<list name="rule_signal">
			<!-- Also: rtmin+0 ... rtmin+32 -->
			<item>bus</item>
			<item>hup</item>
			<item>int</item>
			<item>quit</item>
			<item>ill</item>
			<item>trap</item>
			<item>abrt</item>
			<item>fpe</item>
			<item>kill</item>
			<item>usr1</item>
			<item>segv</item>
			<item>usr2</item>
			<item>pipe</item>
			<item>alrm</item>
			<item>term</item>
			<item>stkflt</item>
			<item>chld</item>
			<item>cont</item>
			<item>stop</item>
			<item>stp</item>
			<item>ttin</item>
			<item>ttou</item>
			<item>urg</item>
			<item>xcpu</item>
			<item>xfsz</item>
			<item>vtalrm</item>
			<item>prof</item>
			<item>winch</item>
			<item>io</item>
			<item>pwr</item>
			<item>sys</item>
			<item>emt</item>
			<item>exists</item>
		</list>
		<list name="rule_signal_access">
			<!-- Also: r, w, rw, read, write -->
			<item>send</item>
			<item>receive</item>
		</list>

		<!-- DBus Rule -->
		<list name="rule_dbus_options">
			<item>peer</item>
			<item>bus</item>
			<item>path</item>
			<item>interface</item>
			<item>member</item>
			<item>name</item>
		</list>
		<list name="rule_dbus_peer">
			<item>name</item>
			<item>label</item>
		</list>
		<list name="rule_dbus_access">
			<!-- Also: r, w, rw, read, write -->
			<item>send</item>
			<item>receive</item>
			<item>bind</item>
			<item>eavesdrop</item>
		</list>
		<list name="rule_dbus_bus">
			<item>system</item>
			<item>session</item>
		</list>
		
		<!-- Unix Rule -->
		<list name="rule_unix_options">			
			<item>peer</item>
			<item>set</item>
			<item>label</item>
			<item>type</item>
			<item>protocol</item>
			<item>addr</item>
			<item>attr</item>
			<item>opt</item>
		</list>
		<list name="rule_unix_access">
			<!-- Also: r, w, rw, read, write -->
			<item>send</item>
			<item>receive</item>
			<item>bind</item>
			<item>create</item>
			<item>listen</item>
			<item>accept</item>
			<item>connect</item>
			<item>shutdown</item>
			<item>getattr</item>
			<item>setattr</item>
			<item>getopt</item>
			<item>setopt</item>
		</list>

		<!-- Rlimit Rule -->
		<list name="rule_rlimit">
			<item>cpu</item>
			<item>fsize</item>
			<item>data</item>
			<item>stack</item>
			<item>core</item>
			<item>rss</item>
			<item>nofile</item>
			<item>ofile</item>
			<item>as</item>
			<item>nproc</item>
			<item>memlock</item>
			<item>locks</item>
			<item>sigpending</item>
			<item>msgqueue</item>
			<item>nice</item>
			<item>rtprio</item>
			<item>rttime</item>
		</list>

		<!-- Link Rule -->
		<list name="rule_link">
			<item>subset</item>
		</list>

		<!-- Change Profile Rule -->
		<list name="rule_changeprofile">
			<item>safe</item>
			<item>unsafe</item>
		</list>
		
		<!-- Permissions -->
		<list name="base_accesses">
			<item>rw</item>
			<item>r</item>
			<item>w</item>
			<item>read</item>
			<item>write</item>
		</list>
		
		<!-- Abstractions and variables defined in the provided AppArmor policy.
			 NOTE: The following keywords are not used for highlighting. The purpose of these 
			 is to provide autocomplete suggestions when writing Include rules and variables. -->
		<list name="default_variables">
			<item>profile_name</item> <!-- Special variable -->
			
			<item>HOME</item>
			<item>HOMEDIRS</item>
			<item>multiarch</item>
			<item>pid</item>
			<item>pids</item>
			<item>PROC</item>
			<item>securityfs</item>
			<item>apparmorfs</item>
			<item>sys</item>
			<item>tid</item>
			<item>XDG_DESKTOP_DIR</item>
			<item>XDG_DOWNLOAD_DIR</item>
			<item>XDG_TEMPLATES_DIR</item>
			<item>XDG_PUBLICSHARE_DIR</item>
			<item>XDG_DOCUMENTS_DIR</item>
			<item>XDG_MUSIC_DIR</item>
			<item>XDG_PICTURES_DIR</item>
			<item>XDG_VIDEOS_DIR</item>
		</list>
		<list name="default_abstractions">
			<item>abstractions/</item>
			<item>apache2-common</item>
			<item>aspell</item>
			<item>audio</item>
			<item>authentication</item>
			<item>base</item>
			<item>bash</item>
			<item>consoles</item>
			<item>cups-client</item>
			<item>dbus</item>
			<item>dbus-accessibility</item>
			<item>dbus-accessibility-strict</item>
			<item>dbus-session</item>
			<item>dbus-session-strict</item>
			<item>dbus-strict</item>
			<item>dconf</item>
			<item>dovecot-common</item>
			<item>enchant</item>
			<item>fcitx</item>
			<item>fcitx-strict</item>
			<item>fonts</item>
			<item>freedesktop.org</item>
			<item>gnome</item>
			<item>gnupg</item>
			<item>ibus</item>
			<item>kde</item>
			<item>kerberosclient</item>
			<item>launchpad-integration</item>
			<item>ldapclient</item>
			<item>libpam-systemd</item>
			<item>likewise</item>
			<item>mdns</item>
			<item>mir</item>
			<item>mozc</item>
			<item>mysql</item>
			<item>nameservice</item>
			<item>nis</item>
			<item>nvidia</item>
			<item>openssl</item>
			<item>orbit2</item>
			<item>p11-kit</item>
			<item>perl</item>
			<item>php</item>
			<item>php5</item>
			<item>postfix-common</item>
			<item>private-files</item>
			<item>private-files-strict</item>
			<item>python</item>
			<item>ruby</item>
			<item>samba</item>
			<item>smbpass</item>
			<item>ssl_certs</item>
			<item>ssl_keys</item>
			<item>svn-repositories</item>
			<item>ubuntu-bittorrent-clients</item>
			<item>ubuntu-browsers</item>
			<item>ubuntu-console-browsers</item>
			<item>ubuntu-console-email</item>
			<item>ubuntu-email</item>
			<item>ubuntu-feed-readers</item>
			<item>ubuntu-gnome-terminal</item>
			<item>ubuntu-helpers</item>
			<item>ubuntu-konsole</item>
			<item>ubuntu-media-players</item>
			<item>ubuntu-unity7-base</item>
			<item>ubuntu-unity7-launcher</item>
			<item>ubuntu-unity7-messaging</item>
			<item>ubuntu-xterm</item>
			<item>user-download</item>
			<item>user-mail</item>
			<item>user-manpages</item>
			<item>user-tmp</item>
			<item>user-write</item>
			<item>video</item>
			<item>wayland</item>
			<item>web-data</item>
			<item>winbind</item>
			<item>wutmp</item>
			<item>X</item>
			<item>xad</item>
			<item>xdg-desktop</item>

			<item>ubuntu-browsers.d/</item>
			<item>java</item>
			<item>mailto</item>
			<item>multimedia</item>
			<item>plugins-common</item>
			<item>productivity</item>
			<item>text-editors</item>
			<item>ubuntu-integration</item>
			<item>ubuntu-integration-xul</item>
			<item>user-files</item>

			<item>apparmor_api/</item>
			<item>change_profile</item>
			<item>examine</item>
			<item>find_mountpoint</item>
			<item>introspect</item>
			<item>is_enabled</item>

			<item>tunables/</item>
			<item>alias</item>
			<item>apparmorfs</item>
			<item>dovecot</item>
			<item>global</item>
			<item>home</item>
			<item>kernelvars</item>
			<item>multiarch</item>
			<item>ntpd</item>
			<item>proc</item>
			<item>securityfs</item>
			<item>sys</item>
			<item>xdg-user-dirs</item>
			<item>home.d/</item>
			<item>multiarch.d/</item>
			<item>xdg-user-dirs.d/</item>
			<item>site.local</item>

			<item>local/</item>
		</list>

		<list name="boolean">
			<item>True</item>
			<item>False</item>
		</list>
		<list name="other_words">
			<item>unspec</item>
			<item>none</item>
			<item>unconfined</item>
		</list>

		<!-- Rule Names.
		     NOTE: Each rule name is a keyword in separate lists, since each
		     has a different context and for a correct delimitation of the words. -->
		<list name="rule_name_mount">
			<item>mount</item>
			<item>remount</item>
			<item>umount</item>
		</list>
		<list name="rule_name_alias"><item>alias</item></list>
		<list name="rule_name_file"><item>file</item></list>
		<list name="rule_name_capability"><item>capability</item></list>
		<list name="rule_name_network"><item>network</item></list>
		<list name="rule_name_pivotroot"><item>pivot_root</item></list>
		<list name="rule_name_ptrace"><item>ptrace</item></list>
		<list name="rule_name_signal"><item>signal</item></list>
		<list name="rule_name_dbus"><item>dbus</item></list>
		<list name="rule_name_unix"><item>unix</item></list>
		<list name="rule_name_link"><item>link</item></list>
		<list name="rule_name_changeprofile"><item>change_profile</item></list>
		<list name="rule_name_rlimit"><item>rlimit</item></list>
		<list name="rule_name_set"><item>set</item></list>

		<!-- AppArmor 2.12.0: Keywords not currently supported: 
			 if, else, not, defined, other, rewrite, quiet, kill, nokill -->

		<contexts>
			
			<!-- Profile Content -->
			<context name="_profile" attribute="Normal Text" lineEndContext="#stay">

				<!-- Header -->
				<keyword context="_profile_name" attribute="Profile Head" String="profile_head"/>
				<RegExpr context="_profile_name" attribute="Profile Head" String="(^|\s)\^(?=\S)"/>
				<keyword context="#stay" attribute="Option" String="profile_options"/>
				
				<!-- Preamble -->
				<StringDetect context="_include" attribute="Preprocessor" String="#include" insensitive="true"/>
				<RegExpr context="_include" attribute="Preprocessor" String="(^|\s)include(?=\s)"/>
				<DetectChar context="_comment" attribute="Comment" char="#"/>
				
				<Detect2Chars context="_variable_assignment" attribute="Variable" char="@" char1="{" lookAhead="true" firstNonSpace="true"/>
				<Detect2Chars context="_variable" attribute="Variable" char="@" char1="{" lookAhead="true"/>
				<RegExpr context="_variable_assignment_operator" attribute="Variable" String="@&varname;(?=\s*(\+?\=|$))" insensitive="true" firstNonSpace="true"/>
				<Detect2Chars context="_boolean" attribute="Variable" char="$" char1="{" lookAhead="true"/>
				<RegExpr context="#stay" attribute="Variable" String="\$&varname;(?=\s*(\=|$))" insensitive="true" firstNonSpace="true"/>
				<keyword context="#stay" attribute="Other Option" String="boolean"/>

				<IncludeRules context="_brackets_error"/>
				<DetectChar context="#stay" attribute="Normal Text" char="{" beginRegion="Profile"/>
				<DetectChar context="#stay" attribute="Normal Text" char="}" endRegion="Profile"/>
				<DetectChar context="_parentheses_block_profile" attribute="Normal Text" char="("/>
				<DetectChar context="_r_square_brackets" attribute="Globbing Brackets" char="["/>

				<keyword context="#stay" attribute="Access Qualifier" String="access_types"/>
				<keyword context="#stay" attribute="Qualifier" String="qualifiers"/>
				<keyword context="#stay" attribute="File Qualifier" String="file_qualifiers"/>

				<!-- Rules -->
				<keyword context="_rule_file" attribute="Rule" String="rule_name_file" beginRegion="Rule"/>
				<keyword context="_rule_mount" attribute="Rule" String="rule_name_mount" beginRegion="Rule"/>
				<keyword context="_default_rule_with_comments" attribute="Rule" String="rule_name_alias" beginRegion="Rule"/>
				<keyword context="_rule_capability" attribute="Rule" String="rule_name_capability" beginRegion="Rule"/>
				<keyword context="_rule_network" attribute="Rule" String="rule_name_network" beginRegion="Rule"/>
				<keyword context="_rule_pivotroot" attribute="Rule" String="rule_name_pivotroot" beginRegion="Rule"/>
				<keyword context="_rule_ptrace" attribute="Rule" String="rule_name_ptrace" beginRegion="Rule"/>
				<keyword context="_rule_signal" attribute="Rule" String="rule_name_signal" beginRegion="Rule"/>
				<keyword context="_rule_dbus" attribute="Rule" String="rule_name_dbus" beginRegion="Rule"/>
				<keyword context="_rule_unix" attribute="Rule" String="rule_name_unix" beginRegion="Rule"/>
				<keyword context="_rule_link" attribute="Rule" String="rule_name_link" beginRegion="Rule"/>
				<keyword context="_rule_changeprofile" attribute="Rule" String="rule_name_changeprofile" beginRegion="Rule"/>
				<keyword context="_rule_rlimit" attribute="Rule Error" String="rule_name_rlimit" beginRegion="Rule"/> <!-- set rlimit -->
				<keyword context="_rule_set" attribute="Rule" String="rule_name_set"/>

				<IncludeRules context="_path"/>
				<IncludeRules context="_text_quoted"/>
				<IncludeRules context="_operators"/>
				<keyword context="#stay" attribute="Normal Text" String="default_variables"/>
				<IncludeRules context="_file_rule_permissions"/>
			</context>
			
			<context name="_common" attribute="Normal Text" lineEndContext="#stay">
				<StringDetect context="#stay" attribute="Error" String="#include" insensitive="true"/>
				<RegExpr context="#stay" attribute="Error" String="include(?=\s)" firstNonSpace="true"/>

				<Detect2Chars context="_variable" attribute="Variable" char="@" char1="{" lookAhead="true"/>
				<Detect2Chars context="_boolean" attribute="Variable" char="$" char1="{" lookAhead="true"/>
				<keyword context="#stay" attribute="Other Option" String="boolean"/>
				<IncludeRules context="_brackets_error"/>
			</context>
			<context name="_comment" attribute="Comment" lineEndContext="#pop">
				<LineContinue context="#pop" attribute="Comment"/>
				<DetectSpaces />
				<IncludeRules context="##Alerts"/>
				<IncludeRules context="##Modelines"/>
			</context>

			<!-- Profile Header:
			     Highlight the name of the profile.
			     The profile name label is optional. This is written after the hat character (^) or a profile keyword. -->
			<context name="_profile_name" attribute="Profile Name" lineEndContext="#stay" fallthrough="true" fallthroughContext="#pop">
				<DetectSpaces context="#stay" attribute="Normal Text"/>
				<!-- Not highlighting paths and paths quoted -->
				<RegExpr context="#pop" attribute="Normal Text" String="&quot;[^/&quot;]*/" lookAhead="true"/>
				<DetectChar context="#pop!_profile_name_quoted" attribute="Profile Name" char="&quot;"/>
				<!-- First word (the profile name) -->
				<RegExpr context="#pop!_profile_name_content" attribute="Normal Text" String="[^\s/\^\{]" lookAhead="true"/>
			</context>
			<context name="_profile_name_content" attribute="Profile Name" lineEndContext="#pop">
				<RegExpr context="#pop!_path_content" attribute="Path" String="[^\s\(]*/" lookAhead="true"/>
				<RegExpr context="#pop" attribute="Error" String="\(\S*"/>
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/> <!-- End of the profile name label -->
				
				<DetectChar context="#stay" attribute="Error" char="&quot;"/>
				<StringDetect context="#pop" attribute="Error" String="#include" insensitive="true"/>
				<IncludeRules context="_variable_simple"/>
				<IncludeRules context="_pcre_escape_str"/>
			</context>
			<context name="_profile_name_quoted" attribute="Profile Name" lineEndContext="#stay">
				<DetectChar context="#pop" attribute="Profile Name" char="&quot;"/>
				<IncludeRules context="_variable_simple"/>
				<IncludeRules context="_pcre_escape_str"/>
			</context>

			<!-- Include Rule: include <abstraction/path> -->
			<context name="_include" attribute="Preprocessor" lineEndContext="#pop">
				<RegExpr context="#pop!_include_preplib_t" attribute="Prep. Lib" String="&lt;(?![\s&lt;&gt;])"/> <!-- <magic/path> -->
				<RegExpr context="#pop!_include_preplib_q" attribute="Prep. Lib" String="&quot;(?!&quot;)"/> <!-- "/abs/path" -->
				<RegExpr context="#pop" attribute="Prep. Lib" String="/\S*(?=(\s|$))"/> <!-- /abs/path -->
				<RegExpr context="#stay" attribute="Error" String="[^\s/&lt;&quot;]+"/>
			</context>
			<context name="_include_preplib_t" attribute="Prep. Lib" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Prep. Lib" char="&gt;"/>
				<keyword context="#stay" attribute="Prep. Lib" String="default_abstractions"/>
				<RegExpr context="#pop" attribute="Open Prep. Lib" String="[^&lt;&gt;\s](?=($|\s))" insensitive="true"/>
				
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<RegExpr context="#pop" attribute="Error" String="&lt;"/>
			</context>
			<context name="_include_preplib_q" attribute="Prep. Lib" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Prep. Lib" char="&quot;"/>
				<keyword context="#stay" attribute="Prep. Lib" String="default_abstractions"/>
				<RegExpr context="#pop" attribute="Open Prep. Lib" String="[^&quot;\s](?=\s*$)" insensitive="true"/>
			</context>
			
			<!-- Variables: @{VAR} -->
			<context name="_variable" attribute="Variable" lineEndContext="#pop">
				<!-- Invalid character or open brackets -->
				<RegExpr context="#pop" attribute="Error" String="@(?=\{([^a-zA-Z]|&varname;[^\w\}]|[^\}]*$))" insensitive="true"/>
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<!-- Text after variable is highlighted as path -->
				<RegExpr context="#pop!_path_content" attribute="Variable" String="\}(?=[&pathchar;\[\{\(#])" insensitive="true"/>
				<DetectChar context="#pop" attribute="Variable" char="}"/>
			</context>
			<context name="_variable_simple" attribute="Normal Text" lineEndContext="#stay">
				<RegExpr context="#stay" attribute="Variable" String="@\{&varname;\}" insensitive="true"/>
			</context>
			<!-- @{VARIABLE} = A B C -->
			<context name="_variable_assignment" attribute="Variable" lineEndContext="#pop">
				<RegExpr context="#pop!_variable_assignment_operator" attribute="Variable" String="\}(?=\s*\+?\=)"/>
				<IncludeRules context="_variable"/>
			</context>
			<context name="_variable_assignment_operator" attribute="Operator 1" lineEndContext="#pop"> <!-- '=' or '+=' -->
				<!-- After the operator, highlighting as "Path" the entire line, from the first non-space character -->
				<RegExpr context="#pop!_variable_assignment_line" attribute="Operator 1" String="\=(\s*)"/>
			</context>
			<context name="_variable_assignment_line" attribute="Path" lineEndContext="#pop">
				<IncludeRules context="_path_globbing_chars"/>
				<IncludeRules context="_common"/>
				<IncludeRules context="_path"/>
				<IncludeRules context="_text_quoted"/>
				<IncludeRules context="_globbrackets_rule"/>
				<DetectChar context="_round_brackets" attribute="Globbing Brackets" char="("/>
				<Detect2Chars context="_subprofile" attribute="SubProfile Operator" char="/" char1="/"/>
				<RegExpr context="#stay" attribute="Error" String=",(?=(\s|$))"/> <!-- End of rule comma -->
				
				<!-- NOTE: [V4][Jan 06, 2018] AppArmor does not detect comments in variable assignment lines 
					 (these are carried through to the policy). This is an AppArmor bug, therefore, comments are 
					 highlighted, but only when these are written after a space. Check this when the bug has been fixed. -->
				<RegExpr context="_comment_variable_assignment_line" attribute="Path" String="\s(?=#)"/>
			</context>
			<context name="_comment_variable_assignment_line" attribute="Error" lineEndContext="#pop" fallthrough="true" fallthroughContext="#pop">
				<DetectChar context="#pop!_comment" attribute="Error" char="#"/>
			</context>
			<!-- ${BOOLEAN} -->
			<context name="_boolean" attribute="Variable" lineEndContext="#pop">
				<RegExpr context="#pop" attribute="Error" String="\$(?=\{([^a-zA-Z]|&varname;[^\w\}]|[^\}]*$))" insensitive="true"/>
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<DetectChar context="#pop" attribute="Variable" char="}"/>
			</context>
			
			<!-- Access Modes / File Permissions -->
			<context name="_permissions" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_permissions_correction"/>
				<RegExpr context="#stay" attribute="Permissions" String="(^|\s)([rwkml]|&exec;)+(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Permissions" String="(^|\s)([rakml]|&exec;)+(?=($|[\s,]))"/>
			</context>
			<context name="_file_rule_permissions" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_permissions_correction"/>
				<RegExpr context="_rule_file" attribute="Permissions" String="(^|\s)([rwkml]|&exec;)+(?=($|[\s,]))"/>
				<RegExpr context="_rule_file" attribute="Permissions" String="(^|\s)([rakml]|&exec;)+(?=($|[\s,]))"/>
			</context>
			<context name="_permissions_correction" attribute="Normal Text" lineEndContext="#stay">
				<!-- Incompatible execution modes -->
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*p[iUu]?x([rwakml]|p[iUu]?x)*([PcC]?[iUu]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*P[iUu]?x([rwakml]|P[iUu]?x)*([pcC]?[iUu]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*c[iUu]?x([rwakml]|c[iUu]?x)*([PpC]?[iUu]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*C[iUu]?x([rwakml]|C[iUu]?x)*([Ppc]?[iUu]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*[PpCc]?ix([rwakml]|[PpCc]?ix)*([PpCc]?[Uu]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*[PpCc]?ux([rwakml]|[PpCc]?ux)*([PpCc]?[iU]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*[PpCc]?Ux([rwakml]|[PpCc]?Ux)*([PpCc]?[iu]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*[iuU]?x([rwakml]|[iuU]?x)*([PpCc][iuU]?x)([rwakml]|&exec;)*(?=($|[\s,]))"/>
				<RegExpr context="#stay" attribute="Normal Text" String="(^|\s)[rwakml]*x[rwakmlx]*[iuU]x([rwakml]|&exec;)*(?=($|[\s,]))"/>
			</context>
			
			<!-- Operators -->
			<context name="_operators" attribute="Normal Text" lineEndContext="#stay">
				<Detect2Chars context="_subprofile" attribute="SubProfile Operator" char="/" char1="/"/>
				<DetectChar context="#stay" attribute="Operator 1" char="="/>
				<Detect2Chars context="#stay" attribute="Operator 1" char="+" char1="="/>
				<Detect2Chars context="#stay" attribute="Operator 2" char="-" char1="&gt;"/>
				<RegExpr context="#stay" attribute="Operator 2" String="(^|\s)(in|to)(?=($|\s))"/>
			</context>
			
			<!-- RULES -->

			<!-- For all rules -->
			<context name="_default_rule_without_parentheses" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_common"/>
				<!-- Highlight as path the text after the '=' operator, except keywords or simple words -->
				<RegExpr context="#stay" attribute="Error" String="\=(?=\s*$)"/>
				<RegExpr context="_path_content" attribute="Operator 1" String="\=\s*(?=[^\s\(]*[\.\*\?@\\/\[\{#&amp;&#037;&#036;&#033;&#126;])" insensitive="true"/>
				<IncludeRules context="_operators"/>
				<IncludeRules context="_path"/>
				<IncludeRules context="_text_quoted"/>
				<IncludeRules context="_globbrackets_rule"/>
				<IncludeRules context="_pcre_escape_str"/>
				<keyword context="#stay" attribute="Other Data" String="other_words" insensitive="true"/>

				<!-- AppArmor does not detect comments within rules (except in file & alias rules) -->
				<IncludeRules context="_rule_comment_not_allowed"/>
				<!-- This must be at the end of each context (to avoid conflicts with some keywords) -->
				<IncludeRules context="_end_rule"/>
			</context>
			<context name="_default_rule" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_default_rule_without_parentheses"/>
				<DetectChar context="_default_parentheses_block" attribute="Normal Text" char="("/>
			</context>
			<context name="_default_rule_with_comments" attribute="Normal Text" lineEndContext="#stay">
				<RegExpr context="_comment" attribute="Comment" String="#(?!include)" insensitive="true"/>
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_rule_comment_not_allowed" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar context="_comment" attribute="Error" char="#" firstNonSpace="true"/>
				<DetectChar context="#stay" attribute="Error" char="#"/>
			</context>

			<!-- Network Rule -->
			<context name="_rule_network" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Data" String="rule_network"/>
				<keyword context="#stay" attribute="Data" String="rule_network_unix"/>
				<IncludeRules context="_default_rule"/>
			</context>

			<!-- Capability Rule -->
			<context name="_rule_capability" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Data" String="rule_capability"/>
				<IncludeRules context="_default_rule"/>
			</context>

			<!-- Mount Rule -->
			<context name="_rule_mount" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Option" String="rule_mount_options"/>
				<IncludeRules context="_mount_rule_keywords"/>
				<IncludeRules context="_default_rule_without_parentheses"/>
				<DetectChar context="_mount_parentheses_block" attribute="Normal Text" char="("/>
			</context>
			<context name="_mount_parentheses_block" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_mount_rule_keywords"/>
				<IncludeRules context="_default_parentheses_block"/>
			</context>
			<context name="_mount_rule_keywords" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Permissions" String="rule_mount_flags"/>
				<keyword context="#stay" attribute="Flags" String="rule_mount_fstypes"/>
			</context>

			<!-- Pivot Root Rule -->
			<context name="_rule_pivotroot" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Option" String="rule_pivotroot_options"/>
				<IncludeRules context="_default_rule"/>
			</context>

			<!-- Ptrace Rule -->
			<context name="_rule_ptrace" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Option" String="rule_ptrace_options"/>
				<IncludeRules context="_ptrace_rule_keywords"/>
				<IncludeRules context="_default_rule_without_parentheses"/>
				<DetectChar context="_ptrace_parentheses_block" attribute="Normal Text" char="("/>
			</context>
			<context name="_ptrace_parentheses_block" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Other Option" String="rule_ptrace_options"/>
				<IncludeRules context="_ptrace_rule_keywords"/>
				<IncludeRules context="_default_parentheses_block"/>
			</context>
			<context name="_ptrace_rule_keywords" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Permissions" String="rule_ptrace_access"/>
				<keyword context="#stay" attribute="Permissions" String="base_accesses"/>
			</context>

			<!-- Signal Rule -->
			<context name="_rule_signal" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Option" String="rule_signal_options"/>
				<IncludeRules context="_signal_rule_keywords"/>
				<IncludeRules context="_default_rule_without_parentheses"/>
				<DetectChar context="_signal_parentheses_block" attribute="Normal Text" char="("/>
			</context>
			<context name="_signal_parentheses_block" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_signal_rule_keywords"/>
				<keyword context="#stay" attribute="Other Option" String="rule_signal_options"/>
				<IncludeRules context="_default_parentheses_block"/>
			</context>
			<context name="_signal_rule_keywords" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Flags" String="rule_signal"/>
				<keyword context="#stay" attribute="Permissions" String="rule_signal_access"/>
				<keyword context="#stay" attribute="Permissions" String="base_accesses"/>
				<RegExpr context="#stay" attribute="Flags" String="(\b)rtmin\+(0*)(([12]?\d)|30|31|32)\b"/>
			</context>
			
			<!-- DBus Rule -->
			<context name="_rule_dbus" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Option" String="rule_dbus_options"/>
				<IncludeRules context="_dbus_rule_keywords"/>
				<IncludeRules context="_default_rule_without_parentheses"/>
				<DetectChar context="_dbus_parentheses_block" attribute="Normal Text" char="("/>
			</context>
			<context name="_dbus_parentheses_block" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Other Option" String="rule_dbus_peer"/>
				<IncludeRules context="_dbus_rule_keywords"/>
				<IncludeRules context="_default_parentheses_block"/>
			</context>
			<context name="_dbus_rule_keywords" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Other Data" String="rule_dbus_bus"/>
				<keyword context="#stay" attribute="Permissions" String="rule_dbus_access"/>
				<keyword context="#stay" attribute="Permissions" String="base_accesses"/>
			</context>

			<!-- Unix Rule -->
			<context name="_rule_unix" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Option" String="rule_unix_options"/>
				<IncludeRules context="_unix_rule_keywords"/>		
				<DetectChar context="_path_content" attribute="Path" char="@" lookAhead="true"/> <!-- Socket -->
				<IncludeRules context="_default_rule_without_parentheses"/>
				<DetectChar context="_unix_parentheses_block" attribute="Normal Text" char="("/>
			</context>
			<context name="_unix_parentheses_block" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_unix_rule_keywords"/>
				<keyword context="#stay" attribute="Other Option" String="rule_unix_options"/>
				<DetectChar context="_parentheses_path_content" attribute="Path" char="@" lookAhead="true"/>
				<IncludeRules context="_default_parentheses_block"/>
			</context>
			<context name="_unix_rule_keywords" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Permissions" String="rule_unix_access"/>
				<keyword context="#stay" attribute="Permissions" String="base_accesses"/>
				<keyword context="#stay" attribute="Data" String="rule_network"/>
			</context>
			
			<!-- Rlimit Rule -->
			<context name="_rule_set" attribute="Normal Text" lineEndContext="#stay" fallthrough="true" fallthroughContext="#pop">
				<keyword context="#pop!_rule_rlimit" attribute="Rule" String="rule_name_rlimit" beginRegion="Rule"/>
				<DetectSpaces context="#stay" attribute="Normal Text"/>
				<RegExpr context="_comment" attribute="Comment" String="#(?!include)" insensitive="true"/>
			</context>
			<context name="_rule_rlimit" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Data" String="rule_rlimit"/>
				<Detect2Chars context="#stay" attribute="Operator 2" char="&lt;" char1="="/>
				<Float context="#stay" attribute="Number"/>
				<Int context="#stay" attribute="Number"/>
				<HlCOct context="#stay" attribute="Number"/>
        		<HlCHex context="#stay" attribute="Number"/>
				<RegExpr context="#stay" attribute="Number" String="[\-\+]\s*(?=[\d\.])"/>
				<RegExpr context="#stay" attribute="Flags" String="([KMG]B?|[shd]|us|ms|min|sec|(minute|day|hour|week|second)(s?)|(milli|micro)second(s?))\b"/>
				<WordDetect context="#stay" attribute="Other Data" String="infinity"/>
				<IncludeRules context="_default_rule"/>
			</context>

			<!-- Link Rule -->
			<context name="_rule_link" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Data" String="rule_link"/>
				<IncludeRules context="_default_rule"/>
			</context>

			<!-- Change Profile Rule -->
			<context name="_rule_changeprofile" attribute="Normal Text" lineEndContext="#stay">
				<Detect2Chars context="#pop!_profile_transition" attribute="Operator 2" char="-" char1="&gt;"/>
				<keyword context="#stay" attribute="Data" String="rule_changeprofile"/>
				<IncludeRules context="_default_rule"/>
			</context>

			<!-- File Rule -->
			<context name="_rule_file" attribute="Normal Text" lineEndContext="#stay">
				<Detect2Chars context="#pop!_profile_transition" attribute="Operator 2" char="-" char1="&gt;"/>
				<IncludeRules context="_default_rule_with_comments"/>
				<IncludeRules context="_permissions"/>
			</context>
			
			<!-- Profile Transition: 
			     Highlight the profile name in File Rule (Execute Mode) and Change Profile Rule. -->
			<context name="_profile_transition" attribute="Transition Profile Name" lineEndContext="#stay" fallthrough="true" fallthroughContext="#pop">
				<DetectSpaces context="#stay" attribute="Normal Text"/>
				<!-- Not highlighting paths and paths quoted -->
				<!--
					AK: this rule has been disabled because it freezes Python reg exp engine.
					See #79
					<RegExpr context="#pop!_default_rule_with_comments" attribute="Path" String="([^\s/\[\(]*|\[[^\s\]]*\])*/($|[^/])" lookAhead="true"/>
				-->
				<RegExpr context="#pop!_default_rule_with_comments" attribute="Normal Text" String="&quot;([^/\[]*|\[[^\s\]]*\])*/($|[^/])" lookAhead="true"/>
				
				<DetectChar context="#pop!_t_profile_name_quoted" attribute="Transition Profile Name" char="&quot;"/>
				<RegExpr context="#pop!_profile_transition_content" attribute="Normal Text" String="[^\s/]" lookAhead="true"/> <!-- First word -->
			</context>
			<context name="_profile_transition_content" attribute="Transition Profile Name" lineEndContext="#pop!_default_rule_with_comments">
				<RegExpr context="#pop!_default_rule_with_comments" attribute="Error" String="\(\S*(?=,([&nopathchar;]|$))"/>
				<RegExpr context="#pop!_default_rule_with_comments" attribute="Normal Text" String=",($|\s)" lookAhead="true"/> <!-- End rule -->
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/> <!-- End of the profile name -->

				<DetectChar context="#stay" attribute="Error" char="&quot;"/>
				<StringDetect context="#pop!_default_rule_with_comments" attribute="Error" String="#include" insensitive="true"/>
				<IncludeRules context="_default_profile_transition"/>
			</context>
			<context name="_t_profile_name_quoted" attribute="Transition Profile Name" lineEndContext="#pop!_default_rule_with_comments">				
				<DetectChar context="#pop!_default_rule_with_comments" attribute="Transition Profile Name" char="&quot;"/>
				<IncludeRules context="_default_profile_transition"/>
			</context>
			<context name="_default_profile_transition" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_variable_simple"/>
				<AnyChar context="#stay" attribute="Globbing Char 3" String="*?"/>
				<RegExpr context="#stay" attribute="Globbing Char 3" String="\\[\s\{\}\[\]\(\)\|\*\?\-\^,]"/>
				<HlCStringChar context="#stay" attribute="Globbing Char 3"/>
			</context>

			<!-- //SubProfile -->
			<context name="_subprofile" attribute="SubProfile" lineEndContext="#pop">
				<RegExpr context="#pop" attribute="SubProfile" String="([&nopathchar;/\{\}\(]|,[&nopathchar;/\{\}\(#]|,$|$)" lookAhead="true"/>
				<IncludeRules context="_variable_simple"/>
				<IncludeRules context="_path_globbing_chars"/>
			</context>

			<!-- Parentheses Block: ( ) -->
			<context name="_parentheses_block" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar context="#pop" attribute="Normal Text" char=")"/>
				<!-- Highlight as path the text after the '=' operator, except keywords or simple words -->
				<RegExpr context="#stay" attribute="Error" String="\=(?=\s*$)"/>
				<RegExpr context="_parentheses_path_content" attribute="Operator 1" String="\=\s*(?=[^\s\(\),]*[\.\*\?@\\/\[\{#&amp;&#037;&#036;&#033;&#126;])" insensitive="true"/>

				<IncludeRules context="_operators"/>
				<IncludeRules context="_text_quoted"/>
				<keyword context="#stay" attribute="Other Data" String="other_words" insensitive="true"/>
				
				<RegExpr context="_parentheses_path_content" attribute="Path" String="/(?=[^&nopathchar;/,])" insensitive="true"/> <!-- /my/path -->
				<RegExpr context="_parentheses_path_content" attribute="Path" String="[&pathchar;]+\.[^&nopathchar;\.,]" lookAhead="true" insensitive="true"/> <!-- my.path -->
				<IncludeRules context="_path_simple"/>
				
				<IncludeRules context="_common"/>
				<IncludeRules context="_globbrackets_rule"/>
				<DetectChar context="_round_brackets" attribute="Globbing Brackets" char="("/>
				<IncludeRules context="_rule_comment_not_allowed"/>
				<IncludeRules context="_pcre_escape_str"/>
			</context>
			<context name="_parentheses_path_content" attribute="Path" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Normal Text" char="," lookAhead="true"/>
				<Detect2Chars context="_parentheses_subprofile" attribute="SubProfile Operator" char="/" char1="/"/>
				<IncludeRules context="_path_content"/> <!-- End with &nopathchar; -->
			</context>
			<context name="_parentheses_subprofile" attribute="SubProfile" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Normal Text" char="," lookAhead="true"/>
				<IncludeRules context="_subprofile"/> <!-- End with &nopathchar; -->
			</context>
			
			<context name="_parentheses_block_profile" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Flags" String="profile_flags"/>
				<IncludeRules context="_default_parentheses_block"/>
			</context>
			<context name="_default_parentheses_block" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_parentheses_block"/>
				<IncludeRules context="_end_rule_irnc"/>
			</context>
			
			<!-- Finding the end of a rule -->
			<context name="_end_rule" attribute="Normal Text" lineEndContext="#stay">
				<RegExpr context="#pop" attribute="End of Rule Char" String=",(?=(profile|hat|allow|deny|audit|owner|file|alias|set|capability|network|(u|re)?mount|pivot_root|ptrace|unix|signal|dbus|link|change_profile)\b)" endRegion="Rule"/>
				<RegExpr context="#stay" attribute="Normal Text" String=",(?=[\w\*\?\[\{])"/>
				<DetectChar  context="#pop" attribute="End of Rule Char" char="," endRegion="Rule"/>
				<IncludeRules context="_end_rule_irnc"/>
			</context>
			<!-- Rule/Profile on new line, in rule not closed -->
			<context name="_end_rule_irnc" attribute="Normal Text" lineEndContext="#stay">
				<keyword String="profile_head" context="#pop#pop!_profile_name" attribute="Profile Head Error" firstNonSpace="true" endRegion="Rule"/>
				<DetectChar char="&#094;"      context="#pop#pop!_profile_name" attribute="Profile Head Error" firstNonSpace="true" endRegion="Rule"/>
				<keyword String="access_types"          context="#pop#pop" attribute="Access Qualifier Error"  firstNonSpace="true" endRegion="Rule"/>
				<keyword String="qualifiers"            context="#pop#pop" attribute="Qualifier Error"         firstNonSpace="true" endRegion="Rule"/>
				<keyword String="file_qualifiers"       context="#pop#pop" attribute="File Qualifier Error"    firstNonSpace="true" endRegion="Rule"/>
				<RegExpr String="set(?=\s+rlimit\b)"    context="#pop#pop" attribute="Rule Error"              firstNonSpace="true" endRegion="Rule"/>

				<keyword String="rule_name_file"          context="#pop#pop!_rule_file"          attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_alias" context="#pop#pop!_default_rule_with_comments" attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_capability"    context="#pop#pop!_rule_capability"    attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_network"       context="#pop#pop!_rule_network"       attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_pivotroot"     context="#pop#pop!_rule_pivotroot"     attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_ptrace"        context="#pop#pop!_rule_ptrace"        attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_signal"        context="#pop#pop!_rule_signal"        attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_dbus"          context="#pop#pop!_rule_dbus"          attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_link"          context="#pop#pop!_rule_link"          attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_changeprofile" context="#pop#pop!_rule_changeprofile" attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_rlimit"        context="#pop#pop!_rule_rlimit"        attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<!-- This must be at the end of each rule context, to avoid replacing the 'unix' & 'remount' keywords 
					 ('unix' is also a domain of the network rule; 'remount' is also a flag of the mount rule). -->
				<keyword String="rule_name_mount" context="#pop#pop!_rule_mount" attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
				<keyword String="rule_name_unix"  context="#pop#pop!_rule_unix"  attribute="Rule Error" firstNonSpace="true" endRegion="Rule" beginRegion="Rule"/>
			</context>

			<!-- Paths & File Globals -->

			<context name="_path" attribute="Normal Text" lineEndContext="#stay">
				<RegExpr context="_path_content" attribute="Path" String="/(?=[^&nopathchar;/])" insensitive="true"/> <!-- /my/path -->
				<RegExpr context="_path_content" attribute="Path" String="[&pathchar;]+\.[^&nopathchar;\.]" lookAhead="true" insensitive="true"/> <!-- my.path -->
				<IncludeRules context="_path_simple"/>
			</context>
			<context name="_path_content" attribute="Path" lineEndContext="#pop">
				<RegExpr context="#pop" attribute="Path" String="([&nopathchar;]|,\s|,$)" lookAhead="true" insensitive="true"/>
				<Detect2Chars context="_subprofile" attribute="SubProfile Operator" char="/" char1="/"/>
				<IncludeRules context="_variable_simple"/>
				<IncludeRules context="_path_globbing"/>
			</context>
			<context name="_path_simple" attribute="Normal Text" lineEndContext="#stay">
				<RegExpr context="#stay" attribute="Path" String="/(?=([&nopathchar;]|,\s|,$|$))"/> <!-- / -->
			</context>

			<!-- Globbing -->
			<context name="_path_globbing" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_brackets_error"/>
				<DetectChar context="_curly_brackets" attribute="Globbing Brackets" char="{"/>
				<DetectChar context="_square_brackets" attribute="Globbing Brackets" char="["/>
				<DetectChar context="_round_brackets" attribute="Globbing Brackets" char="("/>
				<IncludeRules context="_path_globbing_chars"/>
			</context>
			<context name="_path_globbing_chars" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_globbing_chars"/>
				<IncludeRules context="_pcre_escape_str"/>
			</context>
			<context name="_globbing_chars" attribute="Normal Text" lineEndContext="#stay">
				<AnyChar context="#stay" attribute="Globbing Char 1" String="*?"/>
			</context>
			<context name="_pcre_escape_str" attribute="Normal Text" lineEndContext="#stay">
				<RegExpr context="#stay" attribute="Escape Expression" String="\\[\s\{\}\[\]\(\)\|\*\?\-\^,]"/>
				<HlCStringChar context="#stay" attribute="Escape Expression"/>
			</context>
			
			<!-- Groups of brackets: { }, [ ] and ( ) -->
			<context name="_curly_brackets" attribute="Globbing Brackets" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Globbing Brackets" char="}"/>
				<IncludeRules context="_pcre_escape_str"/>
				<RegExpr context="#pop" attribute="Path" String="[&nopathchar;]" lookAhead="true" insensitive="true"/>

				<IncludeRules context="_variable_simple"/>
				<IncludeRules context="_brackets_error"/>
				<DetectChar context="_curly_brackets" attribute="Globbing Brackets" char="{"/>
				<DetectChar context="_square_brackets" attribute="Globbing Brackets" char="["/>
				<DetectChar context="_round_brackets" attribute="Globbing Brackets" char="("/>
				<RegExpr context="#stay" attribute="Open Globbing Brackets" String="[^\s\[\]\{\}\(\)](?=([&nopathchar;]|$))"/>
				
				<IncludeRules context="_globbing_chars"/>
				<DetectChar context="#stay" attribute="Globbing Char 2" char=","/>
				<keyword context="#stay" attribute="Globbing Brackets" String="default_variables"/>
			</context>
			<context name="_square_brackets" attribute="Globbing Brackets" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Globbing Brackets" char="]"/>
				<IncludeRules context="_pcre_escape_str"/>
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<DetectChar context="#pop" attribute="Path" char="&quot;" lookAhead="true"/>

				<IncludeRules context="_variable_simple"/>
				<DetectChar context="#stay" attribute="Error" char="["/>
				<RegExpr context="#stay" attribute="Open Globbing Brackets" String="\S(?=([\s&quot;]|$))"/>

				<IncludeRules context="_globbing_chars"/>
				<AnyChar context="#stay" attribute="Globbing Char 2" String="^-"/>
			</context>
			<context name="_round_brackets" attribute="Globbing Brackets" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Globbing Brackets" char=")"/>
				<IncludeRules context="_pcre_escape_str"/>
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<DetectChar context="#pop" attribute="Path" char="&quot;" lookAhead="true"/>

				<IncludeRules context="_variable_simple"/>
				<IncludeRules context="_brackets_error"/>
				<DetectChar context="_curly_brackets" attribute="Globbing Brackets" char="{"/>
				<DetectChar context="_square_brackets" attribute="Globbing Brackets" char="["/>
				<DetectChar context="_round_brackets" attribute="Globbing Brackets" char="("/>
				<RegExpr context="#stay" attribute="Open Globbing Brackets" String="[^\s\[\]\{\}\(\)](?=([\s&quot;]|$))"/>

				<IncludeRules context="_globbing_chars"/>
				<DetectChar context="#stay" attribute="Globbing Char 2" char="|"/>
			</context>
			<context name="_brackets_error" attribute="Normal Text" lineEndContext="#stay">
				<StringDetect context="#stay" attribute="Error" String="[]"/>
				<StringDetect context="#stay" attribute="Error" String="{}"/>
				<StringDetect context="#stay" attribute="Error" String="()"/>
			</context>

			<!-- If the brackets are outside a path -->
			<context name="_globbrackets_rule" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar context="_r_curly_brackets" attribute="Globbing Brackets" char="{"/>
				<DetectChar context="_r_square_brackets" attribute="Globbing Brackets" char="["/>
			</context>
			<context name="_r_curly_brackets" attribute="Globbing Brackets" lineEndContext="#pop">
				<RegExpr context="#pop!_path_content" attribute="Globbing Brackets" String="\}(?=[&pathchar;\[\{\(#])" insensitive="true"/>
				<IncludeRules context="_curly_brackets"/>
			</context>
			<context name="_r_square_brackets" attribute="Globbing Brackets" lineEndContext="#pop">
				<RegExpr context="#pop!_path_content" attribute="Globbing Brackets" String="\](?=[&pathchar;\[\{\(#])" insensitive="true"/>
				<IncludeRules context="_square_brackets"/>
			</context>
			
			<!-- Path Quoted -->
			<context name="_text_quoted" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar context="_quoted" attribute="Text Quoted" char="&quot;"/>
			</context>
			<context name="_quoted" attribute="Text Quoted" lineEndContext="#stay">
				<DetectChar context="#pop" attribute="Text Quoted" char="&quot;"/>
				<IncludeRules context="_variable_simple"/>
				<IncludeRules context="_path_globbing"/>
			</context>
			
		</contexts>
		
		<itemDatas>
			<itemData name="Normal Text"    defStyleNum="dsNormal"       spellChecking="false"/>
			<itemData name="Path"           defStyleNum="dsNormal"       bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Text Quoted"    defStyleNum="dsString"       bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Comment"        defStyleNum="dsComment"/>
			<itemData name="Preprocessor"   defStyleNum="dsPreprocessor" spellChecking="false"/>
			<itemData name="Prep. Lib"      defStyleNum="dsImport"       underline="0" spellChecking="false"/>
			<itemData name="Open Prep. Lib" defStyleNum="dsImport"       underline="1" spellChecking="false"/>
			<itemData name="Variable"       defStyleNum="dsDecVal"       bold="0" italic="0" underline="0" spellChecking="false"/>
			
			<itemData name="Profile Head"            defStyleNum="dsFunction"  bold="1" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Profile Name"            defStyleNum="dsFunction"  bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Transition Profile Name" defStyleNum="dsFunction"  bold="0" italic="1" underline="0" spellChecking="false"/>
			<itemData name="Qualifier"               defStyleNum="dsNormal"    bold="1" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Access Qualifier"        defStyleNum="dsWarning"   bold="1" italic="0" underline="0" spellChecking="false"/>
			<itemData name="File Qualifier"          defStyleNum="dsVariable"  bold="1" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Rule"                    defStyleNum="dsVariable"  bold="1" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Data"                    defStyleNum="dsVariable"  bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Other Data"              defStyleNum="dsNormal"    bold="0" italic="1" underline="0" spellChecking="false"/>
			<itemData name="Permissions"             defStyleNum="dsKeyword"   bold="1" italic="0" underline="0" spellChecking="false"/>
			
			<itemData name="Option"              defStyleNum="dsOthers"     bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Other Option"        defStyleNum="dsDataType"   bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Flags"               defStyleNum="dsVerbatimString"      italic="0" underline="0" spellChecking="false"/>
			<itemData name="SubProfile"          defStyleNum="dsAnnotation" bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="SubProfile Operator" defStyleNum="dsAnnotation" bold="1" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Operator 1"          defStyleNum="dsOperator"   spellChecking="false"/>
			<itemData name="Operator 2"          defStyleNum="dsWarning"    bold="1" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Number"              defStyleNum="dsDecVal"     spellChecking="false"/>
			<itemData name="End of Rule Char"    defStyleNum="dsNormal"     spellChecking="false"/>

			<itemData name="Escape Expression"      defStyleNum="dsSpecialChar"   bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Globbing Char 1"        defStyleNum="dsSpecialChar"   bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Globbing Char 2"        defStyleNum="dsAnnotation"    bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Globbing Char 3"        defStyleNum="dsSpecialString" bold="0" italic="1" underline="0" spellChecking="false"/>
			<itemData name="Globbing Brackets"      defStyleNum="dsSpecialString" bold="0" italic="0" underline="0" spellChecking="false"/>
			<itemData name="Open Globbing Brackets" defStyleNum="dsSpecialString" bold="0" italic="0" underline="1" spellChecking="false"/>
			
			<itemData name="Rule Error"             defStyleNum="dsVariable" bold="1" italic="0" underline="1" spellChecking="false"/>
			<itemData name="Qualifier Error"        defStyleNum="dsNormal"   bold="1" italic="0" underline="1" spellChecking="false"/>
			<itemData name="Access Qualifier Error" defStyleNum="dsWarning"  bold="1" italic="0" underline="1" spellChecking="false"/>
			<itemData name="File Qualifier Error"   defStyleNum="dsVariable" bold="1" italic="0" underline="1" spellChecking="false"/>
			<itemData name="Profile Head Error"     defStyleNum="dsFunction" bold="1" italic="0" underline="1" spellChecking="false"/>
			<itemData name="Error"                  defStyleNum="dsError"    spellChecking="false"/>
		</itemDatas>

	</highlighting>

	<general>
		<!-- Keyword delimiters: .()<>=/\[]{},"'^;:| -->
		<keywords casesensitive="true" additionalDeliminator="&quot;&#039;" weakDeliminator="!+-%*?~&amp;"/>
		
		<comments>
			<comment name="singleLine" start="#"/>
		</comments>
	</general>

</language>
