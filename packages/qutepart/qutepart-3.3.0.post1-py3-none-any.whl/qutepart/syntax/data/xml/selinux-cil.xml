<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE language SYSTEM "language.dtd"
[
	<!ENTITY symbol         "\w\[\]\.@\=/\*\-&#036;&#037;\+&#033;\|&amp;\^&#058;&#126;&#096;#\{\}&#039;&lt;&gt;\?,\\"> <!-- [].@=/*-_$%+!|&^:~`#{}'<>?,\ -->
	<!ENTITY identifier     "[a-zA-Z][\w\-]*">
	<!ENTITY statementchar  "[a-z_\-]">	
]>

<!--
  SELinux CIL (Common Interface Language) Policy Syntax Highlighting Definition
  for the KDE's KSyntaxHighlighting Framework.
  ==========================================================================================
   NOTE: Part of this file (the highlighting of brackets) is based on the Scheme XML file, 
   created by Dominik Haumann (dhaumann@kde.org) & licensed under MIT; 
   which is part of the KDE's KSyntaxHighlighting Framework.
   
   Copyright (c) 2018 Nibaldo González S. (nibgonz@gmail.com)
  
   Permission is hereby granted, free of charge, to any person obtaining a copy of this
   software and associated documentation files (the "Software"), to deal in the Software
   without restriction, including without limitation the rights to use, copy, modify, merge,
   publish, distribute, sublicense, and/or sell copies of the Software, and to permit
   persons to whom the Software is furnished to do so, subject to the following conditions:
  
   The above copyright notice and this permission notice shall be included
   in all copies or substantial portions of the Software.
  
   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
   INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A
   PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
   COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN
   AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION
   WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  ==========================================================================================
  
  Change log:
  	* Version 1 [26-Jan-2018, by Nibaldo González]:
		- Initial version.
-->

<language name="SELinux CIL Policy"
		version="1"
		kateversion="5.0"
		section="Sources"
		extensions="*.cil"
		priority="9"
		mimetype=""
		author="Nibaldo González (nibgonz@gmail.com)"
		license="MIT">

	<highlighting>

		<list name="expr_keys">
			<item>and</item>
			<item>or</item>
			<item>xor</item>
			<item>not</item>
			<item>all</item>
			<item>eq</item>
			<item>ne</item>
			<item>neq</item>
			<item>dom</item>
			<item>domby</item>
			<item>incomp</item>
			<item>range</item>
		</list>

		<!-- Access Vector Rules -->
		<list name="access">
			<item>allow</item>
			<item>auditallow</item>
			<item>dontaudit</item>
			<item>neverallow</item>
			<item>auditdeny</item>
			<item>allowx</item>
			<item>auditallowx</item>
			<item>dontauditx</item>
			<item>neverallowx</item>
		</list>

		<list name="booleans">
			<item>true</item>
			<item>false</item>
		</list>

		<list name="file_types">
			<item>file</item>
			<item>dir</item>
			<item>char</item>
			<item>block</item>
			<item>socket</item>
			<item>pipe</item>
			<item>symlink</item>
			<item>any</item>
		</list>
		<list name="fs_types">
			<item>task</item>
			<item>trans</item>
			<item>xattr</item>
		</list>
		<list name="protocols">
			<item>tcp</item>
			<item>udp</item>
			<item>dccp</item>
		</list>
		
		<list name="special_keys">
			<item>self</item>
		</list>
		<list name="classorder_keys">
			<item>unordered</item>
		</list>
		<list name="handleunknown_keys">
			<item>allow</item>
			<item>deny</item>
			<item>reject</item>
		</list>

		<list name="type_statements">
			<item>block</item>
			<item>optional</item>
			<item>common</item>
			<item>class</item>
			<item>classmap</item>
			<item>classmapping</item>
			<item>sid</item>
			<item>user</item>
			<item>role</item>
			<item>roleattribute</item>
			<item>type</item>
			<item>classpermission</item>
			<item>typeattribute</item>
			<item>typealias</item>
			<item>tunable</item>
			<item>sensitivity</item>
			<item>sensitivityalias</item>
			<item>category</item>
			<item>categoryalias</item>
			<item>categoryset</item>
			<item>level</item>
			<item>levelrange</item>
			<item>context</item>
			<item>ipaddr</item>
			<item>macro</item>
			<item>boolean</item>
			<!-- policycap, classpermissionset -->
		</list>
		<list name="policy_config_statements">
			<item>policycap</item>
			<item>mls</item>
			<item>handleunknown</item>
		</list>
		<list name="statements">
			<!-- Container Statements.
				 Also: block, optional, macro -->
			<item>blockabstract</item>
			<item>blockinherit</item>
			<item>in</item>
			<item>call</item>

			<!-- Default Object Statements -->
			<item>defaultuser</item>
			<item>defaultrole</item>
			<item>defaulttype</item>
			<item>defaultrange</item>

			<!-- User Statements.
				 Also: user -->
			<item>userrole</item>
			<item>userattribute</item>
			<item>userattributeset</item>
			<item>userlevel</item>
			<item>userrange</item>
			<item>userbounds</item>
			<item>userprefix</item>
			<item>selinuxuser</item>
			<item>selinuxuserdefault</item>

			<!-- Role Statements.
				 Also: role, roleattribute -->
			<item>roletype</item>
			<item>roleattributeset</item>
			<item>roleallow</item>
			<item>roletransition</item>
			<item>rolebounds</item>

			<!-- Type Statements.
				 Also: type, typeattribute, typealias -->
			<item>typealiasactual</item>
			<item>typeattributeset</item>
			<item>typebounds</item>
			<item>typechange</item>
			<item>typemember</item>
			<item>typetransition</item>
			<item>typepermissive</item>
			<item>attributetype</item>

			<item>expandtypeattribute</item>
			<item>nametypetransition</item>

			<!-- Class and Permission Statements.
				 Also: common, class, classmap, classmapping, classpermission -->
			<item>classcommon</item>
			<item>classorder</item>
			<item>permission</item>
			<item>permissionset</item>
			<item>classpermissionset</item>
			<item>permissionx</item>

			<!-- Conditional Statements.
				 Also: tunable, boolean -->
			<item>booleanif</item>
			<item>tunableif</item>

			<!-- Constraint Statements -->
			<item>constrain</item>
			<item>validatetrans</item>
			<item>mlsconstrain</item>
			<item>mlsvalidatetrans</item>

			<!-- Multi-Level Security Labeling Statements.
				 Also: sensitivity, sensitivityalias, category, categoryalias, categoryset, level, levelrange -->
			<item>sensitivityaliasactual</item>
			<item>sensitivityorder</item>
			<item>categoryaliasactual</item>
			<item>categoryorder</item>
			<item>sensitivitycategory</item>
			<item>rangetransition</item>
			<item>categoryrange</item>

			<!-- Context Statement: context -->
			<!-- SID Statements.
				 Also: sid -->
			<item>sidorder</item>
			<item>sidcontext</item>

			<!-- File Labeling Statements -->
			<item>filecon</item>
			<item>fsuse</item>
			<item>genfscon</item>
			<item>fscon</item>
			<item>fsusexattr</item>
			<item>fsusetask</item>
			<item>fsusetrans</item>

			<!-- Network Labeling Statements.
				 Also: ipaddr -->
			<item>netifcon</item>
			<item>nodecon</item>
			<item>portcon</item>
			<!-- ipv4_addr, ipv6_addr -->

			<!-- Xen Statements -->
			<item>iomemcon</item>
			<item>ioportcon</item>
			<item>pcidevicecon</item>
			<item>pirqcon</item>
			<item>devicetreecon</item>

			<!-- Infiniband Statements -->
			<item>ibpkeycon</item>
			<item>ibendportcon</item>

			<!-- Others -->
			<item>dominance</item>
			<item>allowxperm</item>
			<item>auditallowxperm</item>
			<item>dontauditxperm</item>
			<item>neverallowxperm</item>
		</list>

		<list name="type_name">
			<item>string</item>
			<item>name</item>
			<item>ioctl</item>
		</list>

		<list name="other_keywords">
			<item>source</item>
			<item>target</item>
			<item>low</item>
			<item>high</item>
			<item>low-high</item>

			<item>perm</item>
			<item>object_r</item>
			<item>t1</item>
			<item>t2</item>
			<item>t3</item>
			<item>r1</item>
			<item>r2</item>
			<item>r3</item>
			<item>u1</item>
			<item>u2</item>
			<item>u3</item>
			<item>l1</item>
			<item>l2</item>
			<item>h1</item>
			<item>h2</item>
		</list>
		
		<!-- Access Vectors Permissions -->
		<list name="av_permissions">
			<item>accept</item>
			<item>acceptfrom</item>
			<item>access</item>
			<item>acquire_svc</item>
			<item>add</item>
			<item>add_child</item>
			<item>add_color</item>
			<item>add_glyph</item>
			<item>add_name</item>
			<item>admin</item>
			<item>append</item>
			<item>associate</item>
			<item>attach_queue</item>
			<item>audit_access</item>
			<item>audit_control</item>
			<item>audit_read</item>
			<item>audit_write</item>
			<item>bell</item>
			<item>bind</item>
			<item>blend</item>
			<item>block_suspend</item>
			<item>call</item>
			<item>check_context</item>
			<item>chfn</item>
			<item>chown</item>
			<item>chsh</item>
			<item>compute_av</item>
			<item>compute_create</item>
			<item>compute_member</item>
			<item>compute_relabel</item>
			<item>compute_user</item>
			<item>connect</item>
			<item>connectto</item>
			<item>contains</item>
			<item>copy</item>
			<item>create</item>
			<item>create_files_as</item>
			<item>crontab</item>
			<item>dac_override</item>
			<item>dac_read_search</item>
			<item>dccp_recv</item>
			<item>dccp_send</item>
			<item>debug</item>
			<item>delete</item>
			<item>destroy</item>
			<item>disable</item>
			<item>drop</item>
			<item>dyntransition</item>
			<item>egress</item>
			<item>enable</item>
			<item>enforce_dest</item>
			<item>enqueue</item>
			<item>entrypoint</item>
			<item>execheap</item>
			<item>execmem</item>
			<item>execmod</item>
			<item>execstack</item>
			<item>execute</item>
			<item>execute_no_trans</item>
			<item>expand</item>
			<item>export</item>
			<item>flow_in</item>
			<item>flow_out</item>
			<item>force_cursor</item>
			<item>fork</item>
			<item>forward_in</item>
			<item>forward_out</item>
			<item>fowner</item>
			<item>freeze</item>
			<item>fsetid</item>
			<item>get_param</item>
			<item>get_property</item>
			<item>get_value</item>
			<item>getattr</item>
			<item>getcap</item>
			<item>getfocus</item>
			<item>getgrp</item>
			<item>gethost</item>
			<item>getopt</item>
			<item>getpgid</item>
			<item>getpwd</item>
			<item>getrlimit</item>
			<item>getsched</item>
			<item>getserv</item>
			<item>getsession</item>
			<item>getstat</item>
			<item>grab</item>
			<item>halt</item>
			<item>hide</item>
			<item>hide_cursor</item>
			<item>impersonate</item>
			<item>implement</item>
			<item>import</item>
			<item>ingress</item>
			<item>insert</item>
			<item>install</item>
			<item>install_module</item>
			<item>ioctl</item>
			<item>ipc_info</item>
			<item>ipc_lock</item>
			<item>ipc_owner</item>
			<item>kill</item>
			<item>lease</item>
			<item>link</item>
			<item>linux_immutable</item>
			<item>list_child</item>
			<item>list_property</item>
			<item>listen</item>
			<item>load_module</item>
			<item>load_policy</item>
			<item>lock</item>
			<item>mac_admin</item>
			<item>mac_override</item>
			<item>manage</item>
			<item>manage_subnet</item>
			<item>map</item>
			<item>mknod</item>
			<item>mmap_zero</item>
			<item>module_load</item>
			<item>module_request</item>
			<item>mount</item>
			<item>mounton</item>
			<item>name_bind</item>
			<item>name_connect</item>
			<item>net_admin</item>
			<item>net_bind_service</item>
			<item>net_broadcast</item>
			<item>net_raw</item>
			<item>newconn</item>
			<item>next_value</item>
			<item>nlmsg_read</item>
			<item>nlmsg_readpriv</item>
			<item>nlmsg_relay</item>
			<item>nlmsg_tty_audit</item>
			<item>nlmsg_write</item>
			<item>nnp_transition</item>
			<item>noatsecure</item>
			<item>node_bind</item>
			<item>nosuid_transition</item>
			<item>open</item>
			<item>override</item>
			<item>passwd</item>
			<item>paste</item>
			<item>paste_after_confirm</item>
			<item>polmatch</item>
			<item>ptrace</item>
			<item>query</item>
			<item>quotaget</item>
			<item>quotamod</item>
			<item>quotaon</item>
			<item>rawip_recv</item>
			<item>rawip_send</item>
			<item>read</item>
			<item>read_policy</item>
			<item>reboot</item>
			<item>receive</item>
			<item>record</item>
			<item>recv</item>
			<item>recv_msg</item>
			<item>recvfrom</item>
			<item>relabelfrom</item>
			<item>relabelto</item>
			<item>reload</item>
			<item>remount</item>
			<item>remove</item>
			<item>remove_child</item>
			<item>remove_color</item>
			<item>remove_glyph</item>
			<item>remove_name</item>
			<item>rename</item>
			<item>reparent</item>
			<item>rlimitinh</item>
			<item>rmdir</item>
			<item>rootok</item>
			<item>saver_getattr</item>
			<item>saver_hide</item>
			<item>saver_setattr</item>
			<item>saver_show</item>
			<item>search</item>
			<item>select</item>
			<item>send</item>
			<item>send_msg</item>
			<item>sendto</item>
			<item>set_context_mgr</item>
			<item>set_param</item>
			<item>set_property</item>
			<item>set_value</item>
			<item>setattr</item>
			<item>setbool</item>
			<item>setcap</item>
			<item>setcheckreqprot</item>
			<item>setcontext</item>
			<item>setcurrent</item>
			<item>setenforce</item>
			<item>setexec</item>
			<item>setfcap</item>
			<item>setfocus</item>
			<item>setfscreate</item>
			<item>setgid</item>
			<item>setkeycreate</item>
			<item>setopt</item>
			<item>setpcap</item>
			<item>setpgid</item>
			<item>setrlimit</item>
			<item>setsched</item>
			<item>setsecparam</item>
			<item>setsockcreate</item>
			<item>setuid</item>
			<item>share</item>
			<item>shmemgrp</item>
			<item>shmemhost</item>
			<item>shmempwd</item>
			<item>shmemserv</item>
			<item>show</item>
			<item>show_cursor</item>
			<item>shutdown</item>
			<item>sigchld</item>
			<item>siginh</item>
			<item>sigkill</item>
			<item>signal</item>
			<item>signull</item>
			<item>sigstop</item>
			<item>start</item>
			<item>status</item>
			<item>stop</item>
			<item>swapon</item>
			<item>sys_admin</item>
			<item>sys_boot</item>
			<item>sys_chroot</item>
			<item>sys_module</item>
			<item>sys_nice</item>
			<item>sys_pacct</item>
			<item>sys_ptrace</item>
			<item>sys_rawio</item>
			<item>sys_resource</item>
			<item>sys_time</item>
			<item>sys_tty_config</item>
			<item>syslog</item>
			<item>syslog_console</item>
			<item>syslog_mod</item>
			<item>syslog_read</item>
			<item>tcp_recv</item>
			<item>tcp_send</item>
			<item>transfer</item>
			<item>transition</item>
			<item>translate</item>
			<item>udp_recv</item>
			<item>udp_send</item>
			<item>uninstall</item>
			<item>unix_read</item>
			<item>unix_write</item>
			<item>unlink</item>
			<item>unmount</item>
			<item>update</item>
			<item>use</item>
			<item>use_as_override</item>
			<item>validate_trans</item>
			<item>view</item>
			<item>wake_alarm</item>
			<item>write</item>
		</list>

		<list name="filesystem">
			<!-- VFS Types -->
			<item>autofs</item>
			<item>bdev</item>
			<item>bpf</item>
			<item>cachefs</item>
			<item>cgroup</item>
			<item>cgroup2</item>
			<item>cifs</item>
			<item>coherent</item>
			<item>configfs</item>
			<item>cpuset</item>
			<item>cramfs</item>
			<item>debugfs</item>
			<item>devfs</item>
			<item>devpts</item>
			<item>devtmpfs</item>
			<item>ecryptfs</item>
			<item>efs</item>
			<item>fuse</item>
			<item>fuseblk</item>
			<item>fusectl</item>
			<item>hugetlbfs</item>
			<item>iso9660</item>
			<item>kernfs</item>
			<item>mqueue</item>
			<item>pipefs</item>
			<item>proc</item>
			<item>procfs</item>
			<item>pstore</item>
			<item>ramfs</item>
			<item>romfs</item>
			<item>rootfs</item>
			<item>securityfs</item>
			<item>selinuxfs</item>
			<item>sockfs</item>
			<item>specfs</item>
			<item>squashfs</item>
			<item>swapfs</item>
			<item>sysfs</item>
			<item>sysv</item>
			<item>tmpfs</item>
			<item>usbfs</item>
			<item>vfat</item>
			<!-- FS Types -->
			<item>adfs</item>
			<item>affs</item>
			<item>apfs</item>
			<item>btrfs</item>
			<item>coda</item>
			<item>exfat</item>
			<item>ext2</item>
			<item>ext3</item>
			<item>ext4</item>
			<item>f2fs</item>
			<item>fatx</item>
			<item>hfs</item>
			<item>hfsplus</item>
			<item>hpfs</item>
			<item>jfs</item>
			<item>lvm2</item>
			<item>minix</item>
			<item>msdos</item>
			<item>ncpfs</item>
			<item>nilfs</item>
			<item>nilfs2</item>
			<item>nfs</item>
			<item>nfs4</item>
			<item>ntfs-3g</item>
			<item>qnx4</item>
			<item>qnx6</item>
			<item>reiser4</item>
			<item>reiserfs</item>
			<item>smbfs</item>
			<item>swap</item>
			<item>tracefs</item>
			<item>ubifs</item>
			<item>udf</item>
			<item>ufs</item>
			<item>umsdos</item>
			<item>urefs</item>
			<item>xenix</item>	
			<item>xfs</item>
			<item>zfs</item>
		</list>

		<contexts>
			
			<context name="_normal" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar context="_rule_bracket_level1" attribute="Brackets1" char="("/>
				<DetectChar context="#stay" attribute="Error"  char=")"/>
				<IncludeRules context="_common"/>
			</context>
			<context name="_common" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar context="_comment" attribute="Comment" char=";"/>
				<DetectChar context="_quoted" attribute="Text Quoted" char="&quot;"/>
				<RegExpr context="_path_content" attribute="Path" String="/(?![\s\(\)&quot;/])" insensitive="true"/>
				<RegExpr context="#stay" attribute="Path" String="/(?=([\s\(\)]|$))" insensitive="true"/>
				<!-- IPv4 -->
				<RegExpr context="#stay" attribute="IP Address" String="\b((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\b"/>
				<!-- IPv6 -->
				<RegExpr context="#stay" attribute="IP Address" String="\b([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:([0-9A-Fa-f]{1,4}:[0-9A-Fa-f]{0,4}|:[0-9A-Fa-f]{1,4})?|(:[0-9A-Fa-f]{1,4}){0,2})|(:[0-9A-Fa-f]{1,4}){0,3})|(:[0-9A-Fa-f]{1,4}){0,4})|:(:[0-9A-Fa-f]{1,4}){0,5})((:[0-9A-Fa-f]{1,4}){2}|:(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])(\.(25[0-5]|(2[0-4]|1[0-9]|[1-9])?[0-9])){3})|(([0-9A-Fa-f]{1,4}:){1,6}|:):[0-9A-Fa-f]{0,4}|([0-9A-Fa-f]{1,4}:){7}:"/>
				<HlCOct context="#stay" attribute="Octal"/>
        		<HlCHex context="#stay" attribute="Hex"/>
				<RegExpr context="#stay" attribute="Number" String="\b\d+(?=([\s\(\)]|$))"/>
				
				<RegExpr context="#stay" attribute="Normal Text" String="(\b&identifier;)?(\.&identifier;)+(?=([\s\(\)]|$))"/>
				<DetectChar context="#stay" attribute="Special Char" char="*"/>
				<HlCStringChar context="#stay" attribute="Escape Expression"/>
				<!-- File contexts: user_u:role_r:type_t:s0:c0 -->
				<RegExpr context="#stay" attribute="File Contexts" String="\b[^\s:\(\)&quot;]+(:[^\s:\(\)&quot;]+){2}(:[^\s:\(\)&quot;]+)*(?=([^&symbol;]|\s|$))"/>
			</context>

			<context name="_comment" attribute="Comment" lineEndContext="#pop">
				<LineContinue context="#pop" attribute="Comment"/>
				<DetectSpaces />
				<IncludeRules context="##Alerts"/>
				<IncludeRules context="##Modelines"/>
			</context>
			<context name="_quoted" attribute="Text Quoted" lineEndContext="#stay">
				<DetectChar context="#pop" attribute="Text Quoted" char="&quot;"/>
				<DetectChar context="_square_brackets" attribute="Pattern Brackets" char="["/>
				<DetectChar context="_round_brackets" attribute="Pattern Brackets" char="("/>
				<IncludeRules context="_quantification_brackets"/>
				<IncludeRules context="_path_special_chars"/>
			</context>
			<context name="_path_content" attribute="Path" lineEndContext="#pop">
				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<RegExpr context="#pop" attribute="Normal Text" String="[^&symbol;]" lookAhead="true"/>
				<DetectChar context="_square_brackets_path" attribute="Pattern Brackets" char="["/>
				<IncludeRules context="_quantification_brackets"/>
				<IncludeRules context="_path_special_chars"/>
			</context>

			<!-- RULES -->

			<!-- Highlighting specific keywords for some rules -->
			<context name="_filecon_statement" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_default_end"/>
				<keyword context="#pop" attribute="Types" String="file_types"/>
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_portcon_statement" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_default_end"/>
				<keyword context="#pop" attribute="Types" String="protocols"/>
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_fsuse_statement" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_default_end"/>
				<keyword context="#pop" attribute="Types" String="fs_types"/>
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_handleunknown_statement" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_default_end"/>
				<keyword context="#pop" attribute="Access Keys" String="handleunknown_keys"/>
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_default_end" attribute="Normal Text" lineEndContext="#stay">
				<AnyChar context="#pop" attribute="Normal Text" String=")(" lookAhead="true"/>
			</context>

			<context name="_default_statement" attribute="Normal Text" lineEndContext="#stay">
				<WordDetect context="_handleunknown_statement" attribute="Policy Config. Statements" String="handleunknown"/>
				<WordDetect context="_filecon_statement" attribute="Statements" String="filecon"/>
				<WordDetect context="_fsuse_statement" attribute="Statements" String="fsuse"/>
				<WordDetect context="_portcon_statement" attribute="Statements" String="portcon"/>
				
				<keyword context="#stay" attribute="Policy Config. Statements" String="policy_config_statements"/>
				<keyword context="#stay" attribute="Type Statements" String="type_statements"/>
				<keyword context="#stay" attribute="Statements" String="statements"/>
				<keyword context="#stay" attribute="Expression Keys" String="expr_keys"/>
				<keyword context="#stay" attribute="Access Keys" String="access"/>

				<keyword context="#stay" attribute="Booleans" String="booleans"/>
				<keyword context="#stay" attribute="Type Name" String="classorder_keys"/>
				<keyword context="#stay" attribute="Type Name" String="type_name"/>
			</context>
			<context name="_default_rule" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_common"/>
				<keyword context="#stay" attribute="Booleans" String="booleans"/>
				<keyword context="#stay" attribute="Special Keys" String="special_keys"/>

				<WordDetect context="#stay" attribute="Other Keywords" String="&lt;root&gt;"/>
				<WordDetect context="#stay" attribute="Other Keywords" String="&lt;node&gt;"/>
				<WordDetect context="#stay" attribute="Other Keywords" String="&lt;src_info&gt;"/>
				<WordDetect context="#stay" attribute="Other Keywords" String="&lt;src_cil&gt;"/>
				<WordDetect context="#stay" attribute="Other Keywords" String="&lt;src_hll&gt;"/>
				<keyword context="#stay" attribute="Other Keywords" String="other_keywords"/>
				<keyword context="#stay" attribute="Other Keywords" String="filesystem"/>
			</context>
			<context name="_default_rule_without_statement" attribute="Normal Text" lineEndContext="#stay">
				<keyword context="#stay" attribute="Permissions" String="av_permissions"/>
			</context>
			<context name="_default_rule_bracket" attribute="Normal Text" lineEndContext="#stay">
				<DetectSpaces context="#stay" attribute="Normal Text"/>
				<DetectChar context="_comment" attribute="Comment" char=";" />
			</context>

			<!-- Levels of rule brackets.
				 Only the first word of a rule can be highlighted as a statement keyword. -->
			<context name="_rule_bracket_level1" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_without_statement_level1" lineEndContext="#stay">
				<IncludeRules context="_default_rule_bracket"/> <!-- Detect spaces & comments -->
				<RegExpr context="#pop!_statement_level1" attribute="Normal Text" String="&statementchar;" lookAhead="true"/> <!-- Detect first word -->
			</context>
			<context name="_statement_level1" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_level1" lineEndContext="#pop!_rule_level1">
				<IncludeRules context="_default_statement"/>
				<RegExpr context="#pop!_rule_without_statement_level1" attribute="Normal Text" String="&statementchar;+" lookAhead="true"/>
			</context>
			<context name="_rule_level1" attribute="Normal Text" lineEndContext="#stay"> <!-- Rule content -->
				<DetectChar attribute="Brackets2" context="_rule_bracket_level2" char="("/>
				<DetectChar attribute="Brackets1" context="#pop" char=")" />
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_rule_without_statement_level1" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_rule_level1"/>
				<IncludeRules context="_default_rule_without_statement"/>
			</context>
			
			<context name="_rule_bracket_level2" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_without_statement_level2" lineEndContext="#stay">
				<IncludeRules context="_default_rule_bracket"/>
				<RegExpr context="#pop!_statement_level2" attribute="Normal Text" String="&statementchar;" lookAhead="true"/>
			</context>
			<context name="_statement_level2" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_level2" lineEndContext="#pop!_rule_level2">
				<IncludeRules context="_default_statement"/>
				<RegExpr context="#pop!_rule_without_statement_level2" attribute="Normal Text" String="&statementchar;+" lookAhead="true"/>
			</context>			
			<context name="_rule_level2" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar attribute="Brackets3" context="_rule_bracket_level3" char="("/>
				<DetectChar attribute="Brackets2" context="#pop" char=")" />
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_rule_without_statement_level2" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_rule_level2"/>
				<IncludeRules context="_default_rule_without_statement"/>
			</context>

			<context name="_rule_bracket_level3" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_without_statement_level3" lineEndContext="#stay">
				<IncludeRules context="_default_rule_bracket"/>
				<RegExpr context="#pop!_statement_level3" attribute="Normal Text" String="&statementchar;" lookAhead="true"/>
			</context>
			<context name="_statement_level3" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_level3" lineEndContext="#pop!_rule_level3">
				<IncludeRules context="_default_statement"/>
				<RegExpr context="#pop!_rule_without_statement_level3" attribute="Normal Text" String="&statementchar;+" lookAhead="true"/>
			</context>
			<context name="_rule_level3" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar attribute="Brackets4" context="_rule_bracket_level4" char="("/>
				<DetectChar attribute="Brackets3" context="#pop" char=")" />
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_rule_without_statement_level3" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_rule_level3"/>
				<IncludeRules context="_default_rule_without_statement"/>
			</context>

			<context name="_rule_bracket_level4" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_without_statement_level4" lineEndContext="#stay">
				<IncludeRules context="_default_rule_bracket"/>
				<RegExpr context="#pop!_statement_level4" attribute="Normal Text" String="&statementchar;" lookAhead="true"/>
			</context>
			<context name="_statement_level4" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_level4" lineEndContext="#pop!_rule_level4">
				<IncludeRules context="_default_statement"/>
				<RegExpr context="#pop!_rule_without_statement_level4" attribute="Normal Text" String="&statementchar;+" lookAhead="true"/>
			</context>
			<context name="_rule_level4" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar attribute="Brackets5" context="_rule_bracket_level5" char="("/>
				<DetectChar attribute="Brackets4" context="#pop" char=")" />
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_rule_without_statement_level4" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_rule_level4"/>
				<IncludeRules context="_default_rule_without_statement"/>
			</context>

			<context name="_rule_bracket_level5" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_without_statement_level5" lineEndContext="#stay">
				<IncludeRules context="_default_rule_bracket"/>
				<RegExpr context="#pop!_statement_level5" attribute="Normal Text" String="&statementchar;" lookAhead="true"/>
			</context>
			<context name="_statement_level5" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_level5" lineEndContext="#pop!_rule_level5">
				<IncludeRules context="_default_statement"/>
				<RegExpr context="#pop!_rule_without_statement_level5" attribute="Normal Text" String="&statementchar;+" lookAhead="true"/>
			</context>
			<context name="_rule_level5" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar attribute="Brackets6" context="_rule_bracket_level6" char="("/>
				<DetectChar attribute="Brackets5" context="#pop" char=")" />
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_rule_without_statement_level5" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_rule_level5"/>
				<IncludeRules context="_default_rule_without_statement"/>
			</context>

			<context name="_rule_bracket_level6" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_without_statement_level6" lineEndContext="#stay">
				<IncludeRules context="_default_rule_bracket"/>
				<RegExpr context="#pop!_statement_level6" attribute="Normal Text" String="&statementchar;" lookAhead="true"/>
			</context>
			<context name="_statement_level6" attribute="Normal Text" fallthrough="true" fallthroughContext="#pop!_rule_level6" lineEndContext="#pop!_rule_level6">
				<IncludeRules context="_default_statement"/>
				<RegExpr context="#pop!_rule_without_statement_level6" attribute="Normal Text" String="&statementchar;+" lookAhead="true"/>
			</context>
			<context name="_rule_level6" attribute="Normal Text" lineEndContext="#stay">
				<DetectChar attribute="Brackets1" context="_rule_bracket_level1" char="("/>
				<DetectChar attribute="Brackets6" context="#pop" char=")" />
				<IncludeRules context="_default_rule"/>
			</context>
			<context name="_rule_without_statement_level6" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_rule_level6"/>
				<IncludeRules context="_default_rule_without_statement"/>
			</context>

			<!-- Regex (FCGlob?) -->
			<context name="_path_special_chars" attribute="Normal Text" lineEndContext="#stay">
				<IncludeRules context="_special_chars"/>
				<IncludeRules context="_escape"/>
			</context>
			<context name="_special_chars" attribute="Normal Text" lineEndContext="#stay">
				<AnyChar context="#stay" attribute="Special Char" String="*?.+"/>
			</context>
			<context name="_escape" attribute="Normal Text" lineEndContext="#stay">
				<HlCStringChar context="#stay" attribute="Escape Expression"/>
				<RegExpr context="#stay" attribute="Escape Expression" String="\\[\ssSdDwWbBAZiIcC\|\.\-\^\?\*\+\(\)\[\]\{\},]"/>
			</context>
			<context name="_quantification_brackets" attribute="Normal Text" lineEndContext="#stay">
				<!-- {n} {min,} {,max} {min,max} -->
				<RegExpr context="#stay" attribute="Pattern Brackets" String="\{(\d+(,\d*)?|,\d+)\}"/>
			</context>
			<!-- Groups: [ ] and ( ) -->
			<context name="_square_brackets" attribute="Pattern Brackets" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Pattern Brackets" char="]"/>
				<IncludeRules context="_escape"/>

				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<DetectChar context="#pop" attribute="Normal Text" char="&quot;" lookAhead="true"/>
				<DetectChar context="#stay" attribute="Error" char="["/>
				<RegExpr context="#stay" attribute="Open Pattern Brackets" String="[^\s\]](?=([\s&quot;]|$))"/>
				
				<AnyChar context="#stay" attribute="Special Char 2" String="^-"/>
				<IncludeRules context="_special_chars"/>
			</context>
			<context name="_round_brackets" attribute="Pattern Brackets" lineEndContext="#pop">
				<DetectChar context="#pop" attribute="Pattern Brackets" char=")"/>
				<IncludeRules context="_escape"/>

				<DetectSpaces context="#pop" attribute="Normal Text" lookAhead="true"/>
				<DetectChar context="#pop" attribute="Normal Text" char="&quot;" lookAhead="true"/>
				<DetectChar context="_square_brackets" attribute="Pattern Brackets" char="["/>
				<DetectChar context="_round_brackets" attribute="Pattern Brackets" char="("/>
				<IncludeRules context="_quantification_brackets"/>
				<RegExpr context="#stay" attribute="Open Pattern Brackets" String="[^\s\[\]\(\)](?=([\s&quot;]|$))"/>

				<DetectChar context="#stay" attribute="Special Char 2" char="|"/>
				<IncludeRules context="_special_chars"/>
			</context>
			<context name="_square_brackets_path" attribute="Pattern Brackets" lineEndContext="#pop">
				<RegExpr context="#pop" attribute="Normal Text" String="[^&symbol;]" lookAhead="true"/>
				<RegExpr context="#stay" attribute="Open Pattern Brackets" String="[^\s\]](?![&symbol;])"/>
				<IncludeRules context="_square_brackets"/>
			</context>
			
		</contexts>

		<itemDatas>
			<itemData name="Normal Text" defStyleNum="dsNormal" spellChecking="false"/>
			<itemData name="Comment"     defStyleNum="dsComment"/>
			<itemData name="Text Quoted" defStyleNum="dsString" spellChecking="false"/>
			<itemData name="Path"        defStyleNum="dsNormal" spellChecking="false"/>

			<itemData name="Statements"                defStyleNum="dsKeyword"      bold="1" spellChecking="false"/>
			<itemData name="Type Statements"           defStyleNum="dsFunction"     bold="1" spellChecking="false"/>
			<itemData name="Policy Config. Statements" defStyleNum="dsPreprocessor" bold="1" spellChecking="false"/>
			<itemData name="Access Keys"               defStyleNum="dsWarning"      bold="1" spellChecking="false"/>
			<itemData name="Expression Keys"           defStyleNum="dsVariable"     bold="1" spellChecking="false"/>
			<itemData name="Type Name"                 defStyleNum="dsDataType"     bold="1" spellChecking="false"/>
			<itemData name="Booleans"                  defStyleNum="dsExtension"    bold="1" spellChecking="false"/>

			<itemData name="Types"          defStyleNum="dsDataType"       spellChecking="false"/>
			<itemData name="Special Keys"   defStyleNum="dsOthers"         spellChecking="false"/>
			<itemData name="Permissions"    defStyleNum="dsVerbatimString" spellChecking="false"/>
			<itemData name="File Contexts"  defStyleNum="dsSpecialString"  spellChecking="false"/>
			<itemData name="Other Keywords" defStyleNum="dsNormal"         italic="1" spellChecking="false"/>

			<itemData name="IP Address" defStyleNum="dsFloat"  spellChecking="false"/>
			<itemData name="Number"     defStyleNum="dsDecVal" spellChecking="false"/>
			<itemData name="Octal"      defStyleNum="dsBaseN"  spellChecking="false"/>
			<itemData name="Hex"        defStyleNum="dsBaseN"  spellChecking="false"/>
	
			<itemData name="Brackets1" defStyleNum="dsNormal" color="#ff0000" bold="1" />
			<itemData name="Brackets2" defStyleNum="dsNormal" color="#ff8800" bold="1" />
			<itemData name="Brackets3" defStyleNum="dsNormal" color="#888800" bold="1" />
			<itemData name="Brackets4" defStyleNum="dsNormal" color="#008800" bold="1" />
			<itemData name="Brackets5" defStyleNum="dsNormal" color="#000088" bold="1" />
			<itemData name="Brackets6" defStyleNum="dsNormal" color="#880088" bold="1" />

			<itemData name="Special Char"          defStyleNum="dsSpecialChar"   spellChecking="false"/>
			<itemData name="Special Char 2"        defStyleNum="dsAnnotation"    spellChecking="false"/>
			<itemData name="Pattern Brackets"      defStyleNum="dsSpecialString" spellChecking="false"/>
			<itemData name="Open Pattern Brackets" defStyleNum="dsSpecialString" underline="1" spellChecking="false"/>
			<itemData name="Escape Expression"     defStyleNum="dsSpecialChar"   spellChecking="false"/>
			<itemData name="Error" defStyleNum="dsError" spellChecking="false"/>
		</itemDatas>

	</highlighting>

	<general>
		<keywords casesensitive="true" additionalDeliminator="'&quot;&#096;&#039;" />
		<comments>
			<comment name="singleLine" start=";"/>
		</comments>
	</general>

</language>
