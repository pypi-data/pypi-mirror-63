name = string(default = default)
ncores = integer(min = -1, default = -1)

[Calibration]
extend = boolean(default = True)
usetheoretical = boolean(default = False)

[Decimation]
numlevels = integer(min = 1, max = 10, default = 7)
minsamples = integer(min = 50, default = 100)

[Frequencies]
frequencies = float_list(default = list())
perlevel = integer(min = 1, max = 10, default = 7)

[Window]
minwindows = integer(min = 1, default = 5)
windowfactor = float(min = 1, default = 2)
minwindowsize = integer(min = 32, default = 512)
minoverlapsize = integer(min = 8, default = 128)
overlapfraction = float(min = 0.0, max = 0.5, default = 0.25)
windowsizes = int_list(default = list())
overlapsizes = int_list(default = list())

[Spectra]
specdir = string(default="spectra")
applywindow = boolean(default = True)
windowfunc = option("barthann", "bartlett", "blackman", "blackmanharis", "bohman", "chebwin", "hamming", "hann", "nuttall", "parzen", default = "hamming")
ncores = integer(min = -1, default = -1)

[Statistics]
stats = string_list(default = list("coherence", "transferFunction"))
remotestats = string_list(default = list("RR_coherence", "RR_transferFunction"))
ncores = integer(min = -1, default = -1)

[Solver]
intercept = boolean(default = False)
bootstrap = boolean(default = True)
method = option("ols", "mmestimate", "cm" default = "cm")
windowfunc = option("barthann", "bartlett", "blackman", "blackmanharis", "bohman", "chebwin", "hamming", "hann", "nuttall", "parzen", default = "hamming")
ncores = integer(min = -1, default = -1)
